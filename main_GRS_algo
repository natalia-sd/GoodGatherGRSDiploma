{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "toc_visible": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "source": [
        "from IPython.display import clear_output\n",
        "\n",
        "!pip3 install lightfm\n",
        "!pip install gspread google-auth\n",
        "clear_output()"
      ],
      "metadata": {
        "id": "8weD5DHbpTU3"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "rTqB1SxMrxo6"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from lightfm import LightFM\n",
        "from lightfm.data import Dataset\n",
        "from scipy import sparse\n",
        "\n",
        "import pickle\n",
        "import random\n",
        "from sklearn.preprocessing import Normalizer, StandardScaler, MinMaxScaler\n",
        "from google.colab import files\n",
        "import time\n",
        "\n",
        "from google.colab import drive\n",
        "from google.colab import auth\n",
        "from google.auth import default\n",
        "import gspread"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Good Gather GRS развернутая\n",
        "\n"
      ],
      "metadata": {
        "id": "ESmcdxaf88DI"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# задачем название колонки в которой лежит вес пользователей для агрегации\n",
        "INDIVIDUAL_COEF = 'final_coef'\n",
        "# параметры модели\n",
        "# если поставить в модели n_components > чем вторая размерность\n",
        "# user_features (сейчас она 13), то групповой предикт не будет работать\n",
        "# если поставить равный то будет работать\n",
        "COMPONENTS = 10\n",
        "IDENTITY = True"
      ],
      "metadata": {
        "id": "ri6aYDfkawbi"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# каталог мероприятий в сыром виде\n",
        "event_data = pd.read_excel('events.xlsx')\n",
        "# данные о пои, юзерах и трен взаимодействиях\n",
        "train_event_features = pd.read_csv('encoded_items_train.csv')\n",
        "test_event_features = pd.read_csv('encoded_items_test.csv')\n",
        "user_features_data = pd.read_csv('user_traits.csv')\n",
        "train_interactions = pd.read_csv('interactions_train.csv', index_col=0)\n",
        "\n",
        "\n",
        "train_event_features = train_event_features.rename(columns={'id': 'item_id'})\n",
        "train_event_features['item_id'] = train_event_features['item_id'].astype(str)\n",
        "test_event_features = test_event_features.rename(columns={'id': 'item_id'})\n",
        "test_event_features['item_id'] = test_event_features['item_id'].astype(str)\n",
        "train_interactions.columns = train_interactions.columns.astype(str)\n",
        "# делаем 1 из дизлайка и 5 из лайка\n",
        "train_interactions = train_interactions.replace(1, 5).replace(-1, 1)\n",
        "\n",
        "\n",
        "# from sklearn.feature_extraction.text import TfidfVectorizer\n",
        "# # надо будет добавить описание в фичи\n",
        "# vectorizer = TfidfVectorizer(max_features=100)\n",
        "# item_features = vectorizer.fit_transform(train_event_features['desc'])\n",
        "# item_features2 = vectorizer.fit_transform(test_event_features['desc'])\n",
        "\n",
        "user_features_data = user_features_data.rename(columns={'name': 'user_id'})\n",
        "user_features_data = user_features_data.drop(\n",
        "    list(set([\n",
        "        'mood',\n",
        "        'Соперничество',\n",
        "        'Сотрудничество',\n",
        "        'Компромисс',\n",
        "        'Избегание',\n",
        "        'Приспособление',\n",
        "        'conflict_coef',\n",
        "        'Extraversion',\n",
        "        'Agreableness',\n",
        "        'Conscientiousness',\n",
        "        'Neuroticism',\n",
        "        'Openness',\n",
        "        'character_coef',\n",
        "        'final_coef',\n",
        "        'final_coef_scaled',\n",
        "    ]) - {INDIVIDUAL_COEF}),\n",
        "    axis=1,\n",
        ")"
      ],
      "metadata": {
        "id": "QpPH6gvx88Dl"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "user_features_data"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        },
        "id": "NyHVaHRQxK3g",
        "outputId": "38c106d0-d418-49da-d9c2-619983990cff"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  user_id  age  income  final_coef  residence_moscow  residence_nnovgorod  \\\n",
              "0    Окси   24       3    0.760000                 1                    0   \n",
              "1    Катя   23       1    1.216154                 0                    1   \n",
              "2     Ксю   23       3    0.603750                 1                    0   \n",
              "3    Лиза   22       2    1.014444                 0                    1   \n",
              "4     Ира   24       2    1.700000                 0                    1   \n",
              "5     Аня   23       2    1.666000                 0                    1   \n",
              "\n",
              "   fulltime_work  student  unemployed  \n",
              "0              1        0           0  \n",
              "1              0        1           1  \n",
              "2              1        0           0  \n",
              "3              1        1           0  \n",
              "4              1        1           0  \n",
              "5              1        0           0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-61cca1bf-9f50-4031-bfe5-bfc64e78d5c0\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>user_id</th>\n",
              "      <th>age</th>\n",
              "      <th>income</th>\n",
              "      <th>final_coef</th>\n",
              "      <th>residence_moscow</th>\n",
              "      <th>residence_nnovgorod</th>\n",
              "      <th>fulltime_work</th>\n",
              "      <th>student</th>\n",
              "      <th>unemployed</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Окси</td>\n",
              "      <td>24</td>\n",
              "      <td>3</td>\n",
              "      <td>0.760000</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Катя</td>\n",
              "      <td>23</td>\n",
              "      <td>1</td>\n",
              "      <td>1.216154</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Ксю</td>\n",
              "      <td>23</td>\n",
              "      <td>3</td>\n",
              "      <td>0.603750</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Лиза</td>\n",
              "      <td>22</td>\n",
              "      <td>2</td>\n",
              "      <td>1.014444</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Ира</td>\n",
              "      <td>24</td>\n",
              "      <td>2</td>\n",
              "      <td>1.700000</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Аня</td>\n",
              "      <td>23</td>\n",
              "      <td>2</td>\n",
              "      <td>1.666000</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-61cca1bf-9f50-4031-bfe5-bfc64e78d5c0')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-61cca1bf-9f50-4031-bfe5-bfc64e78d5c0 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-61cca1bf-9f50-4031-bfe5-bfc64e78d5c0');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-ebf5e572-5375-4fc1-9318-8b116346f93d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ebf5e572-5375-4fc1-9318-8b116346f93d')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-ebf5e572-5375-4fc1-9318-8b116346f93d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "user_features_data",
              "summary": "{\n  \"name\": \"user_features_data\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"user_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"\\u041e\\u043a\\u0441\\u0438\",\n          \"\\u041a\\u0430\\u0442\\u044f\",\n          \"\\u0410\\u043d\\u044f\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 22,\n        \"max\": 24,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          24,\n          23,\n          22\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3,\n          1,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"final_coef\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.456374783913529,\n        \"min\": 0.60375,\n        \"max\": 1.7000000004,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0.760000000038,\n          1.21615384644,\n          1.666\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"residence_moscow\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"residence_nnovgorod\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fulltime_work\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"student\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"unemployed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 40
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "scaler = MinMaxScaler()\n",
        "\n",
        "user_features_data[['age', 'income']] = scaler.fit_transform(user_features_data[['age', 'income']])\n",
        "user_features_data"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        },
        "outputId": "7eabefca-1d7a-4745-ee17-e00985200194",
        "id": "xRA14BC588Dl"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  user_id  age  income  final_coef  residence_moscow  residence_nnovgorod  \\\n",
              "0    Окси  1.0     1.0    0.760000                 1                    0   \n",
              "1    Катя  0.5     0.0    1.216154                 0                    1   \n",
              "2     Ксю  0.5     1.0    0.603750                 1                    0   \n",
              "3    Лиза  0.0     0.5    1.014444                 0                    1   \n",
              "4     Ира  1.0     0.5    1.700000                 0                    1   \n",
              "5     Аня  0.5     0.5    1.666000                 0                    1   \n",
              "\n",
              "   fulltime_work  student  unemployed  \n",
              "0              1        0           0  \n",
              "1              0        1           1  \n",
              "2              1        0           0  \n",
              "3              1        1           0  \n",
              "4              1        1           0  \n",
              "5              1        0           0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ba31082f-c004-468a-a604-a8015b075f20\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>user_id</th>\n",
              "      <th>age</th>\n",
              "      <th>income</th>\n",
              "      <th>final_coef</th>\n",
              "      <th>residence_moscow</th>\n",
              "      <th>residence_nnovgorod</th>\n",
              "      <th>fulltime_work</th>\n",
              "      <th>student</th>\n",
              "      <th>unemployed</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Окси</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.760000</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Катя</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.216154</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Ксю</td>\n",
              "      <td>0.5</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.603750</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Лиза</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>1.014444</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Ира</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>1.700000</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Аня</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>1.666000</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ba31082f-c004-468a-a604-a8015b075f20')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ba31082f-c004-468a-a604-a8015b075f20 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ba31082f-c004-468a-a604-a8015b075f20');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-3c76b56c-c2c6-4e0c-87f4-c48a752a2855\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3c76b56c-c2c6-4e0c-87f4-c48a752a2855')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-3c76b56c-c2c6-4e0c-87f4-c48a752a2855 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "user_features_data",
              "summary": "{\n  \"name\": \"user_features_data\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"user_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"\\u041e\\u043a\\u0441\\u0438\",\n          \"\\u041a\\u0430\\u0442\\u044f\",\n          \"\\u0410\\u043d\\u044f\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3763863263545405,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1.0,\n          0.5,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3763863263545405,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1.0,\n          0.0,\n          0.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"final_coef\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.456374783913529,\n        \"min\": 0.60375,\n        \"max\": 1.7000000004,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0.760000000038,\n          1.21615384644,\n          1.666\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"residence_moscow\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"residence_nnovgorod\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fulltime_work\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"student\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"unemployed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 41
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# открывает таблицу с рассчиитанным коэффициентом\n",
        "drive.mount('/content/drive')\n",
        "auth.authenticate_user()\n",
        "creds, _ = default()\n",
        "gc = gspread.authorize(creds)\n",
        "\n",
        "spreadsheet = gc.open('Результаты TKI')\n",
        "worksheet = spreadsheet.get_worksheet(6)\n",
        "data = worksheet.get_all_values()\n",
        "headers = data.pop(0)\n",
        "\n",
        "df = pd.DataFrame(data, columns=headers)\n",
        "user_features_data = user_features_data.drop('final_coef', axis=1)\\\n",
        "                                       .merge(\n",
        "                                           df[['', 'final_coef']].rename(columns={'':'user_id'}),\n",
        "                                           how='left',\n",
        "                                           on='user_id'\n",
        "                                           )\n",
        "user_features_data.final_coef = user_features_data.final_coef.str.replace(',', '.').astype(float)\n",
        "display(user_features_data)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        },
        "id": "iw9ma36PZGGz",
        "outputId": "b8ca6b49-e97e-454c-9c5f-3b7e407f30f0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "  user_id  age  income  residence_moscow  residence_nnovgorod  fulltime_work  \\\n",
              "0    Окси  1.0     1.0                 1                    0              1   \n",
              "1    Катя  0.5     0.0                 0                    1              0   \n",
              "2     Ксю  0.5     1.0                 1                    0              1   \n",
              "3    Лиза  0.0     0.5                 0                    1              1   \n",
              "4     Ира  1.0     0.5                 0                    1              1   \n",
              "5     Аня  0.5     0.5                 0                    1              1   \n",
              "\n",
              "   student  unemployed  final_coef  \n",
              "0        0           0       0.500  \n",
              "1        1           1       1.229  \n",
              "2        0           0       0.403  \n",
              "3        1           0       0.733  \n",
              "4        1           0       1.452  \n",
              "5        0           0       1.232  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1486522d-1c6c-4f81-8440-dbb80d4644cf\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>user_id</th>\n",
              "      <th>age</th>\n",
              "      <th>income</th>\n",
              "      <th>residence_moscow</th>\n",
              "      <th>residence_nnovgorod</th>\n",
              "      <th>fulltime_work</th>\n",
              "      <th>student</th>\n",
              "      <th>unemployed</th>\n",
              "      <th>final_coef</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Окси</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Катя</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1.229</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Ксю</td>\n",
              "      <td>0.5</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.403</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Лиза</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.733</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Ира</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1.452</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Аня</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.232</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1486522d-1c6c-4f81-8440-dbb80d4644cf')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-1486522d-1c6c-4f81-8440-dbb80d4644cf button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-1486522d-1c6c-4f81-8440-dbb80d4644cf');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b74d23da-20a4-4ffc-87a2-fd5311de2daf\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b74d23da-20a4-4ffc-87a2-fd5311de2daf')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b74d23da-20a4-4ffc-87a2-fd5311de2daf button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "user_features_data",
              "summary": "{\n  \"name\": \"user_features_data\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"user_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"\\u041e\\u043a\\u0441\\u0438\",\n          \"\\u041a\\u0430\\u0442\\u044f\",\n          \"\\u0410\\u043d\\u044f\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3763863263545405,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1.0,\n          0.5,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3763863263545405,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1.0,\n          0.0,\n          0.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"residence_moscow\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"residence_nnovgorod\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fulltime_work\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"student\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"unemployed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"final_coef\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.43689056600785814,\n        \"min\": 0.403,\n        \"max\": 1.452,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0.5,\n          1.229\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# user_features_data.loc[0, 'final_coef'] = 0.5\n",
        "# user_features_data.loc[1, 'final_coef'] = 1.229\n",
        "# user_features_data.loc[2, 'final_coef'] = 0.403\n",
        "# user_features_data.loc[3, 'final_coef'] = 0.733\n",
        "# user_features_data.loc[4, 'final_coef'] = 1.452\n",
        "# user_features_data.loc[5, 'final_coef'] = 1.232\n",
        "\n",
        "'''\n",
        "\"0,403\" ксю\n",
        "\"1,232\" аня\n",
        "\"0,733\" лиза\n",
        "\"1,229\" катя\n",
        "\"1,452\" ира\n",
        "\"0,500\" окси\n",
        "'''"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "id": "E4Nl1DEDRzKL",
        "outputId": "08a05393-ef25-442f-ee98-0d8ed9d71494"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'\\n\"0,403\" ксю\\n\"1,232\" аня\\n\"0,733\" лиза\\n\"1,229\" катя\\n\"1,452\" ира\\n\"0,500\" окси\\n'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# открывает таблицу с собранным настроением\n",
        "spreadsheet = gc.open('Онбординг (Ответы)')\n",
        "\n",
        "worksheet = spreadsheet.get_worksheet(0)\n",
        "data = worksheet.get_all_values()\n",
        "headers = data.pop(0)\n",
        "\n",
        "moods = pd.DataFrame(data, columns=headers)\n",
        "user_features_data = user_features_data.merge(\n",
        "                        moods[['Имя', 'Настроение']].rename(\n",
        "                            columns={'Имя':'user_id',\n",
        "                                     'Настроение': 'moods'}),\n",
        "                        how='left',\n",
        "                        on='user_id'\n",
        "                        )\n",
        "user_features_data.moods = user_features_data.moods.apply(lambda x: [str(m).strip() for m in x.split(',')])\n",
        "user_features_data"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 448
        },
        "id": "Q0yKfVvlVsuz",
        "outputId": "f3910926-bf45-429b-e764-815c19fd6db9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  user_id  age  income  residence_moscow  residence_nnovgorod  fulltime_work  \\\n",
              "0    Окси  1.0     1.0                 1                    0              1   \n",
              "1    Катя  0.5     0.0                 0                    1              0   \n",
              "2     Ксю  0.5     1.0                 1                    0              1   \n",
              "3    Лиза  0.0     0.5                 0                    1              1   \n",
              "4     Ира  1.0     0.5                 0                    1              1   \n",
              "5     Аня  0.5     0.5                 0                    1              1   \n",
              "\n",
              "   student  unemployed  final_coef                                moods  \n",
              "0        0           0       0.500      [Уставшее, Спокойное, Грустное]  \n",
              "1        1           1       1.229                [Уставшее, Спокойное]  \n",
              "2        0           0       0.403   [Приподнятое, Спокойное, Уставшее]  \n",
              "3        1           0       0.733   [Радостное, Спокойное, Счастливое]  \n",
              "4        1           0       1.452      [Апатичное, Тревожное, Ленивое]  \n",
              "5        0           0       1.232  [Раздраженное, Апатичное, Уставшее]  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b6d7e733-8ce5-4d60-8272-1c6f11ed4b1d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>user_id</th>\n",
              "      <th>age</th>\n",
              "      <th>income</th>\n",
              "      <th>residence_moscow</th>\n",
              "      <th>residence_nnovgorod</th>\n",
              "      <th>fulltime_work</th>\n",
              "      <th>student</th>\n",
              "      <th>unemployed</th>\n",
              "      <th>final_coef</th>\n",
              "      <th>moods</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Окси</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.500</td>\n",
              "      <td>[Уставшее, Спокойное, Грустное]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Катя</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1.229</td>\n",
              "      <td>[Уставшее, Спокойное]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Ксю</td>\n",
              "      <td>0.5</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.403</td>\n",
              "      <td>[Приподнятое, Спокойное, Уставшее]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Лиза</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.733</td>\n",
              "      <td>[Радостное, Спокойное, Счастливое]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Ира</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1.452</td>\n",
              "      <td>[Апатичное, Тревожное, Ленивое]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Аня</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.232</td>\n",
              "      <td>[Раздраженное, Апатичное, Уставшее]</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b6d7e733-8ce5-4d60-8272-1c6f11ed4b1d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b6d7e733-8ce5-4d60-8272-1c6f11ed4b1d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b6d7e733-8ce5-4d60-8272-1c6f11ed4b1d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-bed37de6-a367-4eea-b1a5-1e382012b658\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bed37de6-a367-4eea-b1a5-1e382012b658')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-bed37de6-a367-4eea-b1a5-1e382012b658 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "user_features_data",
              "summary": "{\n  \"name\": \"user_features_data\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"user_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"\\u041e\\u043a\\u0441\\u0438\",\n          \"\\u041a\\u0430\\u0442\\u044f\",\n          \"\\u0410\\u043d\\u044f\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3763863263545405,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1.0,\n          0.5,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3763863263545405,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1.0,\n          0.0,\n          0.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"residence_moscow\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"residence_nnovgorod\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fulltime_work\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"student\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"unemployed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"final_coef\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.43689056600785814,\n        \"min\": 0.403,\n        \"max\": 1.452,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0.5,\n          1.229\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"moods\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 43
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dataset = Dataset(user_identity_features=IDENTITY, item_identity_features=IDENTITY)\n",
        "\n",
        "dataset.fit(\n",
        "    users=user_features_data['user_id'],\n",
        "    # придется запихнуть все разом, потому что иначе не получится дообучить модель\n",
        "    # она после добавление взаимодействий ругается что item фичи не совпадают в размере\n",
        "    items=pd.concat([train_event_features, test_event_features], axis=0)['item_id'],\n",
        "    user_features=user_features_data.drop(\n",
        "        ['user_id', INDIVIDUAL_COEF, 'moods'], axis=1\n",
        "        ).columns.tolist(),\n",
        "    item_features=train_event_features.drop(\n",
        "        ['item_id'], axis=1\n",
        "    ).columns.tolist(),  # трейн потому что колонки одинаковые\n",
        ")"
      ],
      "metadata": {
        "id": "qmlqhzOo88Dm"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(\n",
        "    dataset.interactions_shape(),\n",
        "    dataset.item_features_shape(),\n",
        "    # dataset.mapping(),\n",
        "    dataset.model_dimensions(),\n",
        "    dataset.user_features_shape(),\n",
        ")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "07L_1NiSpS67",
        "outputId": "5b5e5e36-4a22-4da6-c2cc-11da4f6bb1a7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(6, 202) (202, 250) (13, 250) (6, 13)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# dataset.mapping()"
      ],
      "metadata": {
        "id": "GLYxbgY5yXr-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "user_features = dataset.build_user_features(\n",
        "    (\n",
        "        (x['user_id'], {f: x[f] for f in user_features_data.drop([INDIVIDUAL_COEF, 'moods'], axis=1).columns if f != 'user_id'})\n",
        "        for _, x in user_features_data.drop([INDIVIDUAL_COEF, 'moods'], axis=1).iterrows()\n",
        "    ), normalize=False\n",
        ")\n",
        "\n",
        "\n",
        "train_item_features = dataset.build_item_features(\n",
        "    (\n",
        "        (x['item_id'], {f: x[f] for f in train_event_features.columns if f != 'item_id'})\n",
        "        for _, x in train_event_features.iterrows()\n",
        "    ), normalize=False\n",
        ")\n",
        "\n",
        "\n",
        "# test_item_features = dataset.build_item_features(\n",
        "#     (\n",
        "#         (x['item_id'].astype(int)), {f: x[f] for f in test_event_features.columns if f != 'item_id'})\n",
        "#     for _, x in test_event_features.iterrows()\n",
        "# )\n",
        "\n",
        "# создаем разреженную матрицу взаимодействий\n",
        "interaction_matrix = sparse.csr_matrix(train_interactions.values)"
      ],
      "metadata": {
        "id": "POp3Gd9PdEkc"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(\n",
        "    dataset.interactions_shape(),\n",
        "    dataset.item_features_shape(),\n",
        "    # dataset.mapping(),\n",
        "    dataset.model_dimensions(),\n",
        "    dataset.user_features_shape(),\n",
        ")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "C9VpL_7mfB79",
        "outputId": "b2e9ee22-db45-4c9c-83fc-e62261fde0bd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(6, 202) (202, 250) (13, 250) (6, 13)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "user_features"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "f7NYTmZa72_m",
        "outputId": "89584d45-c5f3-4054-ff2e-f30617f88ea4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<6x13 sparse matrix of type '<class 'numpy.float32'>'\n",
              "\twith 48 stored elements in Compressed Sparse Row format>"
            ]
          },
          "metadata": {},
          "execution_count": 50
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "train_item_features"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OGdix_6d7T4r",
        "outputId": "ea03e8b5-7984-4b6d-cb42-7916a1908caf"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<202x250 sparse matrix of type '<class 'numpy.float32'>'\n",
              "\twith 6250 stored elements in Compressed Sparse Row format>"
            ]
          },
          "metadata": {},
          "execution_count": 51
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model = LightFM(loss='warp',\n",
        "                # learning_schedule='adagrad',\n",
        "                no_components=COMPONENTS,\n",
        "                # learning_rate=0.58,\n",
        "                random_state=42)\n",
        "\n",
        "model.fit(\n",
        "    interactions=interaction_matrix,  # train_data,\n",
        "    user_features=user_features,\n",
        "    item_features=train_item_features,\n",
        "    epochs=30,\n",
        "    num_threads=1\n",
        ")\n",
        "# print('after fit', model.user_embeddings.shape[0])\n",
        "\n",
        "# сохраняем текущую модель\n",
        "with open('ind_pref_based_model.pkl', 'wb') as model_file:\n",
        "    pickle.dump(model, model_file)"
      ],
      "metadata": {
        "id": "OmVvrJ3VYak3"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def get_user_profile(md, ds, user_id, ufm):\n",
        "    user_internal_id = ds.mapping()[0][user_id]\n",
        "    return md.get_user_representations(ufm)[1][user_internal_id]\n",
        "\n",
        "def calculate_mood_weight(moods):\n",
        "    base_weight = 0\n",
        "    mood_effect = {\n",
        "        'support': ['грустное', 'подавленное', 'уставшее', 'ленивое',\n",
        "                   'апатичное', 'тревожное', 'испуганное'],\n",
        "        'restrain': ['взволнованное', 'гиперактивное', 'раздраженное',\n",
        "                     'счастливое'],\n",
        "        'neutral': ['радостное', 'приподнятое', 'спокойное']\n",
        "    }\n",
        "\n",
        "    for mood in moods:\n",
        "        if mood.lower() in mood_effect['support']:\n",
        "            base_weight += 0.5\n",
        "        elif mood.lower() in mood_effect['restrain']:\n",
        "            base_weight -= 0.5\n",
        "\n",
        "    return 1 + base_weight / len(moods)\n",
        "\n",
        "# Агрегация профилей пользователей с учетом весов\n",
        "def get_user_weight(user_row, col):\n",
        "    # тут можно усложнить расчет весов\n",
        "    # настроения обязательно лежат в юзер фичах в колонке moods в виде списка\n",
        "    mood_weight = calculate_mood_weight(user_row['moods'])\n",
        "    return user_row[col] * mood_weight # ** 2\n",
        "\n",
        "\n",
        "\n",
        "def aggregate_user_profiles(md, ds, ufd, ufm, user_ids, user_weights, k=0):\n",
        "    group_profile = np.zeros(md.get_user_representations(ufm)[1].shape[1])  # одномерный вектор размера n_components 10\n",
        "    total_weight = 0\n",
        "    for user_id in user_ids:\n",
        "        user_idx = ufd.index[ufd['user_id'] == user_id].tolist()[0]\n",
        "        user_profile = get_user_profile(md, ds, user_id, ufm)\n",
        "        user_weight = get_user_weight(ufd.iloc[user_idx], user_weights)\n",
        "        group_profile += user_profile * user_weight\n",
        "        total_weight += user_weight\n",
        "\n",
        "    if total_weight > 0:\n",
        "      # аргумент k можно использовать для усиления влияния весов\n",
        "        group_profile /= total_weight - total_weight * k\n",
        "\n",
        "    return group_profile\n",
        "\n",
        "\n",
        "# без весов\n",
        "def aggregate_user_profiles_plain(md, ds, ufm, user_ids):\n",
        "    group_profile = None\n",
        "    num_users = len(user_ids)\n",
        "\n",
        "    for user_id in user_ids:\n",
        "        user_profile = get_user_profile(md, ds, user_id, ufm)\n",
        "        if group_profile is None:\n",
        "            group_profile = np.zeros_like(user_profile)\n",
        "        group_profile += user_profile\n",
        "\n",
        "    group_profile /= num_users\n",
        "    return group_profile\n",
        "\n",
        "\n",
        "def get_group_recommendations(md, ds, gp, test_item_features, test_events, ufm, n=20):\n",
        "    _, _, item_mapping, _ = ds.mapping()\n",
        "    internal_item_ids = [item_mapping[item_id] for item_id in test_events['item_id']]\n",
        "    group_features = sparse.csr_matrix(gp.reshape(1, -1))\n",
        "    scores = md.predict(\n",
        "        user_ids=np.zeros(\n",
        "            len(internal_item_ids), dtype=np.int32\n",
        "        ),  # нули так как в гп у нас только 1 пользователь, его индекс 0\n",
        "        # вообще тут должны быть внутренние id пользователей которым рекомендовать\n",
        "        item_ids=np.array(internal_item_ids),  # из чего рекомендуем\n",
        "        user_features=group_features,\n",
        "        item_features=test_item_features,\n",
        "    )\n",
        "    top_items_indices = np.argsort(-scores)[:n]\n",
        "    top_n_scores = sorted(scores.tolist(), reverse=True)[:n]\n",
        "    # print(top_n_scores)\n",
        "    return test_events.iloc[top_items_indices]['item_id'].tolist()"
      ],
      "metadata": {
        "id": "jby6Aa4b88Dm"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "user_ids = ['Ксю', 'Аня', 'Лиза', 'Катя', 'Ира', 'Окси']\n",
        "# с весами\n",
        "group_profile = aggregate_user_profiles(\n",
        "    model, dataset, user_features_data, user_features, user_ids, INDIVIDUAL_COEF, 0\n",
        "    )\n",
        "\n",
        "# без весов\n",
        "group_profile_plain = aggregate_user_profiles_plain(\n",
        "    model, dataset, user_features, user_ids\n",
        "    )\n",
        "\n",
        "test_item_features = dataset.build_item_features(\n",
        "    (\n",
        "        (x['item_id'], {f: x[f] for f in test_event_features.columns if f != 'item_id'})\n",
        "        for _, x in test_event_features.iterrows()\n",
        "    ),\n",
        "    normalize=False,\n",
        ")\n",
        "\n",
        "top_n_group_recommendations = get_group_recommendations(\n",
        "    model, dataset, group_profile, test_item_features, test_event_features, user_features\n",
        ")\n",
        "\n",
        "print(top_n_group_recommendations)\n",
        "\n",
        "event_data['id'] = event_data['id'].astype(str)\n",
        "# display(event_data[event_data.id.isin(top_n_group_recommendations)])\n",
        "\n",
        "display(\n",
        "    event_data[event_data['id'].isin(top_n_group_recommendations[:3])]\n",
        "    .set_index('id')\n",
        "    .reindex(top_n_group_recommendations[:3])\n",
        "    .reset_index()\n",
        ")\n",
        "\n",
        "# random seed для рандома рекомендации\n",
        "random.seed(43)\n",
        "event_data[\n",
        "    event_data.id\n",
        "    == random.choice(test_event_features[\n",
        "        ~test_event_features.item_id.isin(top_n_group_recommendations[:3])\n",
        "        ].item_id)\n",
        "]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 471
        },
        "id": "_gxsssbNEeLp",
        "outputId": "3b64c3cb-b31d-488c-d4dc-b6054698ef20"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['136', '119', '128', '125', '122', '129', '152', '156', '1', '157', '109', '86', '132', '144', '104', '53', '105', '108', '74', '28']\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "    id                         cat_1  \\\n",
              "0  136                     Фестиваль   \n",
              "1  119  Фестиваль, Концерт, Погулять   \n",
              "2  128           Погулять, Экскурсия   \n",
              "\n",
              "                                       cat_2  \\\n",
              "0  Животные, Спорт, Образовательное, Уличная   \n",
              "1             Песни, Природа, Спорт, Уличная   \n",
              "2        Уличная, Природа, Животные, История   \n",
              "\n",
              "                                                name  \\\n",
              "0  Открытие летнего сезона Центра национальных ко...   \n",
              "1    Фестиваль «Запуск лета: парк в ритме поп-рока»    \n",
              "2  Экотропы. «Природа Алешкинского леса» в Тушинс...   \n",
              "\n",
              "                                                desc  \\\n",
              "0  В программе:  Фестиваль выходного дня иммерсив...   \n",
              "1  В программе: Ходулисты, Танцевальная тренировк...   \n",
              "2  Экскурсия пройдет в Алешкинском лесу на террит...   \n",
              "\n",
              "                           date                                      loc  \\\n",
              "0       Даты: 28 апреля с 15:00               Место: ВДНХ, Выводной круг   \n",
              "1  Даты: 1 мая с 12:00 до 21:00  Место: Парк Сокольники, Сад астрономов    \n",
              "2                       Даты: -    Место:  55.864036, 37.418725 (дальше)   \n",
              "\n",
              "                        price                      link  \n",
              "0  Стоимость: Вход свободный   Ссылка: Расписание ЗДЕСЬ  \n",
              "1  Стоимость: Вход свободный              Ссылка: ЗДЕСЬ  \n",
              "2        Стоимость: бесплатно            Ссылка: ссылка  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-381cef84-e2a6-41db-98c3-8dfaf16ae1ee\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>cat_1</th>\n",
              "      <th>cat_2</th>\n",
              "      <th>name</th>\n",
              "      <th>desc</th>\n",
              "      <th>date</th>\n",
              "      <th>loc</th>\n",
              "      <th>price</th>\n",
              "      <th>link</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>136</td>\n",
              "      <td>Фестиваль</td>\n",
              "      <td>Животные, Спорт, Образовательное, Уличная</td>\n",
              "      <td>Открытие летнего сезона Центра национальных ко...</td>\n",
              "      <td>В программе:  Фестиваль выходного дня иммерсив...</td>\n",
              "      <td>Даты: 28 апреля с 15:00</td>\n",
              "      <td>Место: ВДНХ, Выводной круг</td>\n",
              "      <td>Стоимость: Вход свободный</td>\n",
              "      <td>Ссылка: Расписание ЗДЕСЬ</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>119</td>\n",
              "      <td>Фестиваль, Концерт, Погулять</td>\n",
              "      <td>Песни, Природа, Спорт, Уличная</td>\n",
              "      <td>Фестиваль «Запуск лета: парк в ритме поп-рока»</td>\n",
              "      <td>В программе: Ходулисты, Танцевальная тренировк...</td>\n",
              "      <td>Даты: 1 мая с 12:00 до 21:00</td>\n",
              "      <td>Место: Парк Сокольники, Сад астрономов</td>\n",
              "      <td>Стоимость: Вход свободный</td>\n",
              "      <td>Ссылка: ЗДЕСЬ</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>128</td>\n",
              "      <td>Погулять, Экскурсия</td>\n",
              "      <td>Уличная, Природа, Животные, История</td>\n",
              "      <td>Экотропы. «Природа Алешкинского леса» в Тушинс...</td>\n",
              "      <td>Экскурсия пройдет в Алешкинском лесу на террит...</td>\n",
              "      <td>Даты: -</td>\n",
              "      <td>Место:  55.864036, 37.418725 (дальше)</td>\n",
              "      <td>Стоимость: бесплатно</td>\n",
              "      <td>Ссылка: ссылка</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-381cef84-e2a6-41db-98c3-8dfaf16ae1ee')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-381cef84-e2a6-41db-98c3-8dfaf16ae1ee button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-381cef84-e2a6-41db-98c3-8dfaf16ae1ee');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-355102c9-8225-4230-b715-f59c224dfbe2\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-355102c9-8225-4230-b715-f59c224dfbe2')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-355102c9-8225-4230-b715-f59c224dfbe2 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"]\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"136\",\n          \"119\",\n          \"128\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0424\\u0435\\u0441\\u0442\\u0438\\u0432\\u0430\\u043b\\u044c\",\n          \"\\u0424\\u0435\\u0441\\u0442\\u0438\\u0432\\u0430\\u043b\\u044c, \\u041a\\u043e\\u043d\\u0446\\u0435\\u0440\\u0442, \\u041f\\u043e\\u0433\\u0443\\u043b\\u044f\\u0442\\u044c\",\n          \"\\u041f\\u043e\\u0433\\u0443\\u043b\\u044f\\u0442\\u044c, \\u042d\\u043a\\u0441\\u043a\\u0443\\u0440\\u0441\\u0438\\u044f\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0416\\u0438\\u0432\\u043e\\u0442\\u043d\\u044b\\u0435, \\u0421\\u043f\\u043e\\u0440\\u0442, \\u041e\\u0431\\u0440\\u0430\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e\\u0435, \\u0423\\u043b\\u0438\\u0447\\u043d\\u0430\\u044f\",\n          \"\\u041f\\u0435\\u0441\\u043d\\u0438, \\u041f\\u0440\\u0438\\u0440\\u043e\\u0434\\u0430, \\u0421\\u043f\\u043e\\u0440\\u0442, \\u0423\\u043b\\u0438\\u0447\\u043d\\u0430\\u044f\",\n          \"\\u0423\\u043b\\u0438\\u0447\\u043d\\u0430\\u044f, \\u041f\\u0440\\u0438\\u0440\\u043e\\u0434\\u0430, \\u0416\\u0438\\u0432\\u043e\\u0442\\u043d\\u044b\\u0435, \\u0418\\u0441\\u0442\\u043e\\u0440\\u0438\\u044f\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u041e\\u0442\\u043a\\u0440\\u044b\\u0442\\u0438\\u0435 \\u043b\\u0435\\u0442\\u043d\\u0435\\u0433\\u043e \\u0441\\u0435\\u0437\\u043e\\u043d\\u0430 \\u0426\\u0435\\u043d\\u0442\\u0440\\u0430 \\u043d\\u0430\\u0446\\u0438\\u043e\\u043d\\u0430\\u043b\\u044c\\u043d\\u044b\\u0445 \\u043a\\u043e\\u043d\\u043d\\u044b\\u0445 \\u0442\\u0440\\u0430\\u0434\\u0438\\u0446\\u0438\\u0439 \\u043d\\u0430 \\u0412\\u0414\\u041d\\u0425 28 \\u0430\\u043f\\u0440\\u0435\\u043b\\u044f\\u00a0\",\n          \"\\u0424\\u0435\\u0441\\u0442\\u0438\\u0432\\u0430\\u043b\\u044c \\u00ab\\u0417\\u0430\\u043f\\u0443\\u0441\\u043a \\u043b\\u0435\\u0442\\u0430: \\u043f\\u0430\\u0440\\u043a \\u0432 \\u0440\\u0438\\u0442\\u043c\\u0435 \\u043f\\u043e\\u043f-\\u0440\\u043e\\u043a\\u0430\\u00bb\\u00a0\",\n          \"\\u042d\\u043a\\u043e\\u0442\\u0440\\u043e\\u043f\\u044b. \\u00ab\\u041f\\u0440\\u0438\\u0440\\u043e\\u0434\\u0430 \\u0410\\u043b\\u0435\\u0448\\u043a\\u0438\\u043d\\u0441\\u043a\\u043e\\u0433\\u043e \\u043b\\u0435\\u0441\\u0430\\u00bb \\u0432 \\u0422\\u0443\\u0448\\u0438\\u043d\\u0441\\u043a\\u043e\\u043c \\u043f\\u0430\\u0440\\u043a\\u0435 2 \\u043a\\u043c\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"desc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0412 \\u043f\\u0440\\u043e\\u0433\\u0440\\u0430\\u043c\\u043c\\u0435: \\u00a0\\u0424\\u0435\\u0441\\u0442\\u0438\\u0432\\u0430\\u043b\\u044c \\u0432\\u044b\\u0445\\u043e\\u0434\\u043d\\u043e\\u0433\\u043e \\u0434\\u043d\\u044f \\u0438\\u043c\\u043c\\u0435\\u0440\\u0441\\u0438\\u0432\\u043d\\u043e\\u0439 \\u0438\\u0433\\u0440\\u044b \\u2013 \\u0433\\u043e\\u0441\\u0442\\u0438 \\u043d\\u0430\\u0443\\u0447\\u0430\\u0442\\u0441\\u044f \\u0441\\u0438\\u0434\\u0435\\u0442\\u044c \\u0432\\u00a0\\u0441\\u0435\\u0434\\u043b\\u0435, \\u0441\\u0442\\u0440\\u0435\\u043b\\u044f\\u0442\\u044c \\u0438\\u0437\\u00a0\\u043b\\u0443\\u043a\\u0430, \\u043e\\u0431\\u0440\\u0430\\u0449\\u0430\\u0442\\u044c\\u0441\\u044f \\u0441\\u00a0\\u0448\\u0430\\u0448\\u043a\\u043e\\u0439 \\u0438\\u00a0\\u043f\\u0438\\u043a\\u043e\\u0439, \\u0421\\u043e\\u0441\\u0442\\u044f\\u0437\\u0430\\u043d\\u0438\\u044f \\u043f\\u043e \\u0445\\u043e\\u0431\\u0431\\u0438\\u0445\\u043e\\u0440\\u0441\\u0438\\u043d\\u0433\\u0443, \\u0417\\u043d\\u0430\\u043a\\u043e\\u043c\\u0441\\u0442\\u0432\\u043e \\u0441\\u00a0\\u043a\\u043e\\u043d\\u043d\\u044b\\u043c \\u0441\\u043e\\u0441\\u0442\\u0430\\u0432\\u043e\\u043c \\u041a\\u0440\\u0435\\u043c\\u043b\\u0435\\u0432\\u0441\\u043a\\u043e\\u0439 \\u0448\\u043a\\u043e\\u043b\\u044b \\u0432\\u0435\\u0440\\u0445\\u043e\\u0432\\u043e\\u0439 \\u0435\\u0437\\u0434\\u044b, \\u041a\\u043e\\u043d\\u043d\\u043e\\u0435 \\u043f\\u0440\\u0435\\u0434\\u0441\\u0442\\u0430\\u0432\\u043b\\u0435\\u043d\\u0438\\u0435 \\u2013 \\u0442\\u0435\\u043d\\u0442\\u043f\\u0435\\u0433\\u0433\\u0438\\u043d\\u0433, \\u043a\\u043e\\u043d\\u043d\\u0430\\u044f \\u0441\\u0442\\u0440\\u0435\\u043b\\u044c\\u0431\\u0430 \\u0438\\u0437\\u00a0\\u043b\\u0443\\u043a\\u0430 \\u0438\\u00a0\\u0434\\u0436\\u0438\\u0433\\u0438\\u0442\\u043e\\u0432\\u043a\\u0430\",\n          \"\\u0412 \\u043f\\u0440\\u043e\\u0433\\u0440\\u0430\\u043c\\u043c\\u0435: \\u0425\\u043e\\u0434\\u0443\\u043b\\u0438\\u0441\\u0442\\u044b, \\u0422\\u0430\\u043d\\u0446\\u0435\\u0432\\u0430\\u043b\\u044c\\u043d\\u0430\\u044f \\u0442\\u0440\\u0435\\u043d\\u0438\\u0440\\u043e\\u0432\\u043a\\u0430, \\u0421\\u043a\\u0435\\u0439\\u0442\\u0431\\u043e\\u0440\\u0434-\\u0448\\u043e\\u0443, \\u0421\\u043e\\u0440\\u0435\\u0432\\u043d\\u043e\\u0432\\u0430\\u043d\\u0438\\u044f \\u043f\\u043e \\u0413\\u0422\\u041e, \\u0417\\u0430\\u043d\\u044f\\u0442\\u0438\\u044f \\u043f\\u043e \\u0441\\u0442\\u0440\\u0435\\u0442\\u0447\\u0438\\u043d\\u0433\\u0443, \\u041c\\u0430\\u0441\\u0442\\u0435\\u0440-\\u043a\\u043b\\u0430\\u0441\\u0441 \\u043f\\u043e \\u0433\\u043b\\u0430\\u0437\\u0438\\u0440\\u043e\\u0432\\u0430\\u043d\\u0438\\u044e \\u0444\\u0440\\u0443\\u043a\\u0442\\u043e\\u0432 \\u0431\\u0435\\u043b\\u044c\\u0433\\u0438\\u0439\\u0441\\u043a\\u0438\\u043c \\u0448\\u043e\\u043a\\u043e\\u043b\\u0430\\u0434\\u043e\\u043c, \\u0412\\u044b\\u043f\\u0443\\u0441\\u043a \\u043d\\u043e\\u0432\\u043e\\u0439 \\u043f\\u0430\\u0440\\u044b \\u043b\\u0435\\u0431\\u0435\\u0434\\u0435\\u0439 \\u0441 \\u043b\\u0435\\u043a\\u0446\\u0438\\u0435\\u0439 \\u043e\\u0440\\u043d\\u0438\\u0442\\u043e\\u043b\\u043e\\u0433\\u0430, \\u0412 \\u0411\\u043e\\u043b\\u044c\\u0448\\u043e\\u043c \\u0440\\u043e\\u0437\\u0430\\u0440\\u0438\\u0438 \\u043f\\u043e\\u044f\\u0432\\u0438\\u0442\\u0441\\u044f \\u0441\\u0432\\u0435\\u0442\\u043e\\u0432\\u043e\\u0435 \\u043e\\u0431\\u043e\\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u0438\\u0435 \\u043b\\u0430\\u0432\\u043e\\u0447\\u043a\\u0438 \\u0432\\u043b\\u044e\\u0431\\u043b\\u0435\\u043d\\u043d\\u044b\\u0445, \\u041f\\u043e\\u043f-\\u0440\\u043e\\u043a \\u043a\\u043e\\u043d\\u0446\\u0435\\u0440\\u0442, \\u041a\\u0440\\u0435\\u0430\\u0442\\u0438\\u0432\\u043d\\u0430\\u044f \\u0444\\u043e\\u0442\\u043e\\u0437\\u043e\\u043d\\u0430\",\n          \"\\u042d\\u043a\\u0441\\u043a\\u0443\\u0440\\u0441\\u0438\\u044f \\u043f\\u0440\\u043e\\u0439\\u0434\\u0435\\u0442 \\u0432 \\u0410\\u043b\\u0435\\u0448\\u043a\\u0438\\u043d\\u0441\\u043a\\u043e\\u043c \\u043b\\u0435\\u0441\\u0443 \\u043d\\u0430 \\u0442\\u0435\\u0440\\u0440\\u0438\\u0442\\u043e\\u0440\\u0438\\u0438 \\u041f\\u0418\\u041f \\u00ab\\u0422\\u0443\\u0448\\u0438\\u043d\\u0441\\u043a\\u0438\\u0439\\u00bb. \\u041f\\u043e\\u0441\\u0435\\u0442\\u0438\\u0432 \\u044d\\u043a\\u0441\\u043a\\u0443\\u0440\\u0441\\u0438\\u044e, \\u0432\\u044b \\u0443\\u0437\\u043d\\u0430\\u0435\\u0442\\u0435 \\u043c\\u043d\\u043e\\u0433\\u043e \\u043d\\u043e\\u0432\\u043e\\u0433\\u043e \\u043e \\u0431\\u0438\\u043e\\u0440\\u0430\\u0437\\u043d\\u043e\\u043e\\u0431\\u0440\\u0430\\u0437\\u0438\\u0438 \\u0434\\u0430\\u043d\\u043d\\u043e\\u0439 \\u0442\\u0435\\u0440\\u0440\\u0438\\u0442\\u043e\\u0440\\u0438\\u0438 \\u0438 \\u0441\\u043c\\u043e\\u0436\\u0435\\u0442\\u0435 \\u0432 \\u043f\\u043e\\u043b\\u043d\\u043e\\u0439 \\u043c\\u0435\\u0440\\u0435 \\u043d\\u0430\\u0441\\u043b\\u0430\\u0434\\u0438\\u0442\\u044c\\u0441\\u044f \\u043f\\u0440\\u0430\\u043a\\u0442\\u0438\\u0447\\u0435\\u0441\\u043a\\u0438 \\u0434\\u0435\\u0432\\u0441\\u0442\\u0432\\u0435\\u043d\\u043d\\u044b\\u043c \\u043b\\u0435\\u0441\\u043d\\u044b\\u043c \\u043c\\u0430\\u0441\\u0441\\u0438\\u0432\\u043e\\u043c. \\u0410 \\u0442\\u0430\\u043a\\u0436\\u0435 \\u0443\\u0437\\u043d\\u0430\\u0435\\u0442\\u0435, \\u043f\\u043e\\u0447\\u0435\\u043c\\u0443 \\u0410\\u043b\\u0435\\u0448\\u043a\\u0438\\u043d\\u0441\\u043a\\u0438\\u0439 \\u043b\\u0435\\u0441 \\u0442\\u0430\\u043a \\u043d\\u0430\\u0437\\u044b\\u0432\\u0430\\u0435\\u0442\\u0441\\u044f.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0414\\u0430\\u0442\\u044b: 28 \\u0430\\u043f\\u0440\\u0435\\u043b\\u044f \\u0441 15:00\",\n          \"\\u0414\\u0430\\u0442\\u044b: 1 \\u043c\\u0430\\u044f \\u0441 12:00 \\u0434\\u043e 21:00\",\n          \"\\u0414\\u0430\\u0442\\u044b: -\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"loc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u0412\\u0414\\u041d\\u0425, \\u0412\\u044b\\u0432\\u043e\\u0434\\u043d\\u043e\\u0439 \\u043a\\u0440\\u0443\\u0433\",\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041f\\u0430\\u0440\\u043a \\u0421\\u043e\\u043a\\u043e\\u043b\\u044c\\u043d\\u0438\\u043a\\u0438, \\u0421\\u0430\\u0434 \\u0430\\u0441\\u0442\\u0440\\u043e\\u043d\\u043e\\u043c\\u043e\\u0432\\u00a0\",\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e:\\u00a0 55.864036, 37.418725 (\\u0434\\u0430\\u043b\\u044c\\u0448\\u0435)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: \\u0431\\u0435\\u0441\\u043f\\u043b\\u0430\\u0442\\u043d\\u043e\",\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: \\u0412\\u0445\\u043e\\u0434 \\u0441\\u0432\\u043e\\u0431\\u043e\\u0434\\u043d\\u044b\\u0439\\u00a0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"link\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: \\u0420\\u0430\\u0441\\u043f\\u0438\\u0441\\u0430\\u043d\\u0438\\u0435 \\u0417\\u0414\\u0415\\u0421\\u042c\",\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: \\u0417\\u0414\\u0415\\u0421\\u042c\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    id     cat_1                               cat_2   name  \\\n",
              "10  11  Выставка  Современное Искусство, Арт-Объекты  Тупик   \n",
              "\n",
              "                                                 desc                 date  \\\n",
              "10  Музей ART4 тестирует новый выставочный формат,...  Даты: по 30 апреля.   \n",
              "\n",
              "                                                  loc              price  \\\n",
              "10  Место: Москва, Хлыновский тупик, 4. галерея AR...  Стоимость: 300 ₽.   \n",
              "\n",
              "                                 link  \n",
              "10  Ссылка: https://www.art4.ru/show/  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b6994d7f-17e1-46dd-975d-60ac32a3a44c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>cat_1</th>\n",
              "      <th>cat_2</th>\n",
              "      <th>name</th>\n",
              "      <th>desc</th>\n",
              "      <th>date</th>\n",
              "      <th>loc</th>\n",
              "      <th>price</th>\n",
              "      <th>link</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>11</td>\n",
              "      <td>Выставка</td>\n",
              "      <td>Современное Искусство, Арт-Объекты</td>\n",
              "      <td>Тупик</td>\n",
              "      <td>Музей ART4 тестирует новый выставочный формат,...</td>\n",
              "      <td>Даты: по 30 апреля.</td>\n",
              "      <td>Место: Москва, Хлыновский тупик, 4. галерея AR...</td>\n",
              "      <td>Стоимость: 300 ₽.</td>\n",
              "      <td>Ссылка: https://www.art4.ru/show/</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b6994d7f-17e1-46dd-975d-60ac32a3a44c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b6994d7f-17e1-46dd-975d-60ac32a3a44c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b6994d7f-17e1-46dd-975d-60ac32a3a44c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"]\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"11\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0412\\u044b\\u0441\\u0442\\u0430\\u0432\\u043a\\u0430\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0421\\u043e\\u0432\\u0440\\u0435\\u043c\\u0435\\u043d\\u043d\\u043e\\u0435 \\u0418\\u0441\\u043a\\u0443\\u0441\\u0441\\u0442\\u0432\\u043e, \\u0410\\u0440\\u0442-\\u041e\\u0431\\u044a\\u0435\\u043a\\u0442\\u044b\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0422\\u0443\\u043f\\u0438\\u043a\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"desc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u041c\\u0443\\u0437\\u0435\\u0439 ART4 \\u0442\\u0435\\u0441\\u0442\\u0438\\u0440\\u0443\\u0435\\u0442 \\u043d\\u043e\\u0432\\u044b\\u0439 \\u0432\\u044b\\u0441\\u0442\\u0430\\u0432\\u043e\\u0447\\u043d\\u044b\\u0439 \\u0444\\u043e\\u0440\\u043c\\u0430\\u0442, \\u0432 \\u0440\\u0430\\u043c\\u043a\\u0430\\u0445 \\u043a\\u043e\\u0442\\u043e\\u0440\\u043e\\u0433\\u043e \\u0431\\u0443\\u0434\\u0435\\u0442 \\u0440\\u0430\\u0431\\u043e\\u0442\\u0430\\u0442\\u044c \\u0441\\u0440\\u0430\\u0437\\u0443 \\u0441 \\u043d\\u0435\\u0441\\u043a\\u043e\\u043b\\u044c\\u043a\\u0438\\u043c\\u0438 \\u0441\\u043e\\u0432\\u0440\\u0435\\u043c\\u0435\\u043d\\u043d\\u044b\\u043c\\u0438 \\u0445\\u0443\\u0434\\u043e\\u0436\\u043d\\u0438\\u043a\\u0430\\u043c\\u0438. \\u041d\\u043e\\u0432\\u044b\\u0439 \\u043c\\u0435\\u0441\\u044f\\u0446 \\u2014 \\u043d\\u043e\\u0432\\u044b\\u0435 \\u0438\\u043c\\u0435\\u043d\\u0430 \\u0438 \\u043b\\u0435\\u0439\\u0442\\u043c\\u043e\\u0442\\u0438\\u0432\\u044b. \\u0421\\u0435\\u0439\\u0447\\u0430\\u0441 \\u0437\\u0434\\u0435\\u0441\\u044c \\u043f\\u043e\\u043a\\u0430\\u0437\\u044b\\u0432\\u0430\\u044e\\u0442 \\u0440\\u0430\\u0431\\u043e\\u0442\\u044b \\u0422\\u0438\\u043c\\u0430 \\u041f\\u0430\\u0440\\u0449\\u0438\\u043a\\u043e\\u0432\\u0430, \\u0421\\u0430\\u0448\\u0438 \\u041b\\u0435\\u043c\\u0438\\u0448\\u0430, \\u041f\\u043e\\u043b\\u0438\\u043d\\u044b \\u0420\\u0443\\u043a\\u0430\\u0432\\u0438\\u0447\\u043a\\u0438\\u043d\\u043e\\u0439 \\u0438 \\u0434\\u0440\\u0443\\u0433\\u0438\\u0445 \\u0438\\u043c\\u0435\\u043d\\u0438\\u0442\\u044b\\u0445 \\u0442\\u0432\\u043e\\u0440\\u0446\\u043e\\u0432. \\u041a\\u0443\\u0440\\u0430\\u0442\\u043e\\u0440\\u044b \\u043d\\u0430\\u043f\\u043e\\u043b\\u043d\\u0438\\u043b\\u0438 \\u043f\\u0440\\u043e\\u0441\\u0442\\u0440\\u0430\\u043d\\u0441\\u0442\\u0432\\u043e \\u0438\\u0445 \\u0444\\u043e\\u0442\\u043e\\u0433\\u0440\\u0430\\u0444\\u0438\\u044f\\u043c\\u0438 \\u0438 \\u0436\\u0438\\u0432\\u043e\\u043f\\u0438\\u0441\\u043d\\u044b\\u043c\\u0438 \\u0445\\u043e\\u043b\\u0441\\u0442\\u0430\\u043c\\u0438, \\u0432 \\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0445 \\u043c\\u043e\\u0436\\u043d\\u043e \\u0432\\u0441\\u0442\\u0440\\u0435\\u0442\\u0438\\u0442\\u044c \\u0438\\u0441\\u0441\\u043b\\u0435\\u0434\\u043e\\u0432\\u0430\\u043d\\u0438\\u0435 \\u0442\\u0435\\u043b\\u0435\\u0441\\u043d\\u043e\\u0439 \\u043d\\u0435\\u0441\\u0432\\u043e\\u0431\\u043e\\u0434\\u044b \\u0438 \\u0442\\u043e\\u0442\\u0430\\u043b\\u044c\\u043d\\u043e\\u0433\\u043e \\u043e\\u0434\\u0438\\u043d\\u043e\\u0447\\u0435\\u0441\\u0442\\u0432\\u0430.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0414\\u0430\\u0442\\u044b: \\u043f\\u043e 30 \\u0430\\u043f\\u0440\\u0435\\u043b\\u044f.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"loc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041c\\u043e\\u0441\\u043a\\u0432\\u0430, \\u0425\\u043b\\u044b\\u043d\\u043e\\u0432\\u0441\\u043a\\u0438\\u0439 \\u0442\\u0443\\u043f\\u0438\\u043a, 4. \\u0433\\u0430\\u043b\\u0435\\u0440\\u0435\\u044f ART4. (\\u0433\\u043e\\u0440\\u043e\\u0434)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: 300 \\u20bd.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"link\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: https://www.art4.ru/show/\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 74
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### 1"
      ],
      "metadata": {
        "id": "ulQvz96inhos"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# открываем модель\n",
        "with open('ind_pref_based_model.pkl', 'rb') as mfile:\n",
        "    loaded_model = pickle.load(mfile)"
      ],
      "metadata": {
        "id": "chc1kHj-HZnJ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "NEW_ID_SET = ['119', '136', '125', '11']  # !!!!!\n",
        "new1_interactions = pd.read_excel('intrc_it_11.xlsx', index_col=0)\n",
        "\n",
        "new1_interactions.columns = new1_interactions.columns.astype(str)\n",
        "new1_interactions = new1_interactions.dropna(axis=1, how='all')\n",
        "new1_interactions = new1_interactions.fillna(0).replace(1, 5).replace(-1, 1)\n",
        "\n",
        "\n",
        "# new1_interactions = new1_interactions.rename(columns={'136': '30', '122': '1'})  # !!!!!\n",
        "new1_interactions = pd.concat([train_interactions, new1_interactions], axis=1).astype(int)\n",
        "extended_interactions = sparse.csr_matrix(new1_interactions.values)\n",
        "\n",
        "test_event_features['item_id'] = test_event_features['item_id'].astype(str)\n",
        "new_event_features = test_event_features[test_event_features.item_id.isin(NEW_ID_SET)]"
      ],
      "metadata": {
        "id": "7xkAtBbZmalO"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "new_train_event_features = pd.concat([train_event_features, test_event_features[test_event_features.item_id.isin(NEW_ID_SET)]])\n",
        "new_train_event_features.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-7ViYJQ2bVt9",
        "outputId": "ad36cb8a-fe17-4ffc-d8fd-6db858647c8e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(130, 49)"
            ]
          },
          "metadata": {},
          "execution_count": 167
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# объединенные\n",
        "new_train_item_features = dataset.build_item_features(\n",
        "    (\n",
        "        (x['item_id'], {f: x[f] for f in new_train_event_features.columns if f != 'item_id'})\n",
        "        for _, x in new_train_event_features.iterrows()\n",
        "    ), normalize=False\n",
        ")"
      ],
      "metadata": {
        "id": "yr4w5R_aY9ii"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model.get_user_representations()[1][0]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KXRux2MH15tC",
        "outputId": "98b0f306-f88c-47ba-c6a2-dae332237def"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0.2181788 ,  0.8072018 ,  0.2603314 ,  0.58339864, -0.48191088,\n",
              "        0.35072967,  0.02179444, -0.3625396 ,  0.44975814, -0.34391952],\n",
              "      dtype=float32)"
            ]
          },
          "metadata": {},
          "execution_count": 169
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "loaded_model.get_user_representations()[1][0]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JNIbmqwG88HH",
        "outputId": "1f90d7bc-eff7-4187-e0fe-b34dd9c4f351"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0.2181788 ,  0.8072018 ,  0.2603314 ,  0.58339864, -0.48191088,\n",
              "        0.35072967,  0.02179444, -0.3625396 ,  0.44975814, -0.34391952],\n",
              "      dtype=float32)"
            ]
          },
          "metadata": {},
          "execution_count": 170
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 6442\n",
        "new_train_item_features"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ideIPVJ2KRqE",
        "outputId": "265c99aa-4698-40d6-8bce-4df3fc6363a4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<202x250 sparse matrix of type '<class 'numpy.float32'>'\n",
              "\twith 6442 stored elements in Compressed Sparse Row format>"
            ]
          },
          "metadata": {},
          "execution_count": 171
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "loaded_model.fit_partial(\n",
        "    interactions=extended_interactions,\n",
        "    user_features=user_features,\n",
        "    item_features=new_train_item_features,\n",
        "    epochs=2,\n",
        "    num_threads=1\n",
        ")\n",
        "\n",
        "\n",
        "with open('1_group_based_model.pkl', 'wb') as model_file:\n",
        "    pickle.dump(loaded_model, model_file)"
      ],
      "metadata": {
        "id": "1xrHQ_mLZvjp"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model.get_user_representations()[1][0]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jkxGOn_U2CyD",
        "outputId": "c40ae9ab-8c2f-4365-dec1-4caba67ba0fc"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0.2181788 ,  0.8072018 ,  0.2603314 ,  0.58339864, -0.48191088,\n",
              "        0.35072967,  0.02179444, -0.3625396 ,  0.44975814, -0.34391952],\n",
              "      dtype=float32)"
            ]
          },
          "metadata": {},
          "execution_count": 173
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "loaded_model.get_user_representations()[1][0]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Aa5WMx8uaP0B",
        "outputId": "609ed405-07c5-4a24-91f4-6dafd9e07066"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0.23177938,  0.826033  ,  0.24668643,  0.5851484 , -0.4648882 ,\n",
              "        0.32600564,  0.0133052 , -0.37680596,  0.43859562, -0.33166203],\n",
              "      dtype=float32)"
            ]
          },
          "metadata": {},
          "execution_count": 174
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "group_profile"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jp4bYiU93kBR",
        "outputId": "d31a5193-9ee7-45d0-ecb4-36420f603645"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0.70969974,  0.61902721,  0.34749353,  0.15225272, -0.28138178,\n",
              "       -0.65438222, -0.44678384, -0.37111455, -0.52797591, -0.35301139])"
            ]
          },
          "metadata": {},
          "execution_count": 175
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "user_ids = ['Ксю', 'Аня', 'Лиза', 'Катя', 'Ира', 'Окси']\n",
        "group_profile = aggregate_user_profiles(\n",
        "    loaded_model, dataset, user_features_data, user_features, user_ids, INDIVIDUAL_COEF, 0\n",
        "    )\n",
        "group_profile"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BQXt4xsJrLZx",
        "outputId": "65456912-ecc5-4216-9385-a871b6623e1d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0.75279605,  0.67136485,  0.36458179,  0.09540245, -0.19218179,\n",
              "       -0.7674408 , -0.46970268, -0.3317718 , -0.62388041, -0.25919138])"
            ]
          },
          "metadata": {},
          "execution_count": 176
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 72\n",
        "test_event_features_cut = test_event_features.drop(\n",
        "    test_event_features[\n",
        "        test_event_features.item_id.isin(NEW_ID_SET)\n",
        "        ].index, axis=0\n",
        "    )\n",
        "test_event_features_cut.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4N8EDymB4kG9",
        "outputId": "59facea3-022d-4ccb-a18d-a33e01793f26"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(72, 49)"
            ]
          },
          "metadata": {},
          "execution_count": 177
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "CHOOSE_FROM = test_event_features_cut.copy(deep=True)\n",
        "CHOOSE_FROM_FTRS= test_item_features\n",
        "\n",
        "top_n_group_recommendations = get_group_recommendations(\n",
        "    loaded_model, dataset, group_profile,\n",
        "    CHOOSE_FROM_FTRS, CHOOSE_FROM, user_features\n",
        ")\n",
        "print(top_n_group_recommendations)\n",
        "\n",
        "# display(event_data[event_data.id.isin(top_n_group_recommendations)])\n",
        "\n",
        "display(\n",
        "    event_data[event_data['id'].isin(top_n_group_recommendations[:3])]\n",
        "    .set_index('id')\n",
        "    .reindex(top_n_group_recommendations[:3])\n",
        "    .reset_index()\n",
        ")\n",
        "\n",
        "# random seed для рандома рекомендации\n",
        "random.seed(83)\n",
        "event_data[\n",
        "    event_data.id\n",
        "    == random.choice(CHOOSE_FROM[~CHOOSE_FROM.item_id.isin(top_n_group_recommendations[:3])].item_id.values)\n",
        "]"
      ],
      "metadata": {
        "id": "l7CU01B33TWq",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 471
        },
        "outputId": "7efa321c-ad57-401a-d2a4-29bddd9f758f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['152', '21', '122', '156', '109', '86', '128', '105', '104', '157', '129', '18', '1', '74', '108', '53', '28', '30', '144', '3']\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "    id               cat_1                     cat_2  \\\n",
              "0  152            Выставка  Мультфильмы, Мультимедиа   \n",
              "1   21  Выставка, Погулять         Растения, Природа   \n",
              "2  122            Погулять         Природа, Животные   \n",
              "\n",
              "                                                name  \\\n",
              "0  Постоянная экспозиция мультимедийного центра «...   \n",
              "1  Тюльпаны и другие весенние цветы распустились ...   \n",
              "2  Идём кататься на конном экипаже в Центр воспро...   \n",
              "\n",
              "                                                desc  \\\n",
              "0  Мультимедийный развлекательно-развивающий цент...   \n",
              "1  С 19 марта в Субтропической оранжерее Ботаниче...   \n",
              "2  Катание для детей и взрослых осуществляется по...   \n",
              "\n",
              "                                        date  \\\n",
              "0              Даты: Ежедневно 10:00 — 21:00   \n",
              "1                    Даты: 19 марта - 15 мая   \n",
              "2  Даты: С 1 мая, ежедневно с 10:00 до 16:15   \n",
              "\n",
              "                                                 loc  \\\n",
              "0                           Место: ВДНХ, Павильон №7   \n",
              "1         Место: Москва, Проспект Мира, 26/1 (город)   \n",
              "2  Место: Филиал Московского зоопарка в Сычево, В...   \n",
              "\n",
              "                                               price  \\\n",
              "0                             Стоимость: 550 - 1500р   \n",
              "1  Стоимость:  от 200 рублей, дети до 7 лет и мно...   \n",
              "2                                 Стоимость: от 300р   \n",
              "\n",
              "                                                link  \n",
              "0  Ссылка: https://vdnh.ru/events/ekspozitsiya-mu...  \n",
              "1                                  Ссылка: Подробнее  \n",
              "2                                          Ссылка: -  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9aa4fca2-be68-40a3-9cd2-3e6e0e111fd5\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>cat_1</th>\n",
              "      <th>cat_2</th>\n",
              "      <th>name</th>\n",
              "      <th>desc</th>\n",
              "      <th>date</th>\n",
              "      <th>loc</th>\n",
              "      <th>price</th>\n",
              "      <th>link</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>152</td>\n",
              "      <td>Выставка</td>\n",
              "      <td>Мультфильмы, Мультимедиа</td>\n",
              "      <td>Постоянная экспозиция мультимедийного центра «...</td>\n",
              "      <td>Мультимедийный развлекательно-развивающий цент...</td>\n",
              "      <td>Даты: Ежедневно 10:00 — 21:00</td>\n",
              "      <td>Место: ВДНХ, Павильон №7</td>\n",
              "      <td>Стоимость: 550 - 1500р</td>\n",
              "      <td>Ссылка: https://vdnh.ru/events/ekspozitsiya-mu...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>21</td>\n",
              "      <td>Выставка, Погулять</td>\n",
              "      <td>Растения, Природа</td>\n",
              "      <td>Тюльпаны и другие весенние цветы распустились ...</td>\n",
              "      <td>С 19 марта в Субтропической оранжерее Ботаниче...</td>\n",
              "      <td>Даты: 19 марта - 15 мая</td>\n",
              "      <td>Место: Москва, Проспект Мира, 26/1 (город)</td>\n",
              "      <td>Стоимость:  от 200 рублей, дети до 7 лет и мно...</td>\n",
              "      <td>Ссылка: Подробнее</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>122</td>\n",
              "      <td>Погулять</td>\n",
              "      <td>Природа, Животные</td>\n",
              "      <td>Идём кататься на конном экипаже в Центр воспро...</td>\n",
              "      <td>Катание для детей и взрослых осуществляется по...</td>\n",
              "      <td>Даты: С 1 мая, ежедневно с 10:00 до 16:15</td>\n",
              "      <td>Место: Филиал Московского зоопарка в Сычево, В...</td>\n",
              "      <td>Стоимость: от 300р</td>\n",
              "      <td>Ссылка: -</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9aa4fca2-be68-40a3-9cd2-3e6e0e111fd5')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9aa4fca2-be68-40a3-9cd2-3e6e0e111fd5 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9aa4fca2-be68-40a3-9cd2-3e6e0e111fd5');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-2d4b7b05-9ebf-475b-8f50-c19be8196502\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2d4b7b05-9ebf-475b-8f50-c19be8196502')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-2d4b7b05-9ebf-475b-8f50-c19be8196502 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"]\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"152\",\n          \"21\",\n          \"122\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0412\\u044b\\u0441\\u0442\\u0430\\u0432\\u043a\\u0430\",\n          \"\\u0412\\u044b\\u0441\\u0442\\u0430\\u0432\\u043a\\u0430, \\u041f\\u043e\\u0433\\u0443\\u043b\\u044f\\u0442\\u044c\",\n          \"\\u041f\\u043e\\u0433\\u0443\\u043b\\u044f\\u0442\\u044c\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u041c\\u0443\\u043b\\u044c\\u0442\\u0444\\u0438\\u043b\\u044c\\u043c\\u044b, \\u041c\\u0443\\u043b\\u044c\\u0442\\u0438\\u043c\\u0435\\u0434\\u0438\\u0430\",\n          \"\\u0420\\u0430\\u0441\\u0442\\u0435\\u043d\\u0438\\u044f, \\u041f\\u0440\\u0438\\u0440\\u043e\\u0434\\u0430\",\n          \"\\u041f\\u0440\\u0438\\u0440\\u043e\\u0434\\u0430, \\u0416\\u0438\\u0432\\u043e\\u0442\\u043d\\u044b\\u0435\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u041f\\u043e\\u0441\\u0442\\u043e\\u044f\\u043d\\u043d\\u0430\\u044f \\u044d\\u043a\\u0441\\u043f\\u043e\\u0437\\u0438\\u0446\\u0438\\u044f \\u043c\\u0443\\u043b\\u044c\\u0442\\u0438\\u043c\\u0435\\u0434\\u0438\\u0439\\u043d\\u043e\\u0433\\u043e \\u0446\\u0435\\u043d\\u0442\\u0440\\u0430 \\u00ab\\u0421\\u043e\\u044e\\u0437\\u043c\\u0443\\u043b\\u044c\\u0442\\u043f\\u0430\\u0440\\u043a\\u00bb\",\n          \"\\u0422\\u044e\\u043b\\u044c\\u043f\\u0430\\u043d\\u044b \\u0438 \\u0434\\u0440\\u0443\\u0433\\u0438\\u0435 \\u0432\\u0435\\u0441\\u0435\\u043d\\u043d\\u0438\\u0435 \\u0446\\u0432\\u0435\\u0442\\u044b \\u0440\\u0430\\u0441\\u043f\\u0443\\u0441\\u0442\\u0438\\u043b\\u0438\\u0441\\u044c \\u0432 \\u0410\\u043f\\u0442\\u0435\\u043a\\u0430\\u0440\\u0441\\u043a\\u043e\\u043c \\u043e\\u0433\\u043e\\u0440\\u043e\\u0434\\u0435\",\n          \"\\u0418\\u0434\\u0451\\u043c \\u043a\\u0430\\u0442\\u0430\\u0442\\u044c\\u0441\\u044f \\u043d\\u0430 \\u043a\\u043e\\u043d\\u043d\\u043e\\u043c \\u044d\\u043a\\u0438\\u043f\\u0430\\u0436\\u0435 \\u0432 \\u0426\\u0435\\u043d\\u0442\\u0440 \\u0432\\u043e\\u0441\\u043f\\u0440\\u043e\\u0438\\u0437\\u0432\\u043e\\u0434\\u0441\\u0442\\u0432\\u0430 \\u0440\\u0435\\u0434\\u043a\\u0438\\u0445 \\u0432\\u0438\\u0434\\u043e\\u0432 \\u0436\\u0438\\u0432\\u043e\\u0442\\u043d\\u044b\\u0445\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"desc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u041c\\u0443\\u043b\\u044c\\u0442\\u0438\\u043c\\u0435\\u0434\\u0438\\u0439\\u043d\\u044b\\u0439 \\u0440\\u0430\\u0437\\u0432\\u043b\\u0435\\u043a\\u0430\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e-\\u0440\\u0430\\u0437\\u0432\\u0438\\u0432\\u0430\\u044e\\u0449\\u0438\\u0439 \\u0446\\u0435\\u043d\\u0442\\u0440 \\u00ab\\u0421\\u043e\\u044e\\u0437\\u043c\\u0443\\u043b\\u044c\\u0442\\u043f\\u0430\\u0440\\u043a\\u00bb \\u2014 \\u0443\\u043d\\u0438\\u043a\\u0430\\u043b\\u044c\\u043d\\u0430\\u044f \\u043f\\u043b\\u043e\\u0449\\u0430\\u0434\\u043a\\u0430 \\u0434\\u043b\\u044f \\u0434\\u0435\\u0442\\u0435\\u0439 \\u0438 \\u0432\\u0437\\u0440\\u043e\\u0441\\u043b\\u044b\\u0445, \\u0433\\u0434\\u0435 \\u043a\\u0430\\u0436\\u0434\\u044b\\u0439 \\u0441\\u043c\\u043e\\u0436\\u0435\\u0442 \\u043f\\u043e\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044c\\u0441\\u044f \\u0432 \\u043c\\u0438\\u0440 \\u043b\\u044e\\u0431\\u0438\\u043c\\u044b\\u0445 \\u043c\\u0443\\u043b\\u044c\\u0442\\u0438\\u043f\\u043b\\u0438\\u043a\\u0430\\u0446\\u0438\\u043e\\u043d\\u043d\\u044b\\u0445 \\u0433\\u0435\\u0440\\u043e\\u0435\\u0432, \\u043e\\u0436\\u0438\\u0432\\u0438\\u0442\\u044c \\u0438\\u0445, \\u043f\\u043e\\u043b\\u0443\\u0447\\u0438\\u0442\\u044c \\u043d\\u043e\\u0432\\u044b\\u0435 \\u043d\\u0430\\u0432\\u044b\\u043a\\u0438 \\u0438 \\u0440\\u0430\\u0441\\u043a\\u0440\\u044b\\u0442\\u044c \\u0441\\u0432\\u043e\\u0438 \\u0442\\u0430\\u043b\\u0430\\u043d\\u0442\\u044b. \\u0413\\u043e\\u0441\\u0442\\u0435\\u0439 \\u0436\\u0434\\u0443\\u0442 18 \\u0438\\u043d\\u0442\\u0435\\u0440\\u0430\\u043a\\u0442\\u0438\\u0432\\u043d\\u044b\\u0445 \\u0430\\u0442\\u0442\\u0440\\u0430\\u043a\\u0446\\u0438\\u043e\\u043d\\u043e\\u0432, \\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043e\\u0442\\u0430\\u043d\\u043d\\u044b\\u0445 \\u0441 \\u043f\\u0440\\u0438\\u043c\\u0435\\u043d\\u0435\\u043d\\u0438\\u0435\\u043c \\u0446\\u0438\\u0444\\u0440\\u043e\\u0432\\u044b\\u0445 \\u0442\\u0435\\u0445\\u043d\\u043e\\u043b\\u043e\\u0433\\u0438\\u0439 \\u2014 VR (\\u0432\\u0438\\u0440\\u0442\\u0443\\u0430\\u043b\\u044c\\u043d\\u043e\\u0439 \\u0440\\u0435\\u0430\\u043b\\u044c\\u043d\\u043e\\u0441\\u0442\\u0438), AR (\\u0434\\u043e\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u043d\\u043e\\u0439 \\u0440\\u0435\\u0430\\u043b\\u044c\\u043d\\u043e\\u0441\\u0442\\u0438), 3D-\\u0430\\u043d\\u0438\\u043c\\u0430\\u0446\\u0438\\u0438, \\u0430\\u0432\\u0442\\u043e\\u043d\\u043e\\u043c\\u043d\\u043e\\u0433\\u043e \\u0440\\u0430\\u0437\\u0432\\u0438\\u0442\\u0438\\u044f \\u0438 \\u0431\\u0435\\u0441\\u043a\\u043e\\u043d\\u0435\\u0447\\u043d\\u043e\\u0439 \\u0433\\u0435\\u043d\\u0435\\u0440\\u0430\\u0446\\u0438\\u0438 \\u0433\\u0440\\u0430\\u0444\\u0438\\u0447\\u0435\\u0441\\u043a\\u0438\\u0445 \\u043e\\u0431\\u044a\\u0435\\u043a\\u0442\\u043e\\u0432\",\n          \"\\u0421 19 \\u043c\\u0430\\u0440\\u0442\\u0430 \\u0432 \\u0421\\u0443\\u0431\\u0442\\u0440\\u043e\\u043f\\u0438\\u0447\\u0435\\u0441\\u043a\\u043e\\u0439 \\u043e\\u0440\\u0430\\u043d\\u0436\\u0435\\u0440\\u0435\\u0435 \\u0411\\u043e\\u0442\\u0430\\u043d\\u0438\\u0447\\u0435\\u0441\\u043a\\u043e\\u0433\\u043e \\u0441\\u0430\\u0434\\u0430 \\u041c\\u0413\\u0423 \\u00ab\\u0410\\u043f\\u0442\\u0435\\u043a\\u0430\\u0440\\u0441\\u043a\\u0438\\u0439 \\u043e\\u0433\\u043e\\u0440\\u043e\\u0434\\u00bb \\u043f\\u043e\\u0441\\u0435\\u0442\\u0438\\u0442\\u0435\\u043b\\u0438 \\u043c\\u043e\\u0433\\u0443\\u0442 \\u0443\\u0432\\u0438\\u0434\\u0435\\u0442\\u044c \\u0442\\u044e\\u043b\\u044c\\u043f\\u0430\\u043d\\u044b, \\u043d\\u0430\\u0440\\u0446\\u0438\\u0441\\u0441\\u044b, \\u0433\\u0438\\u0430\\u0446\\u0438\\u043d\\u0442\\u044b, \\u043a\\u0440\\u043e\\u043a\\u0443\\u0441\\u044b \\u0438 \\u0434\\u0440\\u0443\\u0433\\u0438\\u0435 \\u0440\\u0430\\u0441\\u0442\\u0435\\u043d\\u0438\\u044f, \\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0435 \\u0440\\u0430\\u043d\\u0435\\u0435 \\u0431\\u044b\\u043b\\u0438 \\u043f\\u0440\\u0435\\u0434\\u0441\\u0442\\u0430\\u0432\\u043b\\u0435\\u043d\\u044b \\u043d\\u0430 \\u0432\\u044b\\u0441\\u0442\\u0430\\u0432\\u043a\\u0435 \\u00ab\\u0420\\u0435\\u043f\\u0435\\u0442\\u0438\\u0446\\u0438\\u044f \\u0432\\u0435\\u0441\\u043d\\u044b\\u00bb. \\u042d\\u0442\\u043e \\u043e\\u0442\\u043b\\u0438\\u0447\\u043d\\u044b\\u0439 \\u0448\\u0430\\u043d\\u0441 \\u043f\\u043e\\u043b\\u044e\\u0431\\u043e\\u0432\\u0430\\u0442\\u044c\\u0441\\u044f \\u0432\\u0435\\u0441\\u0435\\u043d\\u043d\\u0438\\u043c\\u0438 \\u0446\\u0432\\u0435\\u0442\\u0430\\u043c\\u0438 \\u0441\\u0440\\u0435\\u0434\\u0438 \\u044d\\u043a\\u0437\\u043e\\u0442\\u0438\\u0447\\u0435\\u0441\\u043a\\u0438\\u0445 \\u0440\\u0430\\u0441\\u0442\\u0435\\u043d\\u0438\\u0439, \\u043d\\u0430\\u0441\\u043b\\u0430\\u0434\\u0438\\u0442\\u044c\\u0441\\u044f \\u043f\\u043e\\u0442\\u0440\\u044f\\u0441\\u0430\\u044e\\u0449\\u0438\\u043c\\u0438 \\u0430\\u0440\\u043e\\u043c\\u0430\\u0442\\u0430\\u043c\\u0438 \\u0438 \\u043f\\u043e\\u043b\\u0443\\u0447\\u0438\\u0442\\u044c \\u043c\\u043e\\u0440\\u0435 \\u0443\\u0434\\u043e\\u0432\\u043e\\u043b\\u044c\\u0441\\u0442\\u0432\\u0438\\u044f. \\u0422\\u0430\\u043a\\u0436\\u0435 \\u0432 \\u0421\\u0443\\u0431\\u0442\\u0440\\u043e\\u043f\\u0438\\u0447\\u0435\\u0441\\u043a\\u043e\\u0439 \\u043e\\u0440\\u0430\\u043d\\u0436\\u0435\\u0440\\u0435\\u0435 \\u0441\\u0435\\u0439\\u0447\\u0430\\u0441 \\u0446\\u0432\\u0435\\u0442\\u0443\\u0442 \\u043e\\u0440\\u0445\\u0438\\u0434\\u0435\\u0438, \\u0430\\u0437\\u0430\\u043b\\u0438\\u0438, \\u043a\\u043b\\u0438\\u0432\\u0438\\u0438 \\u0438 \\u0444\\u0430\\u043d\\u0442\\u0430\\u0441\\u0442\\u0438\\u0447\\u0435\\u0441\\u043a\\u0438 \\u0430\\u0440\\u043e\\u043c\\u0430\\u0442\\u043d\\u043e\\u0435 \\u043f\\u043e\\u043c\\u0435\\u043b\\u043e.\",\n          \"\\u041a\\u0430\\u0442\\u0430\\u043d\\u0438\\u0435 \\u0434\\u043b\\u044f \\u0434\\u0435\\u0442\\u0435\\u0439 \\u0438 \\u0432\\u0437\\u0440\\u043e\\u0441\\u043b\\u044b\\u0445 \\u043e\\u0441\\u0443\\u0449\\u0435\\u0441\\u0442\\u0432\\u043b\\u044f\\u0435\\u0442\\u0441\\u044f \\u043f\\u043e \\u0442\\u0435\\u0440\\u0440\\u0438\\u0442\\u043e\\u0440\\u0438\\u0438 \\u0426\\u0435\\u043d\\u0442\\u0440\\u0430\\u00a0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0414\\u0430\\u0442\\u044b: \\u0415\\u0436\\u0435\\u0434\\u043d\\u0435\\u0432\\u043d\\u043e 10:00 \\u2014 21:00\",\n          \"\\u0414\\u0430\\u0442\\u044b: 19 \\u043c\\u0430\\u0440\\u0442\\u0430 - 15 \\u043c\\u0430\\u044f\",\n          \"\\u0414\\u0430\\u0442\\u044b: \\u0421 1 \\u043c\\u0430\\u044f, \\u0435\\u0436\\u0435\\u0434\\u043d\\u0435\\u0432\\u043d\\u043e \\u0441 10:00 \\u0434\\u043e 16:15\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"loc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u0412\\u0414\\u041d\\u0425, \\u041f\\u0430\\u0432\\u0438\\u043b\\u044c\\u043e\\u043d \\u21167\",\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041c\\u043e\\u0441\\u043a\\u0432\\u0430, \\u041f\\u0440\\u043e\\u0441\\u043f\\u0435\\u043a\\u0442 \\u041c\\u0438\\u0440\\u0430, 26/1 (\\u0433\\u043e\\u0440\\u043e\\u0434)\",\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u0424\\u0438\\u043b\\u0438\\u0430\\u043b \\u041c\\u043e\\u0441\\u043a\\u043e\\u0432\\u0441\\u043a\\u043e\\u0433\\u043e \\u0437\\u043e\\u043e\\u043f\\u0430\\u0440\\u043a\\u0430 \\u0432 \\u0421\\u044b\\u0447\\u0435\\u0432\\u043e, \\u0412\\u043e\\u043b\\u043e\\u043a\\u043e\\u043b\\u0430\\u043c\\u0441\\u043a\\u0438\\u0439 \\u0440\\u0430\\u0439\\u043e\\u043d 55.939685, 36.210234 (\\u0434\\u0430\\u043b\\u0435\\u043a\\u043e)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: 550 - 1500\\u0440\",\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c:\\u00a0 \\u043e\\u0442 200 \\u0440\\u0443\\u0431\\u043b\\u0435\\u0439, \\u0434\\u0435\\u0442\\u0438 \\u0434\\u043e 7 \\u043b\\u0435\\u0442 \\u0438 \\u043c\\u043d\\u043e\\u0433\\u043e\\u0434\\u0435\\u0442\\u043d\\u044b\\u0435 \\u0441\\u0435\\u043c\\u044c\\u0438 \\u2013 \\u0431\\u0435\\u0441\\u043f\\u043b\\u0430\\u0442\\u043d\\u043e\\u00a0\",\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: \\u043e\\u0442 300\\u0440\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"link\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: https://vdnh.ru/events/ekspozitsiya-multimediynogo-tsentra-soyuzmultpark/\",\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: \\u041f\\u043e\\u0434\\u0440\\u043e\\u0431\\u043d\\u0435\\u0435\",\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: -\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id               cat_1                     cat_2  \\\n",
              "171  173  Кинопоказ, Лекция   Кино, Личности, Классика   \n",
              "\n",
              "                                 name  \\\n",
              "171  Киноклуб в Антипе «Крупная рыба»   \n",
              "\n",
              "                                                  desc  \\\n",
              "171  Фильм Тима Бертона, который слегка отличается ...   \n",
              "\n",
              "                       date                                               loc  \\\n",
              "171  Даты: 27 ноября, 20:00  Место: Дом Антипа (Малый Знаменский переулок, 9)   \n",
              "\n",
              "                    price       link  \n",
              "171  Стоимость: бесплатно  Ссылка: -  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3892841d-681a-48c2-b1de-e74220ce87a2\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>cat_1</th>\n",
              "      <th>cat_2</th>\n",
              "      <th>name</th>\n",
              "      <th>desc</th>\n",
              "      <th>date</th>\n",
              "      <th>loc</th>\n",
              "      <th>price</th>\n",
              "      <th>link</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>171</th>\n",
              "      <td>173</td>\n",
              "      <td>Кинопоказ, Лекция</td>\n",
              "      <td>Кино, Личности, Классика</td>\n",
              "      <td>Киноклуб в Антипе «Крупная рыба»</td>\n",
              "      <td>Фильм Тима Бертона, который слегка отличается ...</td>\n",
              "      <td>Даты: 27 ноября, 20:00</td>\n",
              "      <td>Место: Дом Антипа (Малый Знаменский переулок, 9)</td>\n",
              "      <td>Стоимость: бесплатно</td>\n",
              "      <td>Ссылка: -</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3892841d-681a-48c2-b1de-e74220ce87a2')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-3892841d-681a-48c2-b1de-e74220ce87a2 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-3892841d-681a-48c2-b1de-e74220ce87a2');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"]\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"173\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u041a\\u0438\\u043d\\u043e\\u043f\\u043e\\u043a\\u0430\\u0437, \\u041b\\u0435\\u043a\\u0446\\u0438\\u044f\\u00a0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u041a\\u0438\\u043d\\u043e, \\u041b\\u0438\\u0447\\u043d\\u043e\\u0441\\u0442\\u0438, \\u041a\\u043b\\u0430\\u0441\\u0441\\u0438\\u043a\\u0430\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u041a\\u0438\\u043d\\u043e\\u043a\\u043b\\u0443\\u0431 \\u0432 \\u0410\\u043d\\u0442\\u0438\\u043f\\u0435 \\u00ab\\u041a\\u0440\\u0443\\u043f\\u043d\\u0430\\u044f \\u0440\\u044b\\u0431\\u0430\\u00bb\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"desc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0424\\u0438\\u043b\\u044c\\u043c \\u0422\\u0438\\u043c\\u0430 \\u0411\\u0435\\u0440\\u0442\\u043e\\u043d\\u0430, \\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0439 \\u0441\\u043b\\u0435\\u0433\\u043a\\u0430 \\u043e\\u0442\\u043b\\u0438\\u0447\\u0430\\u0435\\u0442\\u0441\\u044f \\u043e\\u0442 \\u043f\\u0440\\u0438\\u0432\\u044b\\u0447\\u043d\\u044b\\u0445 \\u0440\\u0430\\u0431\\u043e\\u0442 \\u0430\\u0432\\u0442\\u043e\\u0440\\u0430. \\u0412 \\u0447\\u0435\\u043c \\u043e\\u0441\\u043e\\u0431\\u0435\\u043d\\u043d\\u043e\\u0441\\u0442\\u044c \\u043a\\u0430\\u0440\\u0442\\u0438\\u043d\\u044b \\u0438 \\u043f\\u043e\\u0447\\u0435\\u043c\\u0443 \\u0432 \\u043a\\u0438\\u043d\\u043e \\u0442\\u0430\\u043a \\u0447\\u0430\\u0441\\u0442\\u043e \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u0443\\u0435\\u0442\\u0441\\u044f \\u043e\\u0431\\u0440\\u0430\\u0437 \\u0440\\u044b\\u0431\\u0430\\u043b\\u043a\\u0438, \\u043c\\u044b \\u043e\\u0431\\u0441\\u0443\\u0434\\u0438\\u043c \\u043f\\u043e\\u0441\\u043b\\u0435 \\u043f\\u0440\\u043e\\u0441\\u043c\\u043e\\u0442\\u0440\\u0430 \\u0444\\u0438\\u043b\\u044c\\u043c\\u0430 \\u0441 \\u043d\\u0430\\u0448\\u0438\\u043c \\u043b\\u0435\\u043a\\u0442\\u043e\\u0440\\u043e\\u043c \\u0410\\u043d\\u0434\\u0440\\u0435\\u0435\\u043c \\u0429\\u0435\\u043d\\u043d\\u0438\\u043a\\u043e\\u0432\\u044b\\u043c \\u043c\\u043b.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0414\\u0430\\u0442\\u044b: 27 \\u043d\\u043e\\u044f\\u0431\\u0440\\u044f, 20:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"loc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u0414\\u043e\\u043c \\u0410\\u043d\\u0442\\u0438\\u043f\\u0430 (\\u041c\\u0430\\u043b\\u044b\\u0439 \\u0417\\u043d\\u0430\\u043c\\u0435\\u043d\\u0441\\u043a\\u0438\\u0439 \\u043f\\u0435\\u0440\\u0435\\u0443\\u043b\\u043e\\u043a, 9)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: \\u0431\\u0435\\u0441\\u043f\\u043b\\u0430\\u0442\\u043d\\u043e\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"link\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: -\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 178
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "CAB2y_li3TTG"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### 2"
      ],
      "metadata": {
        "id": "_10eigLJldM0"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "NEW_ID_SET2 = ['152', '21', '122', '173']  # !!!!!\n",
        "# открываем модель\n",
        "with open('1_group_based_model.pkl', 'rb') as mfile:\n",
        "    loaded_model2 = pickle.load(mfile)\n",
        "\n",
        "new2_interactions = pd.read_excel('intrc_it_22.xlsx', index_col=0)"
      ],
      "metadata": {
        "id": "jnQayOJWldNA"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "new2_interactions.columns = new2_interactions.columns.astype(str)\n",
        "new2_interactions = new2_interactions.dropna(axis=1, how='all')\n",
        "new2_interactions = new2_interactions.fillna(0).replace(1, 5).replace(-1, 1)\n",
        "\n",
        "new2_interactions = pd.concat([new1_interactions, new2_interactions], axis=1).astype(int)\n",
        "extended_interactions = sparse.csr_matrix(new2_interactions.values)\n",
        "\n",
        "new2_event_features = test_event_features[test_event_features.item_id.isin(NEW_ID_SET2)]"
      ],
      "metadata": {
        "id": "vvdXWJXhldNA"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "new2_interactions.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GgHWSR_j2aaW",
        "outputId": "d16a8e72-a0de-4067-c630-a98deb17511a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(6, 134)"
            ]
          },
          "metadata": {},
          "execution_count": 181
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "extended_interactions"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "L-zErUEVoR8g",
        "outputId": "6a87250d-b62d-4ac5-9580-a84ebba2ec1c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<6x134 sparse matrix of type '<class 'numpy.int64'>'\n",
              "\twith 485 stored elements in Compressed Sparse Row format>"
            ]
          },
          "metadata": {},
          "execution_count": 182
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "new_train_event_features = pd.concat([train_event_features, new_event_features, new2_event_features])\n",
        "new_train_event_features.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0c98ea60-96e4-4777-995f-d2ce6371debb",
        "id": "_OKn5CFtldNA"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(134, 49)"
            ]
          },
          "metadata": {},
          "execution_count": 183
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# объединенные\n",
        "new_train_item_features = dataset.build_item_features(\n",
        "    (\n",
        "        (x['item_id'], {f: x[f] for f in new_train_event_features.columns if f != 'item_id'})\n",
        "        for _, x in new_train_event_features.iterrows()\n",
        "    ), normalize=False\n",
        ")"
      ],
      "metadata": {
        "id": "rR1qZMylldNA"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "new_train_item_features"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WpnDy2_FLa22",
        "outputId": "f7a14ca3-c6cd-41b8-b93b-da618261b52e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<202x250 sparse matrix of type '<class 'numpy.float32'>'\n",
              "\twith 6634 stored elements in Compressed Sparse Row format>"
            ]
          },
          "metadata": {},
          "execution_count": 185
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "loaded_model.get_user_representations()[1][0]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "915a0527-312b-4f0e-ec34-a233ecaf20e5",
        "id": "ThYcos0zldNB"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0.23177938,  0.826033  ,  0.24668643,  0.5851484 , -0.4648882 ,\n",
              "        0.32600564,  0.0133052 , -0.37680596,  0.43859562, -0.33166203],\n",
              "      dtype=float32)"
            ]
          },
          "metadata": {},
          "execution_count": 186
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "loaded_model2.get_user_representations()[1][0]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c2449095-7aab-4035-ab11-01a595b8571d",
        "id": "xd6x30XUldNB"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0.23177938,  0.826033  ,  0.24668643,  0.5851484 , -0.4648882 ,\n",
              "        0.32600564,  0.0133052 , -0.37680596,  0.43859562, -0.33166203],\n",
              "      dtype=float32)"
            ]
          },
          "metadata": {},
          "execution_count": 187
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "loaded_model2.fit_partial(\n",
        "    interactions=extended_interactions,\n",
        "    user_features=user_features,\n",
        "    item_features=new_train_item_features,\n",
        "    epochs=2,\n",
        "    num_threads=1\n",
        ")\n",
        "\n",
        "with open('2_group_based_model.pkl', 'wb') as model_file:\n",
        "    pickle.dump(loaded_model2, model_file)"
      ],
      "metadata": {
        "id": "aX1obWEHldNB"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "loaded_model.get_user_representations()[1][0]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d9615251-c56f-49de-a815-96b6e3e2ab71",
        "id": "Bax1SQLHldNB"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0.23177938,  0.826033  ,  0.24668643,  0.5851484 , -0.4648882 ,\n",
              "        0.32600564,  0.0133052 , -0.37680596,  0.43859562, -0.33166203],\n",
              "      dtype=float32)"
            ]
          },
          "metadata": {},
          "execution_count": 189
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "loaded_model2.get_user_representations()[1][0]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "83d94b58-d6da-41d4-f29a-89083fe9127c",
        "id": "a603GwimldNB"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0.23869179,  0.86466223,  0.24834852,  0.5931383 , -0.47686478,\n",
              "        0.32100725,  0.0161411 , -0.38641727,  0.45931667, -0.32934105],\n",
              "      dtype=float32)"
            ]
          },
          "metadata": {},
          "execution_count": 190
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "group_profile"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9f3d7f1e-548a-4ae3-9e05-470e4a18bdf3",
        "id": "_tmTsGFEldNB"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0.75279605,  0.67136485,  0.36458179,  0.09540245, -0.19218179,\n",
              "       -0.7674408 , -0.46970268, -0.3317718 , -0.62388041, -0.25919138])"
            ]
          },
          "metadata": {},
          "execution_count": 191
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "user_ids = ['Ксю', 'Аня', 'Лиза', 'Катя', 'Ира', 'Окси']\n",
        "group_profile = aggregate_user_profiles(\n",
        "    loaded_model2, dataset, user_features_data, user_features, user_ids, INDIVIDUAL_COEF, 0\n",
        "    )\n",
        "group_profile"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "bc5b51b7-a2a8-4b85-d6cd-181191dfc81c",
        "id": "Up_x0FNoldNB"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0.80592228,  0.8592267 ,  0.38166762, -0.01135793, -0.21444262,\n",
              "       -0.87126472, -0.56631003, -0.28566585, -0.65052415, -0.20909916])"
            ]
          },
          "metadata": {},
          "execution_count": 192
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 68\n",
        "test_event_features_cut = test_event_features.drop(test_event_features[\n",
        "    test_event_features.item_id.isin(NEW_ID_SET + NEW_ID_SET2)\n",
        "    ].index, axis=0)\n",
        "test_event_features_cut.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "1c738551-5970-4bd0-93ec-67aeb8014379",
        "id": "g73QFnQ3ldNB"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(68, 49)"
            ]
          },
          "metadata": {},
          "execution_count": 193
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "test_item_features"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8-PJea0WLoSL",
        "outputId": "07568b2a-5601-4b6b-d46e-734eef5517df"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<202x250 sparse matrix of type '<class 'numpy.float32'>'\n",
              "\twith 3850 stored elements in Compressed Sparse Row format>"
            ]
          },
          "metadata": {},
          "execution_count": 194
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "CHOOSE_FROM = test_event_features_cut.copy(deep=True)  # обрезанный потому что нельзя рекомендовать лайкнутые\n",
        "CHOOSE_FROM_FTRS = test_item_features # не обрезанный потому что зачем, у медели и так есть все фичи тестовых пои\n",
        "\n",
        "top_n_group_recommendations = get_group_recommendations(\n",
        "    loaded_model2, dataset, group_profile,\n",
        "    CHOOSE_FROM_FTRS, CHOOSE_FROM, user_features\n",
        ")\n",
        "print(top_n_group_recommendations)\n",
        "\n",
        "# display(event_data[event_data.id.isin(top_n_group_recommendations)])\n",
        "\n",
        "display(\n",
        "    event_data[event_data['id'].isin(top_n_group_recommendations[:3])]\n",
        "    .set_index('id')\n",
        "    .reindex(top_n_group_recommendations[:3])\n",
        "    .reset_index()\n",
        ")\n",
        "\n",
        "# random seed для рандома рекомендации\n",
        "random.seed(83)\n",
        "event_data[\n",
        "    event_data.id\n",
        "    == random.choice(CHOOSE_FROM[~CHOOSE_FROM.item_id.isin(top_n_group_recommendations[:3])].item_id.values)\n",
        "]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 453
        },
        "outputId": "5b08b077-9b9f-4e00-f554-8b4882212bb0",
        "id": "EYY79xjoldNC"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['86', '53', '18', '105', '157', '156', '104', '129', '74', '132', '118', '1', '28', '68', '109', '3', '128', '108', '32', '197']\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "   id                 cat_1                               cat_2  \\\n",
              "0  86              Выставка  Мультимедиа, Современное Искусство   \n",
              "1  53  Фестиваль, Кинопоказ                 Еда, Кино, Классика   \n",
              "2  18             Кинопоказ               Мультфильмы, Классика   \n",
              "\n",
              "                                                name  \\\n",
              "0          Первое в мире уникальное иммерсивное шоу    \n",
              "1  До 12 мая в Москве идет фестиваль «Ешь! Смотри...   \n",
              "2  В мае в сети кинотеатров Москино продолжат пок...   \n",
              "\n",
              "                                                desc                     date  \\\n",
              "0  В столице есть первое иммерсивное арт-простран...  Даты: Пн-Вс 10:00-22:00   \n",
              "1  Уже третий по счету фестиваль собрал более 50 ...          Даты: до 12 мая   \n",
              "2  С 5 по 19 мая на большие экраны кинотеатров Мо...         Даты: по 19 мая.   \n",
              "\n",
              "                                              loc  \\\n",
              "0  Место: Москва, 2-я Останкинская ул., 3 (город)   \n",
              "1                             Место: в ресторанах   \n",
              "2                       Место: Кинотеатры Москино   \n",
              "\n",
              "                                               price                  link  \n",
              "0                                  Стоимость: 1500 ₽  Ссылка: Купить билет  \n",
              "1                               Стоимость: от 2000 р        Ссылка: ссылка  \n",
              "2  Стоимость: Бесплатно, по предварительной регис...     Ссылка: Подробнее  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e985b20e-678d-4b05-aa97-ec6789d03ee9\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>cat_1</th>\n",
              "      <th>cat_2</th>\n",
              "      <th>name</th>\n",
              "      <th>desc</th>\n",
              "      <th>date</th>\n",
              "      <th>loc</th>\n",
              "      <th>price</th>\n",
              "      <th>link</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>86</td>\n",
              "      <td>Выставка</td>\n",
              "      <td>Мультимедиа, Современное Искусство</td>\n",
              "      <td>Первое в мире уникальное иммерсивное шоу</td>\n",
              "      <td>В столице есть первое иммерсивное арт-простран...</td>\n",
              "      <td>Даты: Пн-Вс 10:00-22:00</td>\n",
              "      <td>Место: Москва, 2-я Останкинская ул., 3 (город)</td>\n",
              "      <td>Стоимость: 1500 ₽</td>\n",
              "      <td>Ссылка: Купить билет</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>53</td>\n",
              "      <td>Фестиваль, Кинопоказ</td>\n",
              "      <td>Еда, Кино, Классика</td>\n",
              "      <td>До 12 мая в Москве идет фестиваль «Ешь! Смотри...</td>\n",
              "      <td>Уже третий по счету фестиваль собрал более 50 ...</td>\n",
              "      <td>Даты: до 12 мая</td>\n",
              "      <td>Место: в ресторанах</td>\n",
              "      <td>Стоимость: от 2000 р</td>\n",
              "      <td>Ссылка: ссылка</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>18</td>\n",
              "      <td>Кинопоказ</td>\n",
              "      <td>Мультфильмы, Классика</td>\n",
              "      <td>В мае в сети кинотеатров Москино продолжат пок...</td>\n",
              "      <td>С 5 по 19 мая на большие экраны кинотеатров Мо...</td>\n",
              "      <td>Даты: по 19 мая.</td>\n",
              "      <td>Место: Кинотеатры Москино</td>\n",
              "      <td>Стоимость: Бесплатно, по предварительной регис...</td>\n",
              "      <td>Ссылка: Подробнее</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e985b20e-678d-4b05-aa97-ec6789d03ee9')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e985b20e-678d-4b05-aa97-ec6789d03ee9 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e985b20e-678d-4b05-aa97-ec6789d03ee9');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-8bf12223-8c46-4b07-818b-6d9295cd4f01\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8bf12223-8c46-4b07-818b-6d9295cd4f01')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-8bf12223-8c46-4b07-818b-6d9295cd4f01 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"]\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"86\",\n          \"53\",\n          \"18\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0412\\u044b\\u0441\\u0442\\u0430\\u0432\\u043a\\u0430\",\n          \"\\u0424\\u0435\\u0441\\u0442\\u0438\\u0432\\u0430\\u043b\\u044c, \\u041a\\u0438\\u043d\\u043e\\u043f\\u043e\\u043a\\u0430\\u0437\",\n          \"\\u041a\\u0438\\u043d\\u043e\\u043f\\u043e\\u043a\\u0430\\u0437\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u041c\\u0443\\u043b\\u044c\\u0442\\u0438\\u043c\\u0435\\u0434\\u0438\\u0430, \\u0421\\u043e\\u0432\\u0440\\u0435\\u043c\\u0435\\u043d\\u043d\\u043e\\u0435 \\u0418\\u0441\\u043a\\u0443\\u0441\\u0441\\u0442\\u0432\\u043e\",\n          \"\\u0415\\u0434\\u0430, \\u041a\\u0438\\u043d\\u043e, \\u041a\\u043b\\u0430\\u0441\\u0441\\u0438\\u043a\\u0430\",\n          \"\\u041c\\u0443\\u043b\\u044c\\u0442\\u0444\\u0438\\u043b\\u044c\\u043c\\u044b, \\u041a\\u043b\\u0430\\u0441\\u0441\\u0438\\u043a\\u0430\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u041f\\u0435\\u0440\\u0432\\u043e\\u0435 \\u0432 \\u043c\\u0438\\u0440\\u0435 \\u0443\\u043d\\u0438\\u043a\\u0430\\u043b\\u044c\\u043d\\u043e\\u0435 \\u0438\\u043c\\u043c\\u0435\\u0440\\u0441\\u0438\\u0432\\u043d\\u043e\\u0435 \\u0448\\u043e\\u0443\\u00a0\",\n          \"\\u0414\\u043e 12 \\u043c\\u0430\\u044f \\u0432 \\u041c\\u043e\\u0441\\u043a\\u0432\\u0435 \\u0438\\u0434\\u0435\\u0442 \\u0444\\u0435\\u0441\\u0442\\u0438\\u0432\\u0430\\u043b\\u044c \\u00ab\\u0415\\u0448\\u044c! \\u0421\\u043c\\u043e\\u0442\\u0440\\u0438! \\u041b\\u044e\\u0431\\u0438!\\u00bb\",\n          \"\\u0412 \\u043c\\u0430\\u0435 \\u0432 \\u0441\\u0435\\u0442\\u0438 \\u043a\\u0438\\u043d\\u043e\\u0442\\u0435\\u0430\\u0442\\u0440\\u043e\\u0432 \\u041c\\u043e\\u0441\\u043a\\u0438\\u043d\\u043e \\u043f\\u0440\\u043e\\u0434\\u043e\\u043b\\u0436\\u0430\\u0442 \\u043f\\u043e\\u043a\\u0430\\u0437\\u044b\\u0432\\u0430\\u0442\\u044c \\u043a\\u043b\\u0430\\u0441\\u0441\\u0438\\u043a\\u0443 \\u0441\\u043e\\u0432\\u0435\\u0442\\u0441\\u043a\\u0438\\u0445 \\u043c\\u0443\\u043b\\u044c\\u0442\\u0438\\u043a\\u043e\\u0432\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"desc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0412 \\u0441\\u0442\\u043e\\u043b\\u0438\\u0446\\u0435 \\u0435\\u0441\\u0442\\u044c \\u043f\\u0435\\u0440\\u0432\\u043e\\u0435 \\u0438\\u043c\\u043c\\u0435\\u0440\\u0441\\u0438\\u0432\\u043d\\u043e\\u0435 \\u0430\\u0440\\u0442-\\u043f\\u0440\\u043e\\u0441\\u0442\\u0440\\u0430\\u043d\\u0441\\u0442\\u0432\\u043e Luminar, \\u043f\\u0440\\u0435\\u043e\\u0431\\u0440\\u0430\\u0436\\u0430\\u044e\\u0449\\u0435\\u0435 \\u0440\\u0435\\u0430\\u043b\\u044c\\u043d\\u043e\\u0441\\u0442\\u044c! \\u041f\\u0440\\u043e\\u0435\\u043a\\u0442 \\u043e\\u0441\\u043d\\u043e\\u0432\\u0430\\u043d \\u043d\\u0430 \\u0438\\u043d\\u0442\\u0435\\u0440\\u0430\\u043a\\u0442\\u0438\\u0432\\u043d\\u043e\\u0441\\u0442\\u0438, \\u043e\\u0431\\u044a\\u0435\\u043c\\u043d\\u044b\\u0445 3D-\\u0438\\u043b\\u043b\\u044e\\u0437\\u0438\\u044f\\u0445 \\u0438 \\u0441\\u043e\\u0432\\u0440\\u0435\\u043c\\u0435\\u043d\\u043d\\u044b\\u0445 \\u0446\\u0438\\u0444\\u0440\\u043e\\u0432\\u044b\\u0445 \\u0442\\u0435\\u0445\\u043d\\u043e\\u043b\\u043e\\u0433\\u0438\\u044f\\u0445. \\u041e\\u0431\\u0449\\u0430\\u044f \\u043f\\u043b\\u043e\\u0449\\u0430\\u0434\\u044c \\u043f\\u0440\\u043e\\u0441\\u0442\\u0440\\u0430\\u043d\\u0441\\u0442\\u0432\\u0430 \\u0441\\u043e\\u0441\\u0442\\u0430\\u0432\\u043b\\u044f\\u0435\\u0442 1000 \\u043a\\u0432. \\u043c. \\u0417\\u0434\\u0435\\u0441\\u044c \\u0442\\u0440\\u0438 \\u0437\\u0430\\u043b\\u0430 \\u0438 LED-\\u0442\\u043e\\u043d\\u043d\\u0435\\u043b\\u044c \\u0441\\u043e \\u0441\\u0432\\u0435\\u0442\\u043e\\u0432\\u044b\\u043c\\u0438 \\u0442\\u0435\\u043a\\u0441\\u0442\\u0443\\u0440\\u0430\\u043c\\u0438, \\u0441\\u043e\\u0437\\u0434\\u0430\\u044e\\u0449\\u0438\\u043c\\u0438 \\u0438\\u043b\\u043b\\u044e\\u0437\\u0438\\u044e \\u0431\\u0435\\u0441\\u043a\\u043e\\u043d\\u0435\\u0447\\u043d\\u043e\\u0441\\u0442\\u0438.\",\n          \"\\u0423\\u0436\\u0435 \\u0442\\u0440\\u0435\\u0442\\u0438\\u0439 \\u043f\\u043e \\u0441\\u0447\\u0435\\u0442\\u0443 \\u0444\\u0435\\u0441\\u0442\\u0438\\u0432\\u0430\\u043b\\u044c \\u0441\\u043e\\u0431\\u0440\\u0430\\u043b \\u0431\\u043e\\u043b\\u0435\\u0435 50 \\u043c\\u043e\\u0441\\u043a\\u043e\\u0432\\u0441\\u043a\\u0438\\u0445 \\u0440\\u0435\\u0441\\u0442\\u043e\\u0440\\u0430\\u043d\\u043e\\u0432, \\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0435 \\u0441\\u043e\\u0437\\u0434\\u0430\\u043b\\u0438 \\u0444\\u0435\\u0441\\u0442\\u0438\\u0432\\u0430\\u043b\\u044c\\u043d\\u044b\\u0435 \\u0441\\u0435\\u0442\\u044b \\u0441 \\u0432\\u0430\\u0440\\u0438\\u0430\\u0446\\u0438\\u0435\\u0439 \\u0431\\u043b\\u044e\\u0434 \\u043f\\u043e \\u043c\\u043e\\u0442\\u0438\\u0432\\u0430\\u043c \\u043b\\u044e\\u0431\\u0438\\u043c\\u044b\\u0445 \\u043a\\u0438\\u043d\\u043e\\u043a\\u0430\\u0440\\u0442\\u0438\\u043d. \\u041d\\u0430\\u043f\\u0440\\u0438\\u043c\\u0435\\u0440, \\u00ab\\u0420\\u044b\\u0431\\u0430 \\u041c\\u0435\\u0447\\u0442\\u044b\\u00bb \\u043f\\u0440\\u0435\\u0434\\u0441\\u0442\\u0430\\u0432\\u043b\\u044f\\u0435\\u0442 \\u0442\\u0435\\u043c\\u0430\\u0442\\u0438\\u0447\\u0435\\u0441\\u043a\\u0438\\u0439 \\u0441\\u0435\\u0442 \\u0432 \\u0434\\u0443\\u0445\\u0435 \\u0441\\u0430\\u0433\\u0438 \\u00ab\\u041f\\u0438\\u0440\\u0430\\u0442\\u044b \\u041a\\u0430\\u0440\\u0438\\u0431\\u0441\\u043a\\u043e\\u0433\\u043e \\u043c\\u043e\\u0440\\u044f\\u00bb, MIDSUMMER \\u043d\\u0430\\u043f\\u043e\\u043c\\u0438\\u043d\\u0430\\u0435\\u0442 \\u043f\\u043e\\u043b\\u043d\\u0443\\u044e \\u0432\\u043e\\u043b\\u0448\\u0435\\u0431\\u0441\\u0442\\u0432\\u0430 \\u0438\\u0441\\u0442\\u043e\\u0440\\u0438\\u044e \\u00ab\\u0413\\u0430\\u0440\\u0440\\u0438 \\u041f\\u043e\\u0442\\u0442\\u0435\\u0440\\u0430\\u00bb. \\u0412 \\u043f\\u0440\\u043e\\u0433\\u0440\\u0430\\u043c\\u043c\\u0435 \\u0444\\u0435\\u0441\\u0442\\u0438\\u0432\\u0430\\u043b\\u044f \\u2014 \\u043a\\u0438\\u043d\\u043e\\u043f\\u043e\\u043a\\u0430\\u0437\\u044b, \\u043a\\u0438\\u043d\\u043e\\u043a\\u043b\\u0443\\u0431 \\u0438 \\u0434\\u0440\\u0443\\u0433\\u0438\\u0435 \\u043c\\u0435\\u0440\\u043e\\u043f\\u0440\\u0438\\u044f\\u0442\\u0438\\u044f, \\u0441\\u043e\\u0435\\u0434\\u0438\\u043d\\u044f\\u044e\\u0449\\u0438\\u0435 \\u043c\\u0438\\u0440 \\u043a\\u0438\\u043d\\u043e \\u0438 \\u043c\\u0438\\u0440 \\u0433\\u0430\\u0441\\u0442\\u0440\\u043e\\u043d\\u043e\\u043c\\u0438\\u0438. \\u0410 \\u0435\\u0449\\u0435 \\u0432\\u0441\\u0435 \\u0433\\u043e\\u0441\\u0442\\u0438 \\u0444\\u0435\\u0441\\u0442\\u0438\\u0432\\u0430\\u043b\\u044f \\u043c\\u043e\\u0433\\u0443\\u0442 \\u043f\\u0440\\u0438\\u043d\\u044f\\u0442\\u044c \\u0443\\u0447\\u0430\\u0441\\u0442\\u0438\\u0435 \\u0432 \\u0440\\u043e\\u0437\\u044b\\u0433\\u0440\\u044b\\u0448\\u0435 \\u043f\\u0440\\u0438\\u0437\\u043e\\u0432 \\u043e\\u0442 VK: \\u0441\\u0435\\u0440\\u0442\\u0438\\u0444\\u0438\\u043a\\u0430\\u0442\\u044b \\u043d\\u0430 \\u043f\\u043e\\u0441\\u0435\\u0449\\u0435\\u043d\\u0438\\u0435 \\u0440\\u0435\\u0441\\u0442\\u043e\\u0440\\u0430\\u043d\\u043e\\u0432 \\u0441\\u043e \\u0437\\u0432\\u0435\\u0437\\u0434\\u0430\\u043c\\u0438 \\u00ab\\u041c\\u0438\\u0448\\u043b\\u0435\\u043d\\u00bb, \\u0438 \\u0440\\u0435\\u0441\\u0442\\u043e\\u0440\\u0430\\u043d\\u043e\\u0432-\\u0443\\u0447\\u0430\\u0441\\u0442\\u043d\\u0438\\u043a\\u043e\\u0432 \\u0424\\u0435\\u0441\\u0442\\u0438\\u0432\\u0430\\u043b\\u044f. \\u0412 \\u0444\\u0435\\u0441\\u0442\\u0438\\u0432\\u0430\\u043b\\u0435 \\u043f\\u0440\\u0438\\u043d\\u0438\\u043c\\u0430\\u044e\\u0442 \\u0443\\u0447\\u0430\\u0441\\u0442\\u0438\\u0435: \\u00ab\\u041f\\u0438\\u0444\\u0430\\u0433\\u043e\\u0440\\u00bb, \\u00ab\\u0420\\u044b\\u0431\\u0430 \\u041c\\u0435\\u0447\\u0442\\u044b\\u00bb, \\u00ab\\u0421\\u044b\\u0440\\u043e\\u0432\\u0430\\u0440\\u043d\\u044f\\u00bb, \\u00ab\\u0428\\u0430\\u043b\\u044f\\u043f\\u0438\\u043d\\u00bb, \\u00ab\\u0428\\u043c\\u0430\\u043a\\u00bb, \\u00ab\\u042d\\u043b\\u0430\\u0440\\u0434\\u0436\\u0438\\u00bb, ATLANTICA seafood, Balzi Rossi, De Torino, BURO. TSUM, Joi Izakaya, [KU:], LINBISTR\\u00d3, MIDSUMMER, Mor\\u00f3, Mr.Lee, Sapiens, SEPTA, Touch\\u00e9 \\u0438 \\u0434\\u0440\\u0443\\u0433\\u0438\\u0435.\",\n          \"\\u0421 5 \\u043f\\u043e 19 \\u043c\\u0430\\u044f \\u043d\\u0430 \\u0431\\u043e\\u043b\\u044c\\u0448\\u0438\\u0435 \\u044d\\u043a\\u0440\\u0430\\u043d\\u044b \\u043a\\u0438\\u043d\\u043e\\u0442\\u0435\\u0430\\u0442\\u0440\\u043e\\u0432 \\u041c\\u043e\\u0441\\u043a\\u0438\\u043d\\u043e \\u0432\\u043e\\u0437\\u0432\\u0440\\u0430\\u0449\\u0430\\u0435\\u0442\\u0441\\u044f \\u0432\\u0441\\u0435\\u043c\\u0438 \\u043b\\u044e\\u0431\\u0438\\u043c\\u044b\\u0439 \\u0441\\u043e\\u0432\\u043c\\u0435\\u0441\\u0442\\u043d\\u044b\\u0439 \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442 \\u0441\\u043e \\u0441\\u0442\\u0443\\u0434\\u0438\\u0435\\u0439 \\u00ab\\u0421\\u043e\\u044e\\u0437\\u043c\\u0443\\u043b\\u044c\\u0442\\u0444\\u0438\\u043b\\u044c\\u043c\\u00bb \\u2014 \\u0446\\u0438\\u043a\\u043b \\u0434\\u0435\\u0442\\u0441\\u043a\\u0438\\u0445 \\u0443\\u0442\\u0440\\u0435\\u043d\\u043d\\u0438\\u043a\\u043e\\u0432 \\u0434\\u043b\\u044f \\u0441\\u0430\\u043c\\u044b\\u0445 \\u043c\\u0430\\u043b\\u0435\\u043d\\u044c\\u043a\\u0438\\u0445 \\u043b\\u044e\\u0431\\u0438\\u0442\\u0435\\u043b\\u0435\\u0439 \\u043a\\u0438\\u043d\\u043e \\u0438 \\u0438\\u0445 \\u0440\\u043e\\u0434\\u0438\\u0442\\u0435\\u043b\\u0435\\u0439. \\u0412 \\u043d\\u043e\\u0432\\u043e\\u0439 \\u043f\\u0440\\u043e\\u0433\\u0440\\u0430\\u043c\\u043c\\u0435 \\u0437\\u0440\\u0438\\u0442\\u0435\\u043b\\u0435\\u0439 \\u0436\\u0434\\u0443\\u0442 \\u0437\\u043d\\u0430\\u043c\\u0435\\u043d\\u0438\\u0442\\u044b\\u0435 \\u0441\\u043e\\u0432\\u0435\\u0442\\u0441\\u043a\\u0438\\u0435 \\u043c\\u0443\\u043b\\u044c\\u0442\\u0438\\u043a\\u0438, \\u0430 \\u0442\\u0430\\u043a\\u0436\\u0435 \\u043f\\u0440\\u0438\\u043a\\u043b\\u044e\\u0447\\u0435\\u043d\\u0438\\u044f \\u043a\\u0443\\u043b\\u044c\\u0442\\u043e\\u0432\\u044b\\u0445 \\u0433\\u0435\\u0440\\u043e\\u0435\\u0432.\\u00a0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0414\\u0430\\u0442\\u044b: \\u041f\\u043d-\\u0412\\u0441 10:00-22:00\",\n          \"\\u0414\\u0430\\u0442\\u044b: \\u0434\\u043e 12 \\u043c\\u0430\\u044f\",\n          \"\\u0414\\u0430\\u0442\\u044b: \\u043f\\u043e 19 \\u043c\\u0430\\u044f.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"loc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041c\\u043e\\u0441\\u043a\\u0432\\u0430, 2-\\u044f \\u041e\\u0441\\u0442\\u0430\\u043d\\u043a\\u0438\\u043d\\u0441\\u043a\\u0430\\u044f \\u0443\\u043b., 3 (\\u0433\\u043e\\u0440\\u043e\\u0434)\",\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u0432 \\u0440\\u0435\\u0441\\u0442\\u043e\\u0440\\u0430\\u043d\\u0430\\u0445\",\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041a\\u0438\\u043d\\u043e\\u0442\\u0435\\u0430\\u0442\\u0440\\u044b \\u041c\\u043e\\u0441\\u043a\\u0438\\u043d\\u043e\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: 1500 \\u20bd\",\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: \\u043e\\u0442 2000 \\u0440\",\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: \\u0411\\u0435\\u0441\\u043f\\u043b\\u0430\\u0442\\u043d\\u043e, \\u043f\\u043e \\u043f\\u0440\\u0435\\u0434\\u0432\\u0430\\u0440\\u0438\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e\\u0439 \\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u0438\\u00a0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"link\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: \\u041a\\u0443\\u043f\\u0438\\u0442\\u044c \\u0431\\u0438\\u043b\\u0435\\u0442\",\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: \\u0441\\u0441\\u044b\\u043b\\u043a\\u0430\",\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: \\u041f\\u043e\\u0434\\u0440\\u043e\\u0431\\u043d\\u0435\\u0435\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id         cat_1     cat_2  \\\n",
              "195  197  Мастерклассы  Живопись   \n",
              "\n",
              "                                                  name  \\\n",
              "195  Мастер-класс по зарисовкам с натуры в особняке...   \n",
              "\n",
              "                                                  desc  \\\n",
              "195  Пока проект мастер-классов Your Hidden Talent ...   \n",
              "\n",
              "                           date                           loc  \\\n",
              "195  Даты: 05.05, с 18:30-20:30  Место: Новая Басманная, 19с1   \n",
              "\n",
              "                price                                            link  \n",
              "195  Стоимость: 4500р  Ссылка: Забронировать тут (количество мест 15)  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-29bf28fa-9a6d-467a-819f-912a86210790\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>cat_1</th>\n",
              "      <th>cat_2</th>\n",
              "      <th>name</th>\n",
              "      <th>desc</th>\n",
              "      <th>date</th>\n",
              "      <th>loc</th>\n",
              "      <th>price</th>\n",
              "      <th>link</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>195</th>\n",
              "      <td>197</td>\n",
              "      <td>Мастерклассы</td>\n",
              "      <td>Живопись</td>\n",
              "      <td>Мастер-класс по зарисовкам с натуры в особняке...</td>\n",
              "      <td>Пока проект мастер-классов Your Hidden Talent ...</td>\n",
              "      <td>Даты: 05.05, с 18:30-20:30</td>\n",
              "      <td>Место: Новая Басманная, 19с1</td>\n",
              "      <td>Стоимость: 4500р</td>\n",
              "      <td>Ссылка: Забронировать тут (количество мест 15)</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-29bf28fa-9a6d-467a-819f-912a86210790')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-29bf28fa-9a6d-467a-819f-912a86210790 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-29bf28fa-9a6d-467a-819f-912a86210790');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"]\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"197\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u041c\\u0430\\u0441\\u0442\\u0435\\u0440\\u043a\\u043b\\u0430\\u0441\\u0441\\u044b\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0416\\u0438\\u0432\\u043e\\u043f\\u0438\\u0441\\u044c\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u041c\\u0430\\u0441\\u0442\\u0435\\u0440-\\u043a\\u043b\\u0430\\u0441\\u0441 \\u043f\\u043e \\u0437\\u0430\\u0440\\u0438\\u0441\\u043e\\u0432\\u043a\\u0430\\u043c \\u0441 \\u043d\\u0430\\u0442\\u0443\\u0440\\u044b \\u0432 \\u043e\\u0441\\u043e\\u0431\\u043d\\u044f\\u043a\\u0435, \\u043d\\u043e\\u0432\\u0430\\u044f \\u0432\\u0441\\u0442\\u0440\\u0435\\u0447\\u0430\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"desc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u041f\\u043e\\u043a\\u0430 \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442 \\u043c\\u0430\\u0441\\u0442\\u0435\\u0440-\\u043a\\u043b\\u0430\\u0441\\u0441\\u043e\\u0432 Your Hidden Talent\\u00a0 \\u0432\\u0441\\u0435 \\u0435\\u0449\\u0451 \\u0432 \\u041c\\u043e\\u0441\\u043a\\u0432\\u0435, \\u044d\\u0442\\u043e \\u043d\\u0430\\u0434\\u043e \\u0443\\u0432\\u0438\\u0434\\u0435\\u0442\\u044c \\u0432\\u0436\\u0438\\u0432\\u0443\\u044e. \\u0427\\u0442\\u043e \\u0431\\u0443\\u0434\\u0435\\u0442 \\u043d\\u0430 \\u043c\\u0430\\u0441\\u0442\\u0435\\u0440-\\u043a\\u043b\\u0430\\u0441\\u0441\\u0435: \\u043e\\u0431\\u043d\\u0430\\u0436\\u0435\\u043d\\u043d\\u0430\\u044f \\u043d\\u0430\\u0442\\u0443\\u0440\\u0449\\u0438\\u0446\\u0430, \\u0432\\u0438\\u043d\\u043e, \\u043a\\u043b\\u0430\\u0441\\u0441\\u0438\\u0447\\u0435\\u0441\\u043a\\u0430\\u044f \\u043c\\u0443\\u0437\\u044b\\u043a\\u0430, \\u0441\\u0432\\u0435\\u0447\\u0438 \\u0438 12 \\u0442\\u0435\\u0445\\u043d\\u0438\\u043a \\u043e\\u0442 \\u0445\\u0443\\u0434\\u043e\\u0436\\u043d\\u0438\\u0446\\u044b. \\u041f\\u043e\\u0434\\u0445\\u043e\\u0434\\u0438\\u0442 \\u0434\\u0430\\u0436\\u0435 \\u0434\\u0430\\u0436\\u0435 \\u0434\\u043b\\u044f \\u0442\\u0435\\u0445, \\u043a\\u0442\\u043e \\u043d\\u0435 \\u0443\\u043c\\u0435\\u0435\\u0442 \\u0440\\u0438\\u0441\\u043e\\u0432\\u0430\\u0442\\u044c. \\u0412\\u0435\\u0434\\u044c \\u043d\\u0430 \\u043a\\u043b\\u0430\\u0441\\u0441\\u0435 \\u043e\\u0442\\u043a\\u043b\\u044e\\u0447\\u0430\\u0435\\u0442\\u0441\\u044f \\u0443\\u043c \\u0438 \\u0432\\u043a\\u043b\\u044e\\u0447\\u0430\\u044e\\u0442\\u0441\\u044f \\u0447\\u0443\\u0432\\u0441\\u0442\\u0432\\u0430. \\u0414\\u0440\\u0435\\u0441\\u0441-\\u043a\\u043e\\u0434: all black\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0414\\u0430\\u0442\\u044b: 05.05, \\u0441 18:30-20:30\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"loc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041d\\u043e\\u0432\\u0430\\u044f \\u0411\\u0430\\u0441\\u043c\\u0430\\u043d\\u043d\\u0430\\u044f, 19\\u04411\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: 4500\\u0440\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"link\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: \\u0417\\u0430\\u0431\\u0440\\u043e\\u043d\\u0438\\u0440\\u043e\\u0432\\u0430\\u0442\\u044c \\u0442\\u0443\\u0442 (\\u043a\\u043e\\u043b\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043e \\u043c\\u0435\\u0441\\u0442 15)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 195
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "WzLFYAuWldNC"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### 3"
      ],
      "metadata": {
        "id": "ly8fpld4y7yY"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "NEW_ID_SET3 = ['86', '53', '18', '197']  # !!!!!\n",
        "# открываем модель\n",
        "with open('2_group_based_model.pkl', 'rb') as mfile:\n",
        "    loaded_model3 = pickle.load(mfile)\n",
        "\n",
        "new3_interactions = pd.read_excel('intrc_it_33.xlsx', index_col=0)"
      ],
      "metadata": {
        "id": "l-XlDk1Dy7yk"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "new3_interactions.columns = new3_interactions.columns.astype(str)\n",
        "new3_interactions = new3_interactions.dropna(axis=1, how='all')\n",
        "new3_interactions = new3_interactions.fillna(0).replace(1, 5).replace(-1, 1)\n",
        "\n",
        "new3_interactions = pd.concat([new2_interactions, new3_interactions], axis=1).astype(int)\n",
        "extended_interactions = sparse.csr_matrix(new3_interactions.values)\n",
        "\n",
        "new3_event_features = test_event_features[test_event_features.item_id.isin(NEW_ID_SET3)]"
      ],
      "metadata": {
        "id": "edAiBWchy7yl"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "extended_interactions"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a09a99f8-c7f4-4f79-e054-8dd4c440796e",
        "id": "o-nmPLW5y7yl"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<6x138 sparse matrix of type '<class 'numpy.int64'>'\n",
              "\twith 509 stored elements in Compressed Sparse Row format>"
            ]
          },
          "metadata": {},
          "execution_count": 198
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "new_train_event_features = pd.concat([train_event_features, new_event_features, new2_event_features, new3_event_features])\n",
        "new_train_event_features.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "aa025c6a-073a-4d6f-8883-38a35fef7394",
        "id": "wx2HP7uiy7yl"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(138, 49)"
            ]
          },
          "metadata": {},
          "execution_count": 199
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# объединенные\n",
        "new_train_item_features = dataset.build_item_features(\n",
        "    (\n",
        "        (x['item_id'], {f: x[f] for f in new_train_event_features.columns if f != 'item_id'})\n",
        "        for _, x in new_train_event_features.iterrows()\n",
        "    ), normalize=False\n",
        ")"
      ],
      "metadata": {
        "id": "7facec6zy7yl"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# > 6600\n",
        "new_train_item_features"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "sK9u3TrrNq1r",
        "outputId": "b3500e0f-2070-4d0e-f30c-09473709f09a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<202x250 sparse matrix of type '<class 'numpy.float32'>'\n",
              "\twith 6826 stored elements in Compressed Sparse Row format>"
            ]
          },
          "metadata": {},
          "execution_count": 201
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "loaded_model2.get_user_representations()[1][0]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a20755ce-fb8e-491f-abc6-78b9935dfb52",
        "id": "LphUgrpny7yl"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0.23869179,  0.86466223,  0.24834852,  0.5931383 , -0.47686478,\n",
              "        0.32100725,  0.0161411 , -0.38641727,  0.45931667, -0.32934105],\n",
              "      dtype=float32)"
            ]
          },
          "metadata": {},
          "execution_count": 202
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "loaded_model3.get_user_representations()[1][0]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "6f10adc1-f11d-4356-ce52-25219ba7eddb",
        "id": "0AAYH13Py7yl"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0.23869179,  0.86466223,  0.24834852,  0.5931383 , -0.47686478,\n",
              "        0.32100725,  0.0161411 , -0.38641727,  0.45931667, -0.32934105],\n",
              "      dtype=float32)"
            ]
          },
          "metadata": {},
          "execution_count": 203
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "loaded_model3.fit_partial(\n",
        "    interactions=extended_interactions,\n",
        "    user_features=user_features,\n",
        "    item_features=new_train_item_features,\n",
        "    epochs=2,\n",
        "    num_threads=1\n",
        ")\n",
        "\n",
        "with open('3_group_based_model.pkl', 'wb') as model_file:\n",
        "    pickle.dump(loaded_model3, model_file)"
      ],
      "metadata": {
        "id": "H_VXJNIWy7ym"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "loaded_model2.get_user_representations()[1][0]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "67551ba3-afb2-4dec-b502-14605dc06f32",
        "id": "LVNit0Zky7ym"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0.23869179,  0.86466223,  0.24834852,  0.5931383 , -0.47686478,\n",
              "        0.32100725,  0.0161411 , -0.38641727,  0.45931667, -0.32934105],\n",
              "      dtype=float32)"
            ]
          },
          "metadata": {},
          "execution_count": 205
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "loaded_model3.get_user_representations()[1][0]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f9dc7896-0969-4d17-f751-47827ad3cbab",
        "id": "KJ5BR8Sey7ym"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0.2581437 ,  0.90340567,  0.24035932,  0.5950132 , -0.4744262 ,\n",
              "        0.32149488,  0.01025697, -0.38986224,  0.47255412, -0.33433077],\n",
              "      dtype=float32)"
            ]
          },
          "metadata": {},
          "execution_count": 206
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "group_profile"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b0de85ed-2b86-413d-a668-2e051109980e",
        "id": "VnOGz2Gby7ym"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0.80592228,  0.8592267 ,  0.38166762, -0.01135793, -0.21444262,\n",
              "       -0.87126472, -0.56631003, -0.28566585, -0.65052415, -0.20909916])"
            ]
          },
          "metadata": {},
          "execution_count": 207
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "user_ids = ['Ксю', 'Аня', 'Лиза', 'Катя', 'Ира', 'Окси']\n",
        "group_profile = aggregate_user_profiles(\n",
        "    loaded_model3, dataset, user_features_data, user_features, user_ids, INDIVIDUAL_COEF, 0\n",
        "    )\n",
        "group_profile"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "78a22843-9da6-4957-e4ed-8af2275ec1a1",
        "id": "nkeO9Fidy7ym"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0.85346849,  1.0058726 ,  0.38715098, -0.06981665, -0.2153884 ,\n",
              "       -0.91773589, -0.54581106, -0.26520915, -0.63663045, -0.16610254])"
            ]
          },
          "metadata": {},
          "execution_count": 208
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 64\n",
        "test_event_features_cut = test_event_features.drop(test_event_features[\n",
        "    test_event_features.item_id.isin(NEW_ID_SET + NEW_ID_SET2 + NEW_ID_SET3)\n",
        "    ].index, axis=0)\n",
        "test_event_features_cut.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "adb90307-0842-4f90-a7b8-8aaaa233a61f",
        "id": "HJGuF4GLy7ym"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(64, 49)"
            ]
          },
          "metadata": {},
          "execution_count": 209
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "CHOOSE_FROM = test_event_features_cut.copy(deep=True)  # обрезанный потому что нельзя рекомендовать лайкнутые\n",
        "CHOOSE_FROM_FTRS = test_item_features # не обрезанный потому что зачем, у медели и так есть все фичи тестовых пои\n",
        "\n",
        "top_n_group_recommendations = get_group_recommendations(\n",
        "    loaded_model3, dataset, group_profile,\n",
        "    CHOOSE_FROM_FTRS, CHOOSE_FROM, user_features\n",
        ")\n",
        "print(top_n_group_recommendations)\n",
        "\n",
        "# display(event_data[event_data.id.isin(top_n_group_recommendations)])\n",
        "\n",
        "display(\n",
        "    event_data[event_data['id'].isin(top_n_group_recommendations[:3])]\n",
        "    .set_index('id')\n",
        "    .reindex(top_n_group_recommendations[:3])\n",
        "    .reset_index()\n",
        ")\n",
        "\n",
        "# random seed для рандома рекомендации\n",
        "random.seed(99)\n",
        "event_data[\n",
        "    event_data.id\n",
        "    == random.choice(CHOOSE_FROM[~CHOOSE_FROM.item_id.isin(top_n_group_recommendations[:3])].item_id.values)\n",
        "]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 523
        },
        "outputId": "3487d50f-b4f9-44b6-d7a8-d620a8f382a8",
        "id": "n1as-U-Jy7ym"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['28', '157', '68', '1', '132', '156', '74', '129', '104', '30', '114', '3', '108', '109', '179', '128', '168', '78', '155', '144']\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "    id       cat_1                               cat_2  \\\n",
              "0   28    Выставка  Мультимедиа, Современное Искусство   \n",
              "1  157   Кинопоказ               Кино, Новое, Личности   \n",
              "2   68  Перформанс        Танцы, Современное Искусство   \n",
              "\n",
              "                                                name  \\\n",
              "0  ЦСИ М’АРС, контентная платформа Дзен и арт-гру...   \n",
              "1               СОФИ ЛОРЕН. ЖИТЬ, СНИМАТЬСЯ, ЛЮБИТЬ!   \n",
              "2                   Перформанс «Пустое пространство»   \n",
              "\n",
              "                                                desc  \\\n",
              "0  Проект посвящён алгоритмам и технологиям, кото...   \n",
              "1  Юбилейный Russia-Italia Film Festival (RIFF)  ...   \n",
              "2  Действие - загадка. Представление - тайна. Даж...   \n",
              "\n",
              "                                           date  \\\n",
              "0  Даты: каждый день с 12:00 до 22:00 до 31 мая   \n",
              "1                           Даты: 11 мая, 16:00   \n",
              "2                     Даты: 12 мая, 19:00-20:00   \n",
              "\n",
              "                                                 loc             price  \\\n",
              "0  Место: Москва, Пушкарёв пер., 5, ЦСИ М’АРС (го...   Стоимость: 600р   \n",
              "1                             Место: КАРО 11 Октябрь   Стоимость: 500р   \n",
              "2  Место: Москва, улица Сайкина, 9, строение 1 (г...  Стоимость: 1500р   \n",
              "\n",
              "                                                link  \n",
              "0                                     Ссылка: Билеты  \n",
              "1  Ссылка: https://2023.riff-russia.ru/filmy/451-...  \n",
              "2                                    Ссылка:  ссылка  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-82230294-92c2-420b-a190-81f007e6602c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>cat_1</th>\n",
              "      <th>cat_2</th>\n",
              "      <th>name</th>\n",
              "      <th>desc</th>\n",
              "      <th>date</th>\n",
              "      <th>loc</th>\n",
              "      <th>price</th>\n",
              "      <th>link</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>28</td>\n",
              "      <td>Выставка</td>\n",
              "      <td>Мультимедиа, Современное Искусство</td>\n",
              "      <td>ЦСИ М’АРС, контентная платформа Дзен и арт-гру...</td>\n",
              "      <td>Проект посвящён алгоритмам и технологиям, кото...</td>\n",
              "      <td>Даты: каждый день с 12:00 до 22:00 до 31 мая</td>\n",
              "      <td>Место: Москва, Пушкарёв пер., 5, ЦСИ М’АРС (го...</td>\n",
              "      <td>Стоимость: 600р</td>\n",
              "      <td>Ссылка: Билеты</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>157</td>\n",
              "      <td>Кинопоказ</td>\n",
              "      <td>Кино, Новое, Личности</td>\n",
              "      <td>СОФИ ЛОРЕН. ЖИТЬ, СНИМАТЬСЯ, ЛЮБИТЬ!</td>\n",
              "      <td>Юбилейный Russia-Italia Film Festival (RIFF)  ...</td>\n",
              "      <td>Даты: 11 мая, 16:00</td>\n",
              "      <td>Место: КАРО 11 Октябрь</td>\n",
              "      <td>Стоимость: 500р</td>\n",
              "      <td>Ссылка: https://2023.riff-russia.ru/filmy/451-...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>68</td>\n",
              "      <td>Перформанс</td>\n",
              "      <td>Танцы, Современное Искусство</td>\n",
              "      <td>Перформанс «Пустое пространство»</td>\n",
              "      <td>Действие - загадка. Представление - тайна. Даж...</td>\n",
              "      <td>Даты: 12 мая, 19:00-20:00</td>\n",
              "      <td>Место: Москва, улица Сайкина, 9, строение 1 (г...</td>\n",
              "      <td>Стоимость: 1500р</td>\n",
              "      <td>Ссылка:  ссылка</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-82230294-92c2-420b-a190-81f007e6602c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-82230294-92c2-420b-a190-81f007e6602c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-82230294-92c2-420b-a190-81f007e6602c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-962a84dc-dfda-4585-9cdc-23c9173040f0\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-962a84dc-dfda-4585-9cdc-23c9173040f0')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-962a84dc-dfda-4585-9cdc-23c9173040f0 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"]\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"28\",\n          \"157\",\n          \"68\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0412\\u044b\\u0441\\u0442\\u0430\\u0432\\u043a\\u0430\",\n          \"\\u041a\\u0438\\u043d\\u043e\\u043f\\u043e\\u043a\\u0430\\u0437\",\n          \"\\u041f\\u0435\\u0440\\u0444\\u043e\\u0440\\u043c\\u0430\\u043d\\u0441\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u041c\\u0443\\u043b\\u044c\\u0442\\u0438\\u043c\\u0435\\u0434\\u0438\\u0430, \\u0421\\u043e\\u0432\\u0440\\u0435\\u043c\\u0435\\u043d\\u043d\\u043e\\u0435 \\u0418\\u0441\\u043a\\u0443\\u0441\\u0441\\u0442\\u0432\\u043e\",\n          \"\\u041a\\u0438\\u043d\\u043e, \\u041d\\u043e\\u0432\\u043e\\u0435, \\u041b\\u0438\\u0447\\u043d\\u043e\\u0441\\u0442\\u0438\",\n          \"\\u0422\\u0430\\u043d\\u0446\\u044b, \\u0421\\u043e\\u0432\\u0440\\u0435\\u043c\\u0435\\u043d\\u043d\\u043e\\u0435 \\u0418\\u0441\\u043a\\u0443\\u0441\\u0441\\u0442\\u0432\\u043e\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0426\\u0421\\u0418 \\u041c\\u2019\\u0410\\u0420\\u0421, \\u043a\\u043e\\u043d\\u0442\\u0435\\u043d\\u0442\\u043d\\u0430\\u044f \\u043f\\u043b\\u0430\\u0442\\u0444\\u043e\\u0440\\u043c\\u0430 \\u0414\\u0437\\u0435\\u043d \\u0438 \\u0430\\u0440\\u0442-\\u0433\\u0440\\u0443\\u043f\\u043f\\u0430 Synticate \\u043f\\u0440\\u0435\\u0434\\u0441\\u0442\\u0430\\u0432\\u0438\\u043b\\u0438 \\u0438\\u043d\\u0442\\u0435\\u0440\\u0430\\u043a\\u0442\\u0438\\u0432\\u043d\\u0443\\u044e \\u0432\\u044b\\u0441\\u0442\\u0430\\u0432\\u043a\\u0443 \\u00ab\\u041d\\u041e\\u0412\\u041e\\u0415 \\u0418\\u0421\\u041a\\u0423\\u0421\\u0421\\u0422\\u0412\\u041e: \\u0410\\u043b\\u0433\\u043e\\u0440\\u0438\\u0442\\u043c\\u044b. \\u041d\\u0435\\u0439\\u0440\\u043e\\u0441\\u0435\\u0442\\u0438. \\u0422\\u0435\\u0445\\u043d\\u043e\\u043b\\u043e\\u0433\\u0438\\u0438\\u00bb.\",\n          \"\\u0421\\u041e\\u0424\\u0418 \\u041b\\u041e\\u0420\\u0415\\u041d. \\u0416\\u0418\\u0422\\u042c, \\u0421\\u041d\\u0418\\u041c\\u0410\\u0422\\u042c\\u0421\\u042f, \\u041b\\u042e\\u0411\\u0418\\u0422\\u042c!\",\n          \"\\u041f\\u0435\\u0440\\u0444\\u043e\\u0440\\u043c\\u0430\\u043d\\u0441 \\u00ab\\u041f\\u0443\\u0441\\u0442\\u043e\\u0435 \\u043f\\u0440\\u043e\\u0441\\u0442\\u0440\\u0430\\u043d\\u0441\\u0442\\u0432\\u043e\\u00bb\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"desc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u041f\\u0440\\u043e\\u0435\\u043a\\u0442 \\u043f\\u043e\\u0441\\u0432\\u044f\\u0449\\u0451\\u043d \\u0430\\u043b\\u0433\\u043e\\u0440\\u0438\\u0442\\u043c\\u0430\\u043c \\u0438 \\u0442\\u0435\\u0445\\u043d\\u043e\\u043b\\u043e\\u0433\\u0438\\u044f\\u043c, \\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0435 \\u043d\\u0435 \\u0442\\u043e\\u043b\\u044c\\u043a\\u043e \\u0432\\u043d\\u0435\\u0434\\u0440\\u044f\\u044e\\u0442\\u0441\\u044f \\u0432 \\u043f\\u043e\\u0432\\u0441\\u0435\\u0434\\u043d\\u0435\\u0432\\u043d\\u043e\\u0441\\u0442\\u044c, \\u043d\\u043e \\u0438 \\u0430\\u043a\\u0442\\u0438\\u0432\\u043d\\u043e \\u0432\\u043b\\u0438\\u044f\\u044e\\u0442 \\u043d\\u0430 \\u0442\\u0432\\u043e\\u0440\\u0447\\u0435\\u0441\\u043a\\u0438\\u0439 \\u043f\\u0440\\u043e\\u0446\\u0435\\u0441\\u0441 \\u0441\\u043e\\u0432\\u0440\\u0435\\u043c\\u0435\\u043d\\u043d\\u044b\\u0445 \\u0445\\u0443\\u0434\\u043e\\u0436\\u043d\\u0438\\u043a\\u043e\\u0432, \\u0430 \\u0442\\u0430\\u043a\\u0436\\u0435 \\u043f\\u043e\\u0437\\u0432\\u043e\\u043b\\u044f\\u044e\\u0442 \\u0437\\u0440\\u0438\\u0442\\u0435\\u043b\\u044e \\u0441\\u0442\\u0430\\u0442\\u044c \\u0435\\u0433\\u043e \\u0447\\u0430\\u0441\\u0442\\u044c\\u044e. \\u0410\\u0440\\u0442-\\u043e\\u0431\\u044a\\u0435\\u043a\\u0442\\u044b \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442\\u0430 \\u2013 \\u044d\\u0442\\u043e \\u0441\\u043e\\u0432\\u0440\\u0435\\u043c\\u0435\\u043d\\u043d\\u044b\\u0435 \\u043f\\u0440\\u043e\\u0438\\u0437\\u0432\\u0435\\u0434\\u0435\\u043d\\u0438\\u044f \\u0438\\u0441\\u043a\\u0443\\u0441\\u0441\\u0442\\u0432\\u0430, \\u0441\\u043e\\u0437\\u0434\\u0430\\u043d\\u043d\\u044b\\u0435 \\u0441 \\u043f\\u043e\\u043c\\u043e\\u0449\\u044c\\u044e \\u043d\\u0435\\u0439\\u0440\\u043e\\u0441\\u0435\\u0442\\u0435\\u0439, \\u0432\\u0434\\u043e\\u0445\\u043d\\u043e\\u0432\\u043b\\u0435\\u043d\\u043d\\u044b\\u0435 \\u0444\\u0430\\u043d\\u0442\\u0430\\u0437\\u0438\\u044f\\u043c\\u0438 \\u043f\\u043e\\u0441\\u0442\\u0433\\u0443\\u043c\\u0430\\u043d\\u0438\\u0437\\u043c\\u0435.\\u00a0\",\n          \"\\u042e\\u0431\\u0438\\u043b\\u0435\\u0439\\u043d\\u044b\\u0439 Russia-Italia Film Festival (RIFF)\\u00a0 \\u2014 \\u044d\\u0442\\u043e \\u043c\\u0430\\u043d\\u0438\\u0444\\u0435\\u0441\\u0442\\u0430\\u0446\\u0438\\u044f \\u0440\\u0430\\u0434\\u043e\\u0441\\u0442\\u0438 \\u0436\\u0438\\u0437\\u043d\\u0438 \\u0438 \\u0438\\u0441\\u0446\\u0435\\u043b\\u044f\\u044e\\u0449\\u0435\\u0439 \\u0441\\u0438\\u043b\\u044b \\u0438\\u0441\\u043a\\u0443\\u0441\\u0441\\u0442\\u0432\\u0430, \\u0432\\u0435\\u0434\\u044c \\u0435\\u0436\\u0435\\u0433\\u043e\\u0434\\u043d\\u044b\\u0435 \\u043f\\u043e\\u043a\\u0430\\u0437\\u044b \\u0438\\u0442\\u0430\\u043b\\u044c\\u044f\\u043d\\u0441\\u043a\\u043e\\u0433\\u043e \\u043a\\u0438\\u043d\\u043e \\u043d\\u0435 \\u043f\\u0440\\u0435\\u043a\\u0440\\u0430\\u0449\\u0430\\u043b\\u0438\\u0441\\u044c \\u043d\\u0430 \\u043f\\u0440\\u043e\\u0442\\u044f\\u0436\\u0435\\u043d\\u0438\\u0438 10 \\u043b\\u0435\\u0442. \\u0412 \\u043d\\u043e\\u0432\\u043e\\u0439 \\u043f\\u0440\\u043e\\u0433\\u0440\\u0430\\u043c\\u043c\\u0435 20 \\u0444\\u0438\\u043b\\u044c\\u043c\\u043e\\u0432-\\u0443\\u0447\\u0430\\u0441\\u0442\\u043d\\u0438\\u043a\\u043e\\u0432 \\u0440\\u0430\\u0437\\u043b\\u0438\\u0447\\u043d\\u044b\\u0445 \\u043c\\u0435\\u0436\\u0434\\u0443\\u043d\\u0430\\u0440\\u043e\\u0434\\u043d\\u044b\\u0445 \\u0441\\u043c\\u043e\\u0442\\u0440\\u043e\\u0432, \\u0432\\u043a\\u043b\\u044e\\u0447\\u0430\\u044f \\u0412\\u0435\\u043d\\u0435\\u0446\\u0438\\u0430\\u043d\\u0441\\u043a\\u0438\\u0439 \\u043a\\u0438\\u043d\\u043e\\u0444\\u0435\\u0441\\u0442\\u0438\\u0432\\u0430\\u043b\\u044c. \\u041a\\u0430\\u0436\\u0434\\u044b\\u0439 \\u043f\\u043e\\u043a\\u0430\\u0437 \\u2014 \\u0440\\u043e\\u0441\\u0441\\u0438\\u0439\\u0441\\u043a\\u0430\\u044f \\u043f\\u0440\\u0435\\u043c\\u044c\\u0435\\u0440\\u0430. \\u0412\\u0441\\u0435 \\u043f\\u043e\\u043a\\u0430\\u0437\\u044b \\u043f\\u0440\\u043e\\u0439\\u0434\\u0443\\u0442 \\u043d\\u0430 \\u044f\\u0437\\u044b\\u043a\\u0435 \\u043e\\u0440\\u0438\\u0433\\u0438\\u043d\\u0430\\u043b\\u0430 \\u0441 \\u0440\\u0443\\u0441\\u0441\\u043a\\u0438\\u043c\\u0438 \\u0441\\u0443\\u0431\\u0442\\u0438\\u0442\\u0440\\u0430\\u043c\\u0438. \\u0416\\u0438\\u0437\\u043d\\u044c \\u0421\\u043e\\u0444\\u0438 \\u041b\\u043e\\u0440\\u0435\\u043d, \\u0440\\u0430\\u0441\\u0441\\u043a\\u0430\\u0437\\u0430\\u043d\\u043d\\u0430\\u044f \\u0435\\u044e \\u0441\\u0430\\u043c\\u043e\\u0439. \\u0421 \\u043a\\u043e\\u043c\\u043c\\u0435\\u043d\\u0442\\u0430\\u0440\\u0438\\u044f\\u043c\\u0438 \\u0448\\u0435\\u0441\\u0442\\u0438 \\u0437\\u043d\\u0430\\u043c\\u0435\\u043d\\u0438\\u0442\\u044b\\u0445 \\u0430\\u043a\\u0442\\u0440\\u0438\\u0441, \\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0435 \\u043b\\u0438\\u0447\\u043d\\u043e \\u0437\\u043d\\u0430\\u043a\\u043e\\u043c\\u044b \\u0441 \\u043b\\u0435\\u0433\\u0435\\u043d\\u0434\\u043e\\u0439 \\u043c\\u0438\\u0440\\u043e\\u0432\\u043e\\u0433\\u043e \\u043a\\u0438\\u043d\\u043e.\",\n          \"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435 - \\u0437\\u0430\\u0433\\u0430\\u0434\\u043a\\u0430. \\u041f\\u0440\\u0435\\u0434\\u0441\\u0442\\u0430\\u0432\\u043b\\u0435\\u043d\\u0438\\u0435 - \\u0442\\u0430\\u0439\\u043d\\u0430. \\u0414\\u0430\\u0436\\u0435 \\u0434\\u043b\\u044f \\u0435\\u0433\\u043e \\u0441\\u043e\\u0437\\u0434\\u0430\\u0442\\u0435\\u043b\\u0435\\u0439. \\u042d\\u0442\\u043e \\u043f\\u0440\\u043e\\u0441\\u0442\\u0440\\u0430\\u043d\\u0441\\u0442\\u0432\\u043e \\u043e\\u0431\\u0449\\u0435\\u043d\\u0438\\u044f \\u0430\\u043a\\u0442\\u0451\\u0440\\u043e\\u0432 \\u0441\\u043e \\u0437\\u0440\\u0438\\u0442\\u0435\\u043b\\u0435\\u043c \\u043f\\u043e\\u0441\\u0440\\u0435\\u0434\\u0441\\u0442\\u0432\\u043e\\u043c \\u043f\\u043b\\u0430\\u0441\\u0442\\u0438\\u043a\\u0438 \\u0438 \\u043d\\u0435\\u0432\\u0435\\u0440\\u0431\\u0430\\u043b\\u044c\\u043d\\u043e\\u0433\\u043e \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044f. \\u0422\\u0435\\u043c\\u0443 \\u043e\\u0431\\u0449\\u0435\\u043d\\u0438\\u044f \\u0432\\u044b\\u0431\\u0438\\u0440\\u0430\\u0435\\u0442 \\u0437\\u0440\\u0438\\u0442\\u0435\\u043b\\u044c. \\u041f\\u043e\\u044d\\u0442\\u043e\\u043c\\u0443 \\u0434\\u043e \\u043f\\u0440\\u0438\\u0445\\u043e\\u0434\\u0430 \\u0433\\u043e\\u0441\\u0442\\u0435\\u0439 \\u0432 \\u0437\\u0430\\u043b \\u041b\\u0430\\u0431\\u043e\\u0440\\u0430\\u0442\\u043e\\u0440\\u0438\\u0438, \\u0430\\u043a\\u0442\\u0451\\u0440\\u044b \\u043d\\u0435 \\u0437\\u043d\\u0430\\u044e\\u0442, \\u0447\\u0442\\u043e \\u0431\\u0443\\u0434\\u0435\\u0442 \\u043d\\u0430 \\u0441\\u0446\\u0435\\u043d\\u0435 \\u043f\\u0440\\u043e\\u0438\\u0441\\u0445\\u043e\\u0434\\u0438\\u0442\\u044c. \\u0412 \\u0441\\u0432\\u044f\\u0437\\u0438 \\u0441 \\u044d\\u0442\\u0438\\u043c, \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435 \\u043d\\u0438\\u043a\\u043e\\u0433\\u0434\\u0430 \\u043d\\u0435 \\u043f\\u043e\\u0432\\u0442\\u043e\\u0440\\u0438\\u0442\\u0441\\u044f. \\u041e\\u0441\\u0442\\u0430\\u043d\\u0435\\u0442\\u0441\\u044f \\u0442\\u043e\\u043b\\u044c\\u043a\\u043e \\u043c\\u0438\\u0444. \\u0418 \\u0432\\u0438\\u0434\\u0435\\u043e \\u0438\\u043b\\u0438 \\u0444\\u043e\\u0442\\u043e, \\u0435\\u0441\\u043b\\u0438 \\u043a\\u0442\\u043e-\\u0442\\u043e \\u0438\\u0437 \\u0437\\u0440\\u0438\\u0442\\u0435\\u043b\\u0435\\u0439 \\u0441\\u043c\\u043e\\u0436\\u0435\\u0442 \\u043f\\u0440\\u0435\\u043e\\u0434\\u043e\\u043b\\u0435\\u0442\\u044c \\u043e\\u0447\\u0430\\u0440\\u043e\\u0432\\u0430\\u043d\\u0438\\u0435 \\u0436\\u0435\\u0441\\u0442\\u043e\\u043c \\u0438 \\u0443\\u0441\\u043f\\u0435\\u0435\\u0442 \\u0437\\u0430\\u0441\\u043d\\u044f\\u0442\\u044c \\u044d\\u0442\\u043e. \\u0412\\u0435\\u0434\\u044c \\u044d\\u0442\\u043e \\u0435\\u0434\\u0438\\u043d\\u0441\\u0442\\u0432\\u0435\\u043d\\u043d\\u043e\\u0435 \\u043f\\u0440\\u0435\\u0434\\u0441\\u0442\\u0430\\u0432\\u043b\\u0435\\u043d\\u0438\\u0435 \\u041b\\u0430\\u0431\\u043e\\u0440\\u0430\\u0442\\u043e\\u0440\\u0438\\u0438, \\u043d\\u0430 \\u043a\\u043e\\u0442\\u043e\\u0440\\u043e\\u043c \\u0440\\u0430\\u0437\\u0440\\u0435\\u0448\\u0435\\u043d\\u0430 \\u0432\\u0438\\u0434\\u0435\\u043e \\u0438 \\u0444\\u043e\\u0442\\u043e\\u0441\\u044a\\u0451\\u043c\\u043a\\u0430.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0414\\u0430\\u0442\\u044b: \\u043a\\u0430\\u0436\\u0434\\u044b\\u0439 \\u0434\\u0435\\u043d\\u044c \\u0441 12:00 \\u0434\\u043e 22:00 \\u0434\\u043e 31 \\u043c\\u0430\\u044f\",\n          \"\\u0414\\u0430\\u0442\\u044b: 11 \\u043c\\u0430\\u044f, 16:00\",\n          \"\\u0414\\u0430\\u0442\\u044b: 12 \\u043c\\u0430\\u044f, 19:00-20:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"loc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041c\\u043e\\u0441\\u043a\\u0432\\u0430, \\u041f\\u0443\\u0448\\u043a\\u0430\\u0440\\u0451\\u0432 \\u043f\\u0435\\u0440., 5, \\u0426\\u0421\\u0418 \\u041c\\u2019\\u0410\\u0420\\u0421 (\\u0433\\u043e\\u0440\\u043e\\u0434)\",\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041a\\u0410\\u0420\\u041e 11 \\u041e\\u043a\\u0442\\u044f\\u0431\\u0440\\u044c\",\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041c\\u043e\\u0441\\u043a\\u0432\\u0430, \\u0443\\u043b\\u0438\\u0446\\u0430 \\u0421\\u0430\\u0439\\u043a\\u0438\\u043d\\u0430, 9, \\u0441\\u0442\\u0440\\u043e\\u0435\\u043d\\u0438\\u0435 1 (\\u0433\\u043e\\u0440\\u043e\\u0434)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: 600\\u0440\",\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: 500\\u0440\",\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: 1500\\u0440\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"link\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: \\u0411\\u0438\\u043b\\u0435\\u0442\\u044b\",\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: https://2023.riff-russia.ru/filmy/451-sofia1\",\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430:\\u00a0 \\u0441\\u0441\\u044b\\u043b\\u043a\\u0430\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    id     cat_1                                         cat_2  \\\n",
              "77  78  Выставка  Мультимедиа, Живопись, Современное Искусство   \n",
              "\n",
              "                            name  \\\n",
              "77  Матисс, Пикассо или Ван Гог?   \n",
              "\n",
              "                                                 desc  \\\n",
              "77  Выбирать не нужно — в Artplay Media сейчас про...   \n",
              "\n",
              "                                  date  \\\n",
              "77  Даты: Пн–Вс: 08:00-23:00 до 19 мая   \n",
              "\n",
              "                                                  loc             price  \\\n",
              "77  Место: Москва, ул. Нижняя Сыромятническая, д. ...  Стоимость: 800 ₽   \n",
              "\n",
              "                    link  \n",
              "77  Ссылка: Купить билет  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-cf9e0c1c-2896-4a3b-be41-49316391f91e\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>cat_1</th>\n",
              "      <th>cat_2</th>\n",
              "      <th>name</th>\n",
              "      <th>desc</th>\n",
              "      <th>date</th>\n",
              "      <th>loc</th>\n",
              "      <th>price</th>\n",
              "      <th>link</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>77</th>\n",
              "      <td>78</td>\n",
              "      <td>Выставка</td>\n",
              "      <td>Мультимедиа, Живопись, Современное Искусство</td>\n",
              "      <td>Матисс, Пикассо или Ван Гог?</td>\n",
              "      <td>Выбирать не нужно — в Artplay Media сейчас про...</td>\n",
              "      <td>Даты: Пн–Вс: 08:00-23:00 до 19 мая</td>\n",
              "      <td>Место: Москва, ул. Нижняя Сыромятническая, д. ...</td>\n",
              "      <td>Стоимость: 800 ₽</td>\n",
              "      <td>Ссылка: Купить билет</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cf9e0c1c-2896-4a3b-be41-49316391f91e')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-cf9e0c1c-2896-4a3b-be41-49316391f91e button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-cf9e0c1c-2896-4a3b-be41-49316391f91e');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"]\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"78\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0412\\u044b\\u0441\\u0442\\u0430\\u0432\\u043a\\u0430\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u041c\\u0443\\u043b\\u044c\\u0442\\u0438\\u043c\\u0435\\u0434\\u0438\\u0430, \\u0416\\u0438\\u0432\\u043e\\u043f\\u0438\\u0441\\u044c, \\u0421\\u043e\\u0432\\u0440\\u0435\\u043c\\u0435\\u043d\\u043d\\u043e\\u0435 \\u0418\\u0441\\u043a\\u0443\\u0441\\u0441\\u0442\\u0432\\u043e\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u041c\\u0430\\u0442\\u0438\\u0441\\u0441, \\u041f\\u0438\\u043a\\u0430\\u0441\\u0441\\u043e \\u0438\\u043b\\u0438 \\u0412\\u0430\\u043d \\u0413\\u043e\\u0433?\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"desc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0412\\u044b\\u0431\\u0438\\u0440\\u0430\\u0442\\u044c \\u043d\\u0435 \\u043d\\u0443\\u0436\\u043d\\u043e \\u2014 \\u0432 Artplay Media \\u0441\\u0435\\u0439\\u0447\\u0430\\u0441 \\u043f\\u0440\\u043e\\u0445\\u043e\\u0434\\u044f\\u0442 \\u0434\\u0432\\u0435 \\u043c\\u0443\\u043b\\u044c\\u0442\\u0438\\u043c\\u0435\\u0434\\u0438\\u0439\\u043d\\u044b\\u0435 \\u0432\\u044b\\u0441\\u0442\\u0430\\u0432\\u043a\\u0438, \\u043f\\u043e\\u0441\\u0432\\u044f\\u0449\\u0435\\u043d\\u043d\\u044b\\u0435 \\u0432\\u0435\\u043b\\u0438\\u043a\\u0438\\u043c \\u0445\\u0443\\u0434\\u043e\\u0436\\u043d\\u0438\\u043a\\u0430\\u043c. \\u0411\\u043e\\u043b\\u0435\\u0435 \\u0441\\u043e\\u0442\\u043d\\u0438 \\u0437\\u043d\\u0430\\u043c\\u0435\\u043d\\u0438\\u0442\\u044b\\u0445 \\u043f\\u0440\\u043e\\u0438\\u0437\\u0432\\u0435\\u0434\\u0435\\u043d\\u0438\\u0439 \\u043e\\u0436\\u0438\\u0432\\u0443\\u0442 \\u0438 \\u043e\\u043a\\u0440\\u0443\\u0436\\u0430\\u0442 \\u0432\\u0430\\u0441 \\u0441\\u043e \\u0432\\u0441\\u0435\\u0445 \\u0441\\u0442\\u043e\\u0440\\u043e\\u043d \\u0431\\u043b\\u0430\\u0433\\u043e\\u0434\\u0430\\u0440\\u044f \\u0441\\u043e\\u0432\\u0440\\u0435\\u043c\\u0435\\u043d\\u043d\\u044b\\u043c \\u0442\\u0435\\u0445\\u043d\\u043e\\u043b\\u043e\\u0433\\u0438\\u044f\\u043c.\\u00a0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0414\\u0430\\u0442\\u044b: \\u041f\\u043d\\u2013\\u0412\\u0441: 08:00-23:00 \\u0434\\u043e 19 \\u043c\\u0430\\u044f\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"loc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041c\\u043e\\u0441\\u043a\\u0432\\u0430, \\u0443\\u043b. \\u041d\\u0438\\u0436\\u043d\\u044f\\u044f \\u0421\\u044b\\u0440\\u043e\\u043c\\u044f\\u0442\\u043d\\u0438\\u0447\\u0435\\u0441\\u043a\\u0430\\u044f, \\u0434. 10, \\u0441\\u0442\\u0440. 2 (\\u0433\\u043e\\u0440\\u043e\\u0434)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: 800 \\u20bd\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"link\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: \\u041a\\u0443\\u043f\\u0438\\u0442\\u044c \\u0431\\u0438\\u043b\\u0435\\u0442\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 210
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "ubFo0dfwy7ym"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### 4"
      ],
      "metadata": {
        "id": "ANpY6fj30Gtx"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "NEW_ID_SET4 = ['28', '157', '78', '68']   # !!!!!\n",
        "# открываем модель\n",
        "with open('3_group_based_model.pkl', 'rb') as mfile:\n",
        "    loaded_model4 = pickle.load(mfile)\n",
        "\n",
        "new4_interactions = pd.read_excel('intrc_it_44.xlsx', index_col=0)"
      ],
      "metadata": {
        "id": "bK5INAs30Gtz"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "new4_interactions.columns = new4_interactions.columns.astype(str)\n",
        "new4_interactions = new4_interactions.dropna(axis=1, how='all')\n",
        "new4_interactions = new4_interactions.fillna(0).replace(1, 5).replace(-1, 1)\n",
        "\n",
        "new4_interactions = pd.concat([new3_interactions, new4_interactions], axis=1).astype(int)\n",
        "extended_interactions = sparse.csr_matrix(new4_interactions.values)\n",
        "\n",
        "new4_event_features = test_event_features[test_event_features.item_id.isin(NEW_ID_SET4)]"
      ],
      "metadata": {
        "id": "lYZTa9J80Gtz"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "extended_interactions"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "511c23f7-85e0-4af0-e587-17dc35b5c6f5",
        "id": "lES3z_cX0Gt0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<6x142 sparse matrix of type '<class 'numpy.int64'>'\n",
              "\twith 533 stored elements in Compressed Sparse Row format>"
            ]
          },
          "metadata": {},
          "execution_count": 213
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 142\n",
        "new_train_event_features = pd.concat(\n",
        "    [train_event_features, new_event_features,\n",
        "     new2_event_features, new3_event_features,\n",
        "     new4_event_features]\n",
        ")\n",
        "new_train_event_features.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e0364583-70dc-4ec2-cfb3-e570ec3ee2d5",
        "id": "KZZVzuzO0Gt0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(142, 49)"
            ]
          },
          "metadata": {},
          "execution_count": 214
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# объединенные\n",
        "new_train_item_features = dataset.build_item_features(\n",
        "    (\n",
        "        (x['item_id'], {f: x[f] for f in new_train_event_features.columns if f != 'item_id'})\n",
        "        for _, x in new_train_event_features.iterrows()\n",
        "    ), normalize=False\n",
        ")"
      ],
      "metadata": {
        "id": "71dog_Si0Gt0"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#  > 6800\n",
        "new_train_item_features"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5OLcPpoJO1sC",
        "outputId": "d4ffb516-c9e9-4040-834d-526152dbc594"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<202x250 sparse matrix of type '<class 'numpy.float32'>'\n",
              "\twith 7018 stored elements in Compressed Sparse Row format>"
            ]
          },
          "metadata": {},
          "execution_count": 216
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "loaded_model3.get_user_representations()[1][0]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "01f0a2b8-1590-43fc-e170-cafdcd3f5a91",
        "id": "LPSITVci0Gt0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0.2581437 ,  0.90340567,  0.24035932,  0.5950132 , -0.4744262 ,\n",
              "        0.32149488,  0.01025697, -0.38986224,  0.47255412, -0.33433077],\n",
              "      dtype=float32)"
            ]
          },
          "metadata": {},
          "execution_count": 217
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "loaded_model4.get_user_representations()[1][0]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "00fa2627-a0bf-47a8-ffbf-4e4426eb1637",
        "id": "B5vyQryN0Gt0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0.2581437 ,  0.90340567,  0.24035932,  0.5950132 , -0.4744262 ,\n",
              "        0.32149488,  0.01025697, -0.38986224,  0.47255412, -0.33433077],\n",
              "      dtype=float32)"
            ]
          },
          "metadata": {},
          "execution_count": 218
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "loaded_model4.fit_partial(\n",
        "    interactions=extended_interactions,\n",
        "    user_features=user_features,  # добавить настроение\n",
        "    item_features=new_train_item_features,\n",
        "    epochs=2,\n",
        "    num_threads=1\n",
        ")\n",
        "\n",
        "with open('4_group_based_model.pkl', 'wb') as model_file:\n",
        "    pickle.dump(loaded_model4, model_file)"
      ],
      "metadata": {
        "id": "T6uq1cor0Gt0"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "loaded_model3.get_user_representations()[1][0]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "4cdc7948-e6d4-4744-ab8e-1d6945db3f69",
        "id": "7LHkmNsj0Gt0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0.2581437 ,  0.90340567,  0.24035932,  0.5950132 , -0.4744262 ,\n",
              "        0.32149488,  0.01025697, -0.38986224,  0.47255412, -0.33433077],\n",
              "      dtype=float32)"
            ]
          },
          "metadata": {},
          "execution_count": 220
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "loaded_model4.get_user_representations()[1][0]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "8980226e-ee0a-46b0-83c0-17dcceba5cc9",
        "id": "vWvGMBoW0Gt1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0.2743888 ,  0.9404862 ,  0.25988168,  0.61312914, -0.47924015,\n",
              "        0.32066885,  0.02882016, -0.3915559 ,  0.48154452, -0.31307763],\n",
              "      dtype=float32)"
            ]
          },
          "metadata": {},
          "execution_count": 221
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "group_profile"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0e485856-f162-4828-f53c-f4bfe51031cd",
        "id": "f0JTf0Ew0Gt1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0.85346849,  1.0058726 ,  0.38715098, -0.06981665, -0.2153884 ,\n",
              "       -0.91773589, -0.54581106, -0.26520915, -0.63663045, -0.16610254])"
            ]
          },
          "metadata": {},
          "execution_count": 222
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "user_ids = ['Ксю', 'Аня', 'Лиза', 'Катя', 'Ира', 'Окси']\n",
        "group_profile = aggregate_user_profiles(\n",
        "    loaded_model4, dataset, user_features_data, user_features, user_ids, INDIVIDUAL_COEF, 0\n",
        "    )\n",
        "group_profile"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e86f2120-249f-4a4c-bb62-e36854e6d69d",
        "id": "IYmcvxxm0Gt1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0.966086  ,  1.132978  ,  0.47034423, -0.16546198, -0.18529098,\n",
              "       -0.99998905, -0.54016543, -0.17224235, -0.69029031, -0.08738241])"
            ]
          },
          "metadata": {},
          "execution_count": 223
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 60\n",
        "test_event_features_cut = test_event_features.drop(test_event_features[\n",
        "    test_event_features.item_id.isin(NEW_ID_SET + NEW_ID_SET2 + NEW_ID_SET3 + NEW_ID_SET4)\n",
        "    ].index, axis=0)\n",
        "test_event_features_cut.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a9cd746a-0e21-47c5-8fbd-96345bbecc07",
        "id": "4oZ7cQeG0Gt1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(60, 49)"
            ]
          },
          "metadata": {},
          "execution_count": 224
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "CHOOSE_FROM = test_event_features_cut.copy(deep=True)  # обрезанный потому что нельзя рекомендовать лайкнутые\n",
        "CHOOSE_FROM_FTRS = test_item_features # не обрезанный потому что зачем, у медели и так есть все фичи тестовых пои\n",
        "\n",
        "top_n_group_recommendations = get_group_recommendations(\n",
        "    loaded_model4, dataset, group_profile,\n",
        "    CHOOSE_FROM_FTRS, CHOOSE_FROM, user_features\n",
        ")\n",
        "print(top_n_group_recommendations)\n",
        "\n",
        "# display(event_data[event_data.id.isin(top_n_group_recommendations)])\n",
        "\n",
        "display(\n",
        "    event_data[event_data['id'].isin(top_n_group_recommendations[:3])]\n",
        "    .set_index('id')\n",
        "    .reindex(top_n_group_recommendations[:3])\n",
        "    .reset_index()\n",
        ")\n",
        "\n",
        "# random seed для рандома рекомендации\n",
        "random.seed(58)\n",
        "event_data[\n",
        "    event_data.id\n",
        "    == random.choice(CHOOSE_FROM[~CHOOSE_FROM.item_id.isin(top_n_group_recommendations[:3])].item_id.values)\n",
        "]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 471
        },
        "outputId": "f2b5694b-f2aa-487b-87c1-2797f34c6994",
        "id": "l4ha8-JO0Gt1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['156', '1', '132', '3', '74', '129', '30', '114', '155', '109', '32', '179', '128', '108', '104', '69', '61', '118', '188', '105']\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "    id      cat_1                                      cat_2  \\\n",
              "0  156  Кинопоказ                      Кино, Новое, Личности   \n",
              "1    1   Выставка  Спорт, Современное Искусство, Мультимедиа   \n",
              "2  132   Погулять                 Еда, Животные, Развлечения   \n",
              "\n",
              "                    name                                               desc  \\\n",
              "0  ДАНТЕ. ВЕЧНОСТЬ ГЕНИЯ  В рамках 10 юбилейного Russia-Italia Film Fest...   \n",
              "1          ТЕОРЕМА ДОЖДЯ  Мультимедиа Арт Музей, Москва представляет инс...   \n",
              "2                Зайкафе  Можно поиграть с кроликами, покормить их, сфот...   \n",
              "\n",
              "                            date  \\\n",
              "0            Даты: 10 мая, 12:00   \n",
              "1  Даты: с 13 апреля по 15 июля.   \n",
              "2    Даты: Ежедневно 10:00-22:00   \n",
              "\n",
              "                                               loc  \\\n",
              "0                           Место: КАРО 11 Октябрь   \n",
              "1  Место: Москва, ул. Остоженка, 16. МАММ. (город)   \n",
              "2                        Место: Ул. Селезневская 4   \n",
              "\n",
              "                                               price  \\\n",
              "0                                    Стоимость: 500р   \n",
              "1  Стоимость: студенты 350, взрослые 700 ₽. Билет...   \n",
              "2                         Стоимость: 400₽ + 12₽/мин    \n",
              "\n",
              "                                                link  \n",
              "0  Ссылка: https://2023.riff-russia.ru/filmy/455-...  \n",
              "1                        Ссылка: https://mamm-mdf.ru  \n",
              "2                                          Ссылка: -  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-59cda603-002e-436e-9444-a6743f3a2309\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>cat_1</th>\n",
              "      <th>cat_2</th>\n",
              "      <th>name</th>\n",
              "      <th>desc</th>\n",
              "      <th>date</th>\n",
              "      <th>loc</th>\n",
              "      <th>price</th>\n",
              "      <th>link</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>156</td>\n",
              "      <td>Кинопоказ</td>\n",
              "      <td>Кино, Новое, Личности</td>\n",
              "      <td>ДАНТЕ. ВЕЧНОСТЬ ГЕНИЯ</td>\n",
              "      <td>В рамках 10 юбилейного Russia-Italia Film Fest...</td>\n",
              "      <td>Даты: 10 мая, 12:00</td>\n",
              "      <td>Место: КАРО 11 Октябрь</td>\n",
              "      <td>Стоимость: 500р</td>\n",
              "      <td>Ссылка: https://2023.riff-russia.ru/filmy/455-...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>Выставка</td>\n",
              "      <td>Спорт, Современное Искусство, Мультимедиа</td>\n",
              "      <td>ТЕОРЕМА ДОЖДЯ</td>\n",
              "      <td>Мультимедиа Арт Музей, Москва представляет инс...</td>\n",
              "      <td>Даты: с 13 апреля по 15 июля.</td>\n",
              "      <td>Место: Москва, ул. Остоженка, 16. МАММ. (город)</td>\n",
              "      <td>Стоимость: студенты 350, взрослые 700 ₽. Билет...</td>\n",
              "      <td>Ссылка: https://mamm-mdf.ru</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>132</td>\n",
              "      <td>Погулять</td>\n",
              "      <td>Еда, Животные, Развлечения</td>\n",
              "      <td>Зайкафе</td>\n",
              "      <td>Можно поиграть с кроликами, покормить их, сфот...</td>\n",
              "      <td>Даты: Ежедневно 10:00-22:00</td>\n",
              "      <td>Место: Ул. Селезневская 4</td>\n",
              "      <td>Стоимость: 400₽ + 12₽/мин</td>\n",
              "      <td>Ссылка: -</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-59cda603-002e-436e-9444-a6743f3a2309')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-59cda603-002e-436e-9444-a6743f3a2309 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-59cda603-002e-436e-9444-a6743f3a2309');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e5f32df8-064f-42d4-8094-336f255d26c1\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e5f32df8-064f-42d4-8094-336f255d26c1')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e5f32df8-064f-42d4-8094-336f255d26c1 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"]\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"156\",\n          \"1\",\n          \"132\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u041a\\u0438\\u043d\\u043e\\u043f\\u043e\\u043a\\u0430\\u0437\",\n          \"\\u0412\\u044b\\u0441\\u0442\\u0430\\u0432\\u043a\\u0430\",\n          \"\\u041f\\u043e\\u0433\\u0443\\u043b\\u044f\\u0442\\u044c\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u041a\\u0438\\u043d\\u043e, \\u041d\\u043e\\u0432\\u043e\\u0435, \\u041b\\u0438\\u0447\\u043d\\u043e\\u0441\\u0442\\u0438\",\n          \"\\u0421\\u043f\\u043e\\u0440\\u0442, \\u0421\\u043e\\u0432\\u0440\\u0435\\u043c\\u0435\\u043d\\u043d\\u043e\\u0435 \\u0418\\u0441\\u043a\\u0443\\u0441\\u0441\\u0442\\u0432\\u043e, \\u041c\\u0443\\u043b\\u044c\\u0442\\u0438\\u043c\\u0435\\u0434\\u0438\\u0430\",\n          \"\\u0415\\u0434\\u0430, \\u0416\\u0438\\u0432\\u043e\\u0442\\u043d\\u044b\\u0435, \\u0420\\u0430\\u0437\\u0432\\u043b\\u0435\\u0447\\u0435\\u043d\\u0438\\u044f\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0414\\u0410\\u041d\\u0422\\u0415. \\u0412\\u0415\\u0427\\u041d\\u041e\\u0421\\u0422\\u042c \\u0413\\u0415\\u041d\\u0418\\u042f\",\n          \"\\u0422\\u0415\\u041e\\u0420\\u0415\\u041c\\u0410 \\u0414\\u041e\\u0416\\u0414\\u042f\",\n          \"\\u0417\\u0430\\u0439\\u043a\\u0430\\u0444\\u0435\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"desc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0412 \\u0440\\u0430\\u043c\\u043a\\u0430\\u0445 10 \\u044e\\u0431\\u0438\\u043b\\u0435\\u0439\\u043d\\u043e\\u0433\\u043e Russia-Italia Film Festival. \\u0412\\u0441\\u0435 \\u043f\\u043e\\u043a\\u0430\\u0437\\u044b \\u043f\\u0440\\u043e\\u0439\\u0434\\u0443\\u0442 \\u043d\\u0430 \\u044f\\u0437\\u044b\\u043a\\u0435 \\u043e\\u0440\\u0438\\u0433\\u0438\\u043d\\u0430\\u043b\\u0430 \\u0441 \\u0440\\u0443\\u0441\\u0441\\u043a\\u0438\\u043c\\u0438 \\u0441\\u0443\\u0431\\u0442\\u0438\\u0442\\u0440\\u0430\\u043c\\u0438. \\u0418\\u0442\\u0430\\u043b\\u0438\\u044f, 1330 \\u0433\\u043e\\u0434. \\u0414\\u0436\\u043e\\u0432\\u0430\\u043d\\u043d\\u0438 \\u0411\\u043e\\u043a\\u043a\\u0430\\u0447\\u0447\\u043e \\u043e\\u0442\\u043f\\u0440\\u0430\\u0432\\u043b\\u044f\\u0435\\u0442\\u0441\\u044f \\u0432 \\u0420\\u0430\\u0432\\u0435\\u043d\\u043d\\u0443, \\u0433\\u0434\\u0435 \\u0434\\u0435\\u0441\\u044f\\u0442\\u044c \\u043b\\u0435\\u0442 \\u043d\\u0430\\u0437\\u0430\\u0434 \\u0432 \\u0438\\u0437\\u0433\\u043d\\u0430\\u043d\\u0438\\u0438 \\u0443\\u043c\\u0435\\u0440 \\u0432\\u0435\\u043b\\u0438\\u043a\\u0438\\u0439 \\u0414\\u0430\\u043d\\u0442\\u0435 \\u0410\\u043b\\u0438\\u0433\\u044c\\u0435\\u0440\\u0438. \\u041e\\u043d \\u0434\\u043e\\u043b\\u0436\\u0435\\u043d \\u0440\\u0430\\u0437\\u044b\\u0441\\u043a\\u0430\\u0442\\u044c \\u0435\\u0433\\u043e \\u0434\\u043e\\u0447\\u044c \\u0411\\u0435\\u0430\\u0442\\u0440\\u0438\\u0447\\u0435 \\u0438 \\u043f\\u0435\\u0440\\u0435\\u0434\\u0430\\u0442\\u044c \\u0434\\u0435\\u0441\\u044f\\u0442\\u044c \\u0437\\u043e\\u043b\\u043e\\u0442\\u044b\\u0445 \\u0444\\u043b\\u043e\\u0440\\u0438\\u043d\\u043e\\u0432 \\u2014 \\u0447\\u0442\\u043e\\u0431\\u044b \\u043a\\u043e\\u043c\\u043f\\u0435\\u043d\\u0441\\u0438\\u0440\\u043e\\u0432\\u0430\\u0442\\u044c \\u043d\\u0435\\u0441\\u043f\\u0440\\u0430\\u0432\\u0435\\u0434\\u043b\\u0438\\u0432\\u043e\\u0435 \\u0438\\u0437\\u0433\\u043d\\u0430\\u043d\\u0438\\u0435 \\u0435\\u0435 \\u043e\\u0442\\u0446\\u0430 \\u0438\\u0437 \\u0424\\u043b\\u043e\\u0440\\u0435\\u043d\\u0446\\u0438\\u0438. \\u0422\\u043e\\u0433\\u0434\\u0430 \\u0414\\u0430\\u043d\\u0442\\u0435 \\u0433\\u043d\\u0430\\u043b\\u0438, \\u043f\\u0440\\u0438\\u0433\\u043e\\u0432\\u0430\\u0440\\u0438\\u0432\\u0430\\u043b\\u0438 \\u043a \\u0441\\u043e\\u0436\\u0436\\u0435\\u043d\\u0438\\u044e \\u0437\\u0430\\u0436\\u0438\\u0432\\u043e, \\u0430 \\u00ab\\u0411\\u043e\\u0436\\u0435\\u0441\\u0442\\u0432\\u0435\\u043d\\u043d\\u0443\\u044e \\u043a\\u043e\\u043c\\u0435\\u0434\\u0438\\u044e\\u00bb \\u0441\\u0447\\u0438\\u0442\\u0430\\u043b\\u0438 \\u0434\\u044c\\u044f\\u0432\\u043e\\u043b\\u044c\\u0441\\u043a\\u0438\\u043c \\u043f\\u0440\\u043e\\u0438\\u0437\\u0432\\u0435\\u0434\\u0435\\u043d\\u0438\\u0435\\u043c. \\u0421\\u0435\\u0439\\u0447\\u0430\\u0441 \\u043e\\u043d \\u0440\\u0435\\u0430\\u0431\\u0438\\u043b\\u0438\\u0442\\u0438\\u0440\\u043e\\u0432\\u0430\\u043d \\u0438 \\u0411\\u043e\\u043a\\u043a\\u0430\\u0447\\u0447\\u043e \\u043f\\u043e\\u0432\\u0442\\u043e\\u0440\\u044f\\u0435\\u0442 \\u0435\\u0433\\u043e \\u043f\\u0443\\u0442\\u044c, \\u0447\\u0442\\u043e\\u0431\\u044b \\u0440\\u0430\\u0441\\u0441\\u043a\\u0430\\u0437\\u0430\\u0442\\u044c \\u0438\\u0441\\u0442\\u0438\\u043d\\u043d\\u0443\\u044e \\u0438\\u0441\\u0442\\u043e\\u0440\\u0438\\u044e \\u043e\\u0434\\u043d\\u043e\\u0433\\u043e \\u0438\\u0437 \\u0432\\u0435\\u043b\\u0438\\u0447\\u0430\\u0439\\u0448\\u0438\\u0445 \\u0433\\u0435\\u043d\\u0438\\u0435\\u0432 \\u0432 \\u0438\\u0441\\u0442\\u043e\\u0440\\u0438\\u0438 \\u0447\\u0435\\u043b\\u043e\\u0432\\u0435\\u0447\\u0435\\u0441\\u0442\\u0432\\u0430. \\u042d\\u0442\\u043e \\u0432\\u043f\\u0435\\u0447\\u0430\\u0442\\u043b\\u044f\\u044e\\u0449\\u0438\\u0439 \\u0442\\u0430\\u043d\\u0434\\u0435\\u043c \\u0434\\u0432\\u0443\\u0445 \\u043c\\u044d\\u0442\\u0440\\u043e\\u0432 \\u0438\\u0442\\u0430\\u043b\\u044c\\u044f\\u043d\\u0441\\u043a\\u043e\\u0433\\u043e \\u043a\\u0438\\u043d\\u043e: \\u0432 \\u0440\\u0435\\u0436\\u0438\\u0441\\u0441\\u0435\\u0440\\u0441\\u043a\\u043e\\u043c \\u043a\\u0440\\u0435\\u0441\\u043b\\u0435 \\u2014 \\u041f\\u0443\\u043f\\u0438 \\u0410\\u0432\\u0430\\u0442\\u0438, \\u043b\\u0430\\u0443\\u0440\\u0435\\u0430\\u0442 \\u0412\\u0435\\u043d\\u0435\\u0446\\u0438\\u0430\\u043d\\u0441\\u043a\\u043e\\u0433\\u043e \\u043a\\u0438\\u043d\\u043e\\u0444\\u0435\\u0441\\u0442\\u0438\\u0432\\u0430\\u043b\\u044f, \\u0432 \\u0433\\u043b\\u0430\\u0432\\u043d\\u043e\\u0439 \\u0440\\u043e\\u043b\\u0438 \\u2014 \\u0421\\u0435\\u0440\\u0434\\u0436\\u043e \\u041a\\u0430\\u0441\\u0442\\u0435\\u043b\\u043b\\u0438\\u0442\\u0442\\u043e, \\u0440\\u0435\\u0436\\u0438\\u0441\\u0441\\u0435\\u0440 \\u0438 \\u0430\\u043a\\u0442\\u0435\\u0440, \\u043d\\u043e\\u043c\\u0438\\u043d\\u0430\\u043d\\u0442 \\u041a\\u0430\\u043d\\u043d\\u0441\\u043a\\u043e\\u0433\\u043e \\u043a\\u0438\\u043d\\u043e\\u0444\\u0435\\u0441\\u0442\\u0438\\u0432\\u0430\\u043b\\u044f.\",\n          \"\\u041c\\u0443\\u043b\\u044c\\u0442\\u0438\\u043c\\u0435\\u0434\\u0438\\u0430 \\u0410\\u0440\\u0442 \\u041c\\u0443\\u0437\\u0435\\u0439, \\u041c\\u043e\\u0441\\u043a\\u0432\\u0430 \\u043f\\u0440\\u0435\\u0434\\u0441\\u0442\\u0430\\u0432\\u043b\\u044f\\u0435\\u0442 \\u0438\\u043d\\u0441\\u0442\\u0430\\u043b\\u043b\\u044f\\u0446\\u0438\\u044e \\u0410\\u043b\\u0435\\u043a\\u0441\\u0435\\u044f \\u041a\\u0430\\u043b\\u043b\\u0438\\u043c\\u044b \\u00ab\\u0422\\u0435\\u043e\\u0440\\u0435\\u043c\\u0430 \\u0434\\u043e\\u0436\\u0434\\u044f\\u00bb, \\u0432\\u043f\\u0435\\u0440\\u0432\\u044b\\u0435 \\u043f\\u043e\\u043a\\u0430\\u0437\\u0430\\u043d\\u043d\\u0443\\u044e \\u0432 2009 \\u0433\\u043e\\u0434\\u0443 \\u0432 \\u0420\\u043e\\u0441\\u0441\\u0438\\u0439\\u0441\\u043a\\u043e\\u043c \\u043f\\u0430\\u0432\\u0438\\u043b\\u044c\\u043e\\u043d\\u0435 \\u043d\\u0430 53-\\u0439 \\u0412\\u0435\\u043d\\u0435\\u0446\\u0438\\u0430\\u043d\\u0441\\u043a\\u043e\\u0439 \\u0431\\u0438\\u0435\\u043d\\u043d\\u0430\\u043b\\u0435. \\u0418\\u043d\\u0441\\u0442\\u0430\\u043b\\u043b\\u044f\\u0446\\u0438\\u044f \\u0410\\u043b\\u0435\\u043a\\u0441\\u0435\\u044f \\u041a\\u0430\\u043b\\u043b\\u0438\\u043c\\u044b \\u043f\\u043e\\u0441\\u0432\\u044f\\u0449\\u0435\\u043d\\u0430 \\u0444\\u0443\\u0442\\u0431\\u043e\\u043b\\u0443 \\u2014 \\u0435\\u0434\\u0438\\u043d\\u0441\\u0442\\u0432\\u0435\\u043d\\u043d\\u043e\\u043c\\u0443 \\u0432\\u0438\\u0434\\u0443 \\u0441\\u043f\\u043e\\u0440\\u0442\\u0430, \\u0441\\u043f\\u043e\\u0441\\u043e\\u0431\\u043d\\u043e\\u043c\\u0443 \\u0441\\u043e\\u0431\\u0440\\u0430\\u0442\\u044c \\u043d\\u0430 \\u0441\\u0442\\u0430\\u0434\\u0438\\u043e\\u043d\\u0430\\u0445 \\u0434\\u0435\\u0441\\u044f\\u0442\\u043a\\u0438 \\u0442\\u044b\\u0441\\u044f\\u0447 \\u0431\\u043e\\u043b\\u0435\\u043b\\u044c\\u0449\\u0438\\u043a\\u043e\\u0432 \\u0438 \\u043e\\u0431\\u044a\\u0435\\u0434\\u0438\\u043d\\u0438\\u0442\\u044c \\u043c\\u0438\\u043b\\u043b\\u0438\\u043e\\u043d\\u044b \\u0437\\u0440\\u0438\\u0442\\u0435\\u043b\\u0435\\u0439 \\u0432\\u043e \\u0432\\u0440\\u0435\\u043c\\u044f \\u0442\\u0440\\u0430\\u043d\\u0441\\u043b\\u044f\\u0446\\u0438\\u0439 \\u0444\\u0443\\u0442\\u0431\\u043e\\u043b\\u044c\\u043d\\u044b\\u0445 \\u043c\\u0430\\u0442\\u0447\\u0435\\u0439. \\u0424\\u0443\\u0442\\u0431\\u043e\\u043b \\u0432\\u044b\\u0437\\u044b\\u0432\\u0430\\u0435\\u0442 \\u0432\\u043e\\u0437\\u0433\\u043e\\u043d\\u043a\\u0443 \\u043a\\u043e\\u043b\\u043b\\u0435\\u043a\\u0442\\u0438\\u0432\\u043d\\u044b\\u0445 \\u044d\\u043c\\u043e\\u0446\\u0438\\u0439, \\u043a\\u043e\\u0433\\u0434\\u0430 \\u043a\\u0430\\u0436\\u0434\\u044b\\u0439 \\u0447\\u0443\\u0432\\u0441\\u0442\\u0432\\u0443\\u0435\\u0442 \\u0441\\u0432\\u043e\\u044e \\u0441\\u043e\\u043f\\u0440\\u0438\\u0447\\u0430\\u0441\\u0442\\u043d\\u043e\\u0441\\u0442\\u044c \\u043a \\u043f\\u043e\\u0431\\u0435\\u0434\\u0430\\u043c \\u0438\\u043b\\u0438 \\u043f\\u043e\\u0440\\u0430\\u0436\\u0435\\u043d\\u0438\\u044f\\u043c, \\u0432\\u043e\\u0441\\u043f\\u0440\\u0438\\u043d\\u0438\\u043c\\u0430\\u0435\\u043c\\u044b\\u043c, \\u043a\\u0430\\u043a \\u00ab\\u043d\\u0430\\u0448\\u0435\\u00bb, \\u0430 \\u043d\\u0435 \\u00ab\\u043c\\u043e\\u0435\\u00bb.\",\n          \"\\u041c\\u043e\\u0436\\u043d\\u043e \\u043f\\u043e\\u0438\\u0433\\u0440\\u0430\\u0442\\u044c \\u0441 \\u043a\\u0440\\u043e\\u043b\\u0438\\u043a\\u0430\\u043c\\u0438, \\u043f\\u043e\\u043a\\u043e\\u0440\\u043c\\u0438\\u0442\\u044c \\u0438\\u0445, \\u0441\\u0444\\u043e\\u0442\\u043e\\u0433\\u0440\\u0430\\u0444\\u0438\\u0440\\u043e\\u0432\\u0430\\u0442\\u044c\\u0441\\u044f, \\u043f\\u043e\\u0438\\u0433\\u0440\\u0430\\u0442\\u044c \\u0432 \\u043d\\u0430\\u0441\\u0442\\u043e\\u043b\\u043a\\u0438 \\u0438 \\u0432\\u0438\\u0434\\u0435\\u043e\\u0438\\u0433\\u0440\\u044b\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0414\\u0430\\u0442\\u044b: 10 \\u043c\\u0430\\u044f, 12:00\",\n          \"\\u0414\\u0430\\u0442\\u044b: \\u0441 13 \\u0430\\u043f\\u0440\\u0435\\u043b\\u044f \\u043f\\u043e 15 \\u0438\\u044e\\u043b\\u044f.\",\n          \"\\u0414\\u0430\\u0442\\u044b: \\u0415\\u0436\\u0435\\u0434\\u043d\\u0435\\u0432\\u043d\\u043e 10:00-22:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"loc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041a\\u0410\\u0420\\u041e 11 \\u041e\\u043a\\u0442\\u044f\\u0431\\u0440\\u044c\",\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041c\\u043e\\u0441\\u043a\\u0432\\u0430, \\u0443\\u043b. \\u041e\\u0441\\u0442\\u043e\\u0436\\u0435\\u043d\\u043a\\u0430, 16. \\u041c\\u0410\\u041c\\u041c. (\\u0433\\u043e\\u0440\\u043e\\u0434)\",\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u0423\\u043b. \\u0421\\u0435\\u043b\\u0435\\u0437\\u043d\\u0435\\u0432\\u0441\\u043a\\u0430\\u044f 4\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: 500\\u0440\",\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: \\u0441\\u0442\\u0443\\u0434\\u0435\\u043d\\u0442\\u044b 350, \\u0432\\u0437\\u0440\\u043e\\u0441\\u043b\\u044b\\u0435 700 \\u20bd. \\u0411\\u0438\\u043b\\u0435\\u0442\\u044b \\u043f\\u043e \\u0441\\u0441\\u044b\\u043b\\u043a\\u0435.\",\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: 400\\u20bd + 12\\u20bd/\\u043c\\u0438\\u043d\\u00a0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"link\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: https://2023.riff-russia.ru/filmy/455-dante\",\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: https://mamm-mdf.ru\",\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: -\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id      cat_1             cat_2  \\\n",
              "117  118  Экскурсия  Уличная, История   \n",
              "\n",
              "                                                  name  \\\n",
              "117  Идем на пешеходную экскурсию по Крутицкому под...   \n",
              "\n",
              "                                                  desc                 date  \\\n",
              "117  Вы узнаете много интересного о чудом сохранивш...  Даты: 4 мая в 13:00   \n",
              "\n",
              "                                 loc  \\\n",
              "117  Место: М. Пролетарская, выход 9   \n",
              "\n",
              "                                                 price           link  \n",
              "117  Стоимость: Сумма благодарности на ваше усмотре...  Ссылка: ЗДЕСЬ  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-32e3b890-945c-4f70-85be-f01895504366\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>cat_1</th>\n",
              "      <th>cat_2</th>\n",
              "      <th>name</th>\n",
              "      <th>desc</th>\n",
              "      <th>date</th>\n",
              "      <th>loc</th>\n",
              "      <th>price</th>\n",
              "      <th>link</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>117</th>\n",
              "      <td>118</td>\n",
              "      <td>Экскурсия</td>\n",
              "      <td>Уличная, История</td>\n",
              "      <td>Идем на пешеходную экскурсию по Крутицкому под...</td>\n",
              "      <td>Вы узнаете много интересного о чудом сохранивш...</td>\n",
              "      <td>Даты: 4 мая в 13:00</td>\n",
              "      <td>Место: М. Пролетарская, выход 9</td>\n",
              "      <td>Стоимость: Сумма благодарности на ваше усмотре...</td>\n",
              "      <td>Ссылка: ЗДЕСЬ</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-32e3b890-945c-4f70-85be-f01895504366')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-32e3b890-945c-4f70-85be-f01895504366 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-32e3b890-945c-4f70-85be-f01895504366');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"]\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"118\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u042d\\u043a\\u0441\\u043a\\u0443\\u0440\\u0441\\u0438\\u044f\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0423\\u043b\\u0438\\u0447\\u043d\\u0430\\u044f, \\u0418\\u0441\\u0442\\u043e\\u0440\\u0438\\u044f\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0418\\u0434\\u0435\\u043c \\u043d\\u0430 \\u043f\\u0435\\u0448\\u0435\\u0445\\u043e\\u0434\\u043d\\u0443\\u044e \\u044d\\u043a\\u0441\\u043a\\u0443\\u0440\\u0441\\u0438\\u044e \\u043f\\u043e \\u041a\\u0440\\u0443\\u0442\\u0438\\u0446\\u043a\\u043e\\u043c\\u0443 \\u043f\\u043e\\u0434\\u0432\\u043e\\u0440\\u044c\\u044e 4 \\u043c\\u0430\\u044f\\u00a0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"desc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0412\\u044b \\u0443\\u0437\\u043d\\u0430\\u0435\\u0442\\u0435 \\u043c\\u043d\\u043e\\u0433\\u043e \\u0438\\u043d\\u0442\\u0435\\u0440\\u0435\\u0441\\u043d\\u043e\\u0433\\u043e \\u043e \\u0447\\u0443\\u0434\\u043e\\u043c \\u0441\\u043e\\u0445\\u0440\\u0430\\u043d\\u0438\\u0432\\u0448\\u0435\\u043c\\u0441\\u044f \\u0441\\u0442\\u0430\\u0440\\u0438\\u043d\\u043d\\u043e\\u043c \\u0443\\u0433\\u043e\\u043b\\u043a\\u0435 \\u0441\\u0442\\u0440\\u0430\\u043d\\u044b: \\u043f\\u043e\\u0442\\u0435\\u043c\\u043d\\u0435\\u0432\\u0448\\u0438\\u0439 \\u043e\\u0442 \\u0432\\u0440\\u0435\\u043c\\u0435\\u043d\\u0438 \\u043a\\u0438\\u0440\\u043f\\u0438\\u0447 \\u043f\\u043e\\u0441\\u0442\\u0440\\u043e\\u0435\\u043a, \\u043f\\u043b\\u043e\\u0449\\u0430\\u0434\\u044c, \\u043c\\u043e\\u0449\\u0435\\u043d\\u0430\\u044f \\u0431\\u0443\\u043b\\u044b\\u0436\\u043d\\u0438\\u043a\\u0430\\u043c\\u0438, \\u043f\\u043e\\u043b\\u0438\\u0432\\u043d\\u044b\\u0435 \\u0438\\u0437\\u0440\\u0430\\u0437\\u0446\\u044b \\u0438 \\u0434\\u0435\\u0440\\u0435\\u0432\\u044f\\u043d\\u043d\\u044b\\u0435 \\u0436\\u0438\\u043b\\u044b\\u0435 \\u0434\\u043e\\u043c\\u0430 \\u2013 \\u0432\\u0441\\u0435 \\u0437\\u0434\\u0435\\u0441\\u044c \\u0434\\u044b\\u0448\\u0438\\u0442 \\u0434\\u0440\\u0435\\u0432\\u043d\\u0435\\u0439 \\u0438\\u0441\\u0442\\u043e\\u0440\\u0438\\u0435\\u0439\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0414\\u0430\\u0442\\u044b: 4 \\u043c\\u0430\\u044f \\u0432 13:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"loc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041c. \\u041f\\u0440\\u043e\\u043b\\u0435\\u0442\\u0430\\u0440\\u0441\\u043a\\u0430\\u044f, \\u0432\\u044b\\u0445\\u043e\\u0434 9\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: \\u0421\\u0443\\u043c\\u043c\\u0430 \\u0431\\u043b\\u0430\\u0433\\u043e\\u0434\\u0430\\u0440\\u043d\\u043e\\u0441\\u0442\\u0438 \\u043d\\u0430 \\u0432\\u0430\\u0448\\u0435 \\u0443\\u0441\\u043c\\u043e\\u0442\\u0440\\u0435\\u043d\\u0438\\u0435\\u00a0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"link\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: \\u0417\\u0414\\u0415\\u0421\\u042c\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 225
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# random seed для рандома рекомендации\n",
        "\n",
        "# for i in range(0, 1000):\n",
        "#   random.seed(i)\n",
        "#   if random.choice(CHOOSE_FROM[~CHOOSE_FROM.item_id.isin(top_n_group_recommendations[:3])].item_id.values) == '118':\n",
        "#     print(i)"
      ],
      "metadata": {
        "id": "3XW-QJPnPlaP"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### 5"
      ],
      "metadata": {
        "id": "CTTqI6BH13w9"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "NEW_ID_SET5 = ['156', '1', '132', '118']   # !!!!!\n",
        "# открываем модель\n",
        "with open('4_group_based_model.pkl', 'rb') as mfile:\n",
        "    loaded_model5 = pickle.load(mfile)\n",
        "\n",
        "new5_interactions = pd.read_excel('intrc_it_55.xlsx', index_col=0)"
      ],
      "metadata": {
        "id": "ZDBRt19M13w_"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "new5_interactions.columns = new5_interactions.columns.astype(str)\n",
        "new5_interactions = new5_interactions.dropna(axis=1, how='all')\n",
        "new5_interactions = new5_interactions.fillna(0).replace(1, 5).replace(-1, 1)\n",
        "\n",
        "new5_interactions = pd.concat([new4_interactions, new5_interactions], axis=1).astype(int)\n",
        "extended_interactions = sparse.csr_matrix(new5_interactions.values)\n",
        "\n",
        "new5_event_features = test_event_features[test_event_features.item_id.isin(NEW_ID_SET5)]"
      ],
      "metadata": {
        "id": "GsrB-CLB13w_"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "extended_interactions"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a826ca7d-7d14-4742-bed9-0a769b0043c0",
        "id": "_Qj6q99z13w_"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<6x146 sparse matrix of type '<class 'numpy.int64'>'\n",
              "\twith 557 stored elements in Compressed Sparse Row format>"
            ]
          },
          "metadata": {},
          "execution_count": 229
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 146\n",
        "new_train_event_features = pd.concat([train_event_features, new_event_features,\n",
        "                                      new2_event_features, new3_event_features,\n",
        "                                      new4_event_features, new5_event_features])\n",
        "new_train_event_features.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "87563be9-48d3-4fe6-a0c1-855b4273ac3b",
        "id": "mNEFjChB13xA"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(146, 49)"
            ]
          },
          "metadata": {},
          "execution_count": 230
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# объединенные\n",
        "new_train_item_features = dataset.build_item_features(\n",
        "    (\n",
        "        (x['item_id'], {f: x[f] for f in new_train_event_features.columns if f != 'item_id'})\n",
        "        for _, x in new_train_event_features.iterrows()\n",
        "    ), normalize=False\n",
        ")"
      ],
      "metadata": {
        "id": "9EgJroxf13xA"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# > 6900\n",
        "new_train_item_features"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aGhH3XwiRLyX",
        "outputId": "9f817744-4b38-4eda-e849-49a79062e2fc"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<202x250 sparse matrix of type '<class 'numpy.float32'>'\n",
              "\twith 7210 stored elements in Compressed Sparse Row format>"
            ]
          },
          "metadata": {},
          "execution_count": 232
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "loaded_model4.get_user_representations()[1][0]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "8a1d92f6-3569-4a5b-91ec-c611f4906261",
        "id": "ywhtaHdY13xA"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0.2743888 ,  0.9404862 ,  0.25988168,  0.61312914, -0.47924015,\n",
              "        0.32066885,  0.02882016, -0.3915559 ,  0.48154452, -0.31307763],\n",
              "      dtype=float32)"
            ]
          },
          "metadata": {},
          "execution_count": 233
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "loaded_model5.get_user_representations()[1][0]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d8e9895d-7a88-4a9d-b3d7-c27a925151e5",
        "id": "3xJSweUY13xA"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0.2743888 ,  0.9404862 ,  0.25988168,  0.61312914, -0.47924015,\n",
              "        0.32066885,  0.02882016, -0.3915559 ,  0.48154452, -0.31307763],\n",
              "      dtype=float32)"
            ]
          },
          "metadata": {},
          "execution_count": 234
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "loaded_model5.fit_partial(\n",
        "    interactions=extended_interactions,\n",
        "    user_features=user_features,  # добавить настроение\n",
        "    item_features=new_train_item_features,\n",
        "    epochs=2,\n",
        "    num_threads=1\n",
        ")\n",
        "\n",
        "with open('5_group_based_model.pkl', 'wb') as model_file:\n",
        "    pickle.dump(loaded_model5, model_file)"
      ],
      "metadata": {
        "id": "8__iDKjJ13xA"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "loaded_model4.get_user_representations()[1][0]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e9610569-3c24-4a65-d932-5c049d791d1c",
        "id": "1dtkoha913xA"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0.2743888 ,  0.9404862 ,  0.25988168,  0.61312914, -0.47924015,\n",
              "        0.32066885,  0.02882016, -0.3915559 ,  0.48154452, -0.31307763],\n",
              "      dtype=float32)"
            ]
          },
          "metadata": {},
          "execution_count": 236
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "loaded_model5.get_user_representations()[1][0]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "83d87469-f4f5-4355-9bf7-78ae7e60c421",
        "id": "sjMVZ-Hb13xA"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0.28102955,  0.9770922 ,  0.27628675,  0.6325903 , -0.46577045,\n",
              "        0.3325434 ,  0.02666536, -0.37963846,  0.48852897, -0.29540893],\n",
              "      dtype=float32)"
            ]
          },
          "metadata": {},
          "execution_count": 237
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "group_profile"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "aeb7aaf8-bdcd-4fab-c063-095b4a9662bc",
        "id": "3H9JW24m13xA"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0.966086  ,  1.132978  ,  0.47034423, -0.16546198, -0.18529098,\n",
              "       -0.99998905, -0.54016543, -0.17224235, -0.69029031, -0.08738241])"
            ]
          },
          "metadata": {},
          "execution_count": 238
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "user_ids = ['Ксю', 'Аня', 'Лиза', 'Катя', 'Ира', 'Окси']\n",
        "group_profile = aggregate_user_profiles(\n",
        "    loaded_model5, dataset, user_features_data, user_features, user_ids, INDIVIDUAL_COEF, 0\n",
        "    )\n",
        "group_profile"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "8c22c7c0-aec7-4ade-b649-c65e79b979ee",
        "id": "C53-dX-Z13xA"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 1.03585137,  1.24655474,  0.51431048, -0.26944175, -0.14851121,\n",
              "       -1.08155039, -0.55397536, -0.0970817 , -0.72139221,  0.00644614])"
            ]
          },
          "metadata": {},
          "execution_count": 239
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 56\n",
        "test_event_features_cut = test_event_features.drop(test_event_features[\n",
        "    test_event_features.item_id.isin(NEW_ID_SET + NEW_ID_SET2 + NEW_ID_SET3 + \\\n",
        "                                     NEW_ID_SET4 + NEW_ID_SET5)\n",
        "    ].index, axis=0)\n",
        "test_event_features_cut.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "1e4a04a8-c623-4565-cf5e-2be20ebd9541",
        "id": "Uw8YjZ-x13xB"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(56, 49)"
            ]
          },
          "metadata": {},
          "execution_count": 240
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "CHOOSE_FROM = test_event_features_cut.copy(deep=True)  # обрезанный потому что нельзя рекомендовать лайкнутые\n",
        "CHOOSE_FROM_FTRS = test_item_features # не обрезанный потому что зачем, у медели и так есть все фичи тестовых пои\n",
        "\n",
        "top_n_group_recommendations = get_group_recommendations(\n",
        "    loaded_model5, dataset, group_profile,\n",
        "    CHOOSE_FROM_FTRS, CHOOSE_FROM, user_features\n",
        ")\n",
        "print(top_n_group_recommendations)\n",
        "\n",
        "# display(event_data[event_data.id.isin(top_n_group_recommendations)])\n",
        "\n",
        "display(\n",
        "    event_data[event_data['id'].isin(top_n_group_recommendations)]\n",
        "    .set_index('id')\n",
        "    .reindex(top_n_group_recommendations)\n",
        "    .reset_index()\n",
        ")\n",
        "\n",
        "# random seed для рандома рекомендации\n",
        "random.seed(1098)\n",
        "event_data[\n",
        "    event_data.id.isin(random.choices(CHOOSE_FROM[~CHOOSE_FROM.item_id.isin(top_n_group_recommendations)].item_id.values, k=15))\n",
        "]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "YIcB6I1u13xB",
        "outputId": "173fbb9d-482d-4cc9-dec3-7ece3b5c5daf"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['129', '3', '109', '108', '30', '104', '128', '51', '114', '69', '105', '155', '61', '32', '179', '35', '44', '42', '99', '74']\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "     id                cat_1                                cat_2  \\\n",
              "0   129  Погулять, Экскурсия  Уличная, Природа, Животные, История   \n",
              "1     3             Выставка                  Фотография, История   \n",
              "2   109             Выставка            Фотография, Мода, История   \n",
              "3   108             Выставка    Фотография, Современное Искусство   \n",
              "4    30       Маркет, Лекция                Образовательное, Мода   \n",
              "5   104             Погулять                    Природа, Растения   \n",
              "6   128  Погулять, Экскурсия  Уличная, Природа, Животные, История   \n",
              "7    51            Кинопоказ                     Личности, Редкое   \n",
              "8   114              Концерт                          Инструменты   \n",
              "9    69            Спектакль                                Новое   \n",
              "10  105             Выставка                     Фотография, Мода   \n",
              "11  155            Кинопоказ                          Кино, Новое   \n",
              "12   61            Экскурсия                     Уличная, История   \n",
              "13   32    Фестиваль, Лекция          Образовательное, Психология   \n",
              "14  179              Концерт                  Инструменты, Музыка   \n",
              "15   35            Кинопоказ                Классика, Мультфильмы   \n",
              "16   44                 Игры        Развлечения, История, Уличная   \n",
              "17   42             Выставка                   История, Искусство   \n",
              "18   99              Концерт                                Песни   \n",
              "19   74         Мастерклассы                             Растения   \n",
              "\n",
              "                                                 name  \\\n",
              "0   Экотропы. «Захарьинская пойма» в заказнике «До...   \n",
              "1     Алфавит. Советская фотография 1920-1930-х годов   \n",
              "2     Модницы XIX — начала ХХ века. Из коллекции МАММ   \n",
              "3                         О всех вещах, там обитающих   \n",
              "4   Винтаж в особняке Леман: на выходных на Патриа...   \n",
              "5                6 мест в Москве, где зацветёт сакура   \n",
              "6   Экотропы. «Природа Алешкинского леса» в Тушинс...   \n",
              "7                              Кинопоказ «По Фрейду»    \n",
              "8                           Концерт Дудук с оркестром   \n",
              "9    Спектакль «Комната №7» в особняке «Едва знакомы»   \n",
              "10  Коллекция Фонда Still Art. Шедевры мировой фот...   \n",
              "11                                              БИЛЛИ   \n",
              "12                       \"Вокруг да около Никитского\"   \n",
              "13  20 и 21 апреля в Благосфере проведут фестиваль...   \n",
              "14               Джаз в «Перспективе»: Armir Lee trio   \n",
              "15                 Кинопоказ фильма «Мальчик и птица»   \n",
              "16              Культурно-исторический квест HSE RUN    \n",
              "17  В Музее Москвы открылась новая выставка — «Мос...   \n",
              "18         Бесплатный концерт Мота и группы «Земляне»   \n",
              "19              Икебана WorkShop цветочная мастерская   \n",
              "\n",
              "                                                 desc  \\\n",
              "0   Ландшафтный заказник «Долина реки Сходни в Кур...   \n",
              "1   Фундаментальное исследование одного из ярчайши...   \n",
              "2   Мультимедиа Арт Музей, Москва представляет выс...   \n",
              "3   Выставка соберёт более 50 работ впервые показа...   \n",
              "4   Особняк Леман превратится в рай для любителей ...   \n",
              "5   Сакура зацветет уже в мае! Её цветение продлит...   \n",
              "6   Экскурсия пройдет в Алешкинском лесу на террит...   \n",
              "7   В Новой Третьяковке — показ байопика одного из...   \n",
              "8   Шедевры классической музыки, всемирно известны...   \n",
              "9   В историческом особняке на Третьяковской покаж...   \n",
              "10  Мультимедиа Арт Музей, Москва представляет выс...   \n",
              "11  Юбилейный Russia-Italia Film Festival (RIFF)  ...   \n",
              "12  Прогулка с москвоведом по Никитскому бульвару ...   \n",
              "13  Гостей ждет масштабная лекционная программа, в...   \n",
              "14  Привет! Если вы соскучились по крутому джазу в...   \n",
              "15  Показ от Киноклуба Дом Динамо и его кураторов ...   \n",
              "16  Увлекательные загадки, интересные места столиц...   \n",
              "17  Как вы уже поняли из названия, выставка посвящ...   \n",
              "18  На сцене выступят известные артисты: МОТ и Гру...   \n",
              "19  Икебана это традиционное японское искусство ко...   \n",
              "\n",
              "                                            date  \\\n",
              "0                                        Даты: -   \n",
              "1                               Даты: по 26 мая.   \n",
              "2                               Даты: до 15 июля   \n",
              "3                                Даты: до 26 мая   \n",
              "4              Даты: 28 апреля с 11:00 до 21:00.   \n",
              "5                               Даты: 1 - 31 мая   \n",
              "6                                        Даты: -   \n",
              "7                         Даты: 28 апреля, 14:00   \n",
              "8                              Даты: 4 мая 19:00   \n",
              "9                          Даты: 27-28 мая 19:30   \n",
              "10                              Даты: до 15 июля   \n",
              "11                           Даты: 11 мая, 14:00   \n",
              "12                        Даты: 17 апреля, 16:00   \n",
              "13                          Даты: 20 и 21 апреля   \n",
              "14                           Даты: 14 июля 21:30   \n",
              "15                            Даты: 4 мая, 20:00   \n",
              "16  Даты: 28 апреля 10:30, старт квеста — 12:00.   \n",
              "17       Даты: вт–вс с 11:00 до 21:00  до 12 мая   \n",
              "18                        Даты: 12 апреля 18:00    \n",
              "19                        Даты: 20 апреля: 18:00   \n",
              "\n",
              "                                                  loc  \\\n",
              "0               Место:  55.907730, 37.386544 (далеко)   \n",
              "1   Место: Москва, Якиманская набережная., 2/1. Це...   \n",
              "2     Место: Москва, ул. Остоженка, 16. МАММ. (город)   \n",
              "3   Место: Stella Art Foundation, 1-й Красногварде...   \n",
              "4         Место: Москва, Гранатный пер., 7ст1.(город)   \n",
              "5   Место: Москва, Дольская улица, 1с4, Москва (да...   \n",
              "6               Место:  55.864036, 37.418725 (дальше)   \n",
              "7   Место: Москва, ул. Крымский Вал, 10, Новая Тре...   \n",
              "8                    Место: ул. Мельникова, 7, стр. 1   \n",
              "9   Место: Москва, Старомонетный пер. 22с2, Особня...   \n",
              "10    Место: Москва, ул. Остоженка, 16. МАММ. (город)   \n",
              "11                             Место: КАРО 11 Октябрь   \n",
              "12  Место: Москва, Арбатская площадь, 14, стр. 1, ...   \n",
              "13  Место: Москва, 1-й Боткинский пр., 7 стр. 1 (г...   \n",
              "14                       Место: Потаповский пер., 5с2   \n",
              "15  Место:  ГУМ, Красная площадь, 3, 2 этаж, 1 линия.   \n",
              "16  Место: Москва, Старая Басманная, 21/4с1. м. Ку...   \n",
              "17  Место:  Москва, Зубовский бульвар, 2, корпус 1...   \n",
              "18  Место: Москва, просп. Мира, 119, ВДНХ, Главная...   \n",
              "19  Место: Москва, Гашека 2с1, салон цветов ДиваФл...   \n",
              "\n",
              "                                                price  \\\n",
              "0                                Стоимость: бесплатно   \n",
              "1             Стоимость: 300-500 ₽. Билеты по ссылке.   \n",
              "2                                Стоимость: бесплатно   \n",
              "3                                Стоимость: бесплатно   \n",
              "4                               Стоимость: 400 рублей   \n",
              "5                                Стоимость: бесплатно   \n",
              "6                                Стоимость: бесплатно   \n",
              "7                                     Стоимость: 500р   \n",
              "8        Стоимость: от 1400р, -25% по промокоду STAGE   \n",
              "9                                    Стоимость: 2000р   \n",
              "10                               Стоимость:  от 300 р   \n",
              "11                                    Стоимость: 500р   \n",
              "12                               Стоимость: бесплатно   \n",
              "13  Стоимость: Бесплатно по предварительной регист...   \n",
              "14                               Стоимость: бесплатно   \n",
              "15                               Стоимость: бесплатно   \n",
              "16                               Стоимость: бесплатно   \n",
              "17                              Стоимость: бесплатно    \n",
              "18                          Стоимость: Вход свободный   \n",
              "19                                   Стоимость: 3000р   \n",
              "\n",
              "                                                 link  \n",
              "0                                           Ссылка: -  \n",
              "1   Ссылка: https://betoncvc.com/exhibitions/alfav...  \n",
              "2                                      Ссылка: ссылка  \n",
              "3                                      Ссылка: ссылка  \n",
              "4                                   Ссылка: Подробнее  \n",
              "5                                           Ссылка: -  \n",
              "6                                      Ссылка: ссылка  \n",
              "7                                      Ссылка: билеты  \n",
              "8                      Ссылка: Билеты по ссылке здесь  \n",
              "9                                      Ссылка: ссылка  \n",
              "10                                    Ссылка:  ссылка  \n",
              "11  Ссылка: https://2023.riff-russia.ru/filmy/454-...  \n",
              "12                                     Ссылка: ссылка  \n",
              "13                                  Ссылка: Подробнее  \n",
              "14                                          Ссылка: -  \n",
              "15                             Ссылка: по регистрации  \n",
              "16                                  Ссылка: вот и вот  \n",
              "17                           Ссылка: Вход по билетам.  \n",
              "18                                          Ссылка: -  \n",
              "19                                     Ссылка: ссылка  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d70c9286-3aed-4086-a19f-07f4da6a3379\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>cat_1</th>\n",
              "      <th>cat_2</th>\n",
              "      <th>name</th>\n",
              "      <th>desc</th>\n",
              "      <th>date</th>\n",
              "      <th>loc</th>\n",
              "      <th>price</th>\n",
              "      <th>link</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>129</td>\n",
              "      <td>Погулять, Экскурсия</td>\n",
              "      <td>Уличная, Природа, Животные, История</td>\n",
              "      <td>Экотропы. «Захарьинская пойма» в заказнике «До...</td>\n",
              "      <td>Ландшафтный заказник «Долина реки Сходни в Кур...</td>\n",
              "      <td>Даты: -</td>\n",
              "      <td>Место:  55.907730, 37.386544 (далеко)</td>\n",
              "      <td>Стоимость: бесплатно</td>\n",
              "      <td>Ссылка: -</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>3</td>\n",
              "      <td>Выставка</td>\n",
              "      <td>Фотография, История</td>\n",
              "      <td>Алфавит. Советская фотография 1920-1930-х годов</td>\n",
              "      <td>Фундаментальное исследование одного из ярчайши...</td>\n",
              "      <td>Даты: по 26 мая.</td>\n",
              "      <td>Место: Москва, Якиманская набережная., 2/1. Це...</td>\n",
              "      <td>Стоимость: 300-500 ₽. Билеты по ссылке.</td>\n",
              "      <td>Ссылка: https://betoncvc.com/exhibitions/alfav...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>109</td>\n",
              "      <td>Выставка</td>\n",
              "      <td>Фотография, Мода, История</td>\n",
              "      <td>Модницы XIX — начала ХХ века. Из коллекции МАММ</td>\n",
              "      <td>Мультимедиа Арт Музей, Москва представляет выс...</td>\n",
              "      <td>Даты: до 15 июля</td>\n",
              "      <td>Место: Москва, ул. Остоженка, 16. МАММ. (город)</td>\n",
              "      <td>Стоимость: бесплатно</td>\n",
              "      <td>Ссылка: ссылка</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>108</td>\n",
              "      <td>Выставка</td>\n",
              "      <td>Фотография, Современное Искусство</td>\n",
              "      <td>О всех вещах, там обитающих</td>\n",
              "      <td>Выставка соберёт более 50 работ впервые показа...</td>\n",
              "      <td>Даты: до 26 мая</td>\n",
              "      <td>Место: Stella Art Foundation, 1-й Красногварде...</td>\n",
              "      <td>Стоимость: бесплатно</td>\n",
              "      <td>Ссылка: ссылка</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>30</td>\n",
              "      <td>Маркет, Лекция</td>\n",
              "      <td>Образовательное, Мода</td>\n",
              "      <td>Винтаж в особняке Леман: на выходных на Патриа...</td>\n",
              "      <td>Особняк Леман превратится в рай для любителей ...</td>\n",
              "      <td>Даты: 28 апреля с 11:00 до 21:00.</td>\n",
              "      <td>Место: Москва, Гранатный пер., 7ст1.(город)</td>\n",
              "      <td>Стоимость: 400 рублей</td>\n",
              "      <td>Ссылка: Подробнее</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>104</td>\n",
              "      <td>Погулять</td>\n",
              "      <td>Природа, Растения</td>\n",
              "      <td>6 мест в Москве, где зацветёт сакура</td>\n",
              "      <td>Сакура зацветет уже в мае! Её цветение продлит...</td>\n",
              "      <td>Даты: 1 - 31 мая</td>\n",
              "      <td>Место: Москва, Дольская улица, 1с4, Москва (да...</td>\n",
              "      <td>Стоимость: бесплатно</td>\n",
              "      <td>Ссылка: -</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>128</td>\n",
              "      <td>Погулять, Экскурсия</td>\n",
              "      <td>Уличная, Природа, Животные, История</td>\n",
              "      <td>Экотропы. «Природа Алешкинского леса» в Тушинс...</td>\n",
              "      <td>Экскурсия пройдет в Алешкинском лесу на террит...</td>\n",
              "      <td>Даты: -</td>\n",
              "      <td>Место:  55.864036, 37.418725 (дальше)</td>\n",
              "      <td>Стоимость: бесплатно</td>\n",
              "      <td>Ссылка: ссылка</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>51</td>\n",
              "      <td>Кинопоказ</td>\n",
              "      <td>Личности, Редкое</td>\n",
              "      <td>Кинопоказ «По Фрейду»</td>\n",
              "      <td>В Новой Третьяковке — показ байопика одного из...</td>\n",
              "      <td>Даты: 28 апреля, 14:00</td>\n",
              "      <td>Место: Москва, ул. Крымский Вал, 10, Новая Тре...</td>\n",
              "      <td>Стоимость: 500р</td>\n",
              "      <td>Ссылка: билеты</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>114</td>\n",
              "      <td>Концерт</td>\n",
              "      <td>Инструменты</td>\n",
              "      <td>Концерт Дудук с оркестром</td>\n",
              "      <td>Шедевры классической музыки, всемирно известны...</td>\n",
              "      <td>Даты: 4 мая 19:00</td>\n",
              "      <td>Место: ул. Мельникова, 7, стр. 1</td>\n",
              "      <td>Стоимость: от 1400р, -25% по промокоду STAGE</td>\n",
              "      <td>Ссылка: Билеты по ссылке здесь</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>69</td>\n",
              "      <td>Спектакль</td>\n",
              "      <td>Новое</td>\n",
              "      <td>Спектакль «Комната №7» в особняке «Едва знакомы»</td>\n",
              "      <td>В историческом особняке на Третьяковской покаж...</td>\n",
              "      <td>Даты: 27-28 мая 19:30</td>\n",
              "      <td>Место: Москва, Старомонетный пер. 22с2, Особня...</td>\n",
              "      <td>Стоимость: 2000р</td>\n",
              "      <td>Ссылка: ссылка</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>105</td>\n",
              "      <td>Выставка</td>\n",
              "      <td>Фотография, Мода</td>\n",
              "      <td>Коллекция Фонда Still Art. Шедевры мировой фот...</td>\n",
              "      <td>Мультимедиа Арт Музей, Москва представляет выс...</td>\n",
              "      <td>Даты: до 15 июля</td>\n",
              "      <td>Место: Москва, ул. Остоженка, 16. МАММ. (город)</td>\n",
              "      <td>Стоимость:  от 300 р</td>\n",
              "      <td>Ссылка:  ссылка</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>155</td>\n",
              "      <td>Кинопоказ</td>\n",
              "      <td>Кино, Новое</td>\n",
              "      <td>БИЛЛИ</td>\n",
              "      <td>Юбилейный Russia-Italia Film Festival (RIFF)  ...</td>\n",
              "      <td>Даты: 11 мая, 14:00</td>\n",
              "      <td>Место: КАРО 11 Октябрь</td>\n",
              "      <td>Стоимость: 500р</td>\n",
              "      <td>Ссылка: https://2023.riff-russia.ru/filmy/454-...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>61</td>\n",
              "      <td>Экскурсия</td>\n",
              "      <td>Уличная, История</td>\n",
              "      <td>\"Вокруг да около Никитского\"</td>\n",
              "      <td>Прогулка с москвоведом по Никитскому бульвару ...</td>\n",
              "      <td>Даты: 17 апреля, 16:00</td>\n",
              "      <td>Место: Москва, Арбатская площадь, 14, стр. 1, ...</td>\n",
              "      <td>Стоимость: бесплатно</td>\n",
              "      <td>Ссылка: ссылка</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>32</td>\n",
              "      <td>Фестиваль, Лекция</td>\n",
              "      <td>Образовательное, Психология</td>\n",
              "      <td>20 и 21 апреля в Благосфере проведут фестиваль...</td>\n",
              "      <td>Гостей ждет масштабная лекционная программа, в...</td>\n",
              "      <td>Даты: 20 и 21 апреля</td>\n",
              "      <td>Место: Москва, 1-й Боткинский пр., 7 стр. 1 (г...</td>\n",
              "      <td>Стоимость: Бесплатно по предварительной регист...</td>\n",
              "      <td>Ссылка: Подробнее</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>179</td>\n",
              "      <td>Концерт</td>\n",
              "      <td>Инструменты, Музыка</td>\n",
              "      <td>Джаз в «Перспективе»: Armir Lee trio</td>\n",
              "      <td>Привет! Если вы соскучились по крутому джазу в...</td>\n",
              "      <td>Даты: 14 июля 21:30</td>\n",
              "      <td>Место: Потаповский пер., 5с2</td>\n",
              "      <td>Стоимость: бесплатно</td>\n",
              "      <td>Ссылка: -</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>35</td>\n",
              "      <td>Кинопоказ</td>\n",
              "      <td>Классика, Мультфильмы</td>\n",
              "      <td>Кинопоказ фильма «Мальчик и птица»</td>\n",
              "      <td>Показ от Киноклуба Дом Динамо и его кураторов ...</td>\n",
              "      <td>Даты: 4 мая, 20:00</td>\n",
              "      <td>Место:  ГУМ, Красная площадь, 3, 2 этаж, 1 линия.</td>\n",
              "      <td>Стоимость: бесплатно</td>\n",
              "      <td>Ссылка: по регистрации</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>44</td>\n",
              "      <td>Игры</td>\n",
              "      <td>Развлечения, История, Уличная</td>\n",
              "      <td>Культурно-исторический квест HSE RUN</td>\n",
              "      <td>Увлекательные загадки, интересные места столиц...</td>\n",
              "      <td>Даты: 28 апреля 10:30, старт квеста — 12:00.</td>\n",
              "      <td>Место: Москва, Старая Басманная, 21/4с1. м. Ку...</td>\n",
              "      <td>Стоимость: бесплатно</td>\n",
              "      <td>Ссылка: вот и вот</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>42</td>\n",
              "      <td>Выставка</td>\n",
              "      <td>История, Искусство</td>\n",
              "      <td>В Музее Москвы открылась новая выставка — «Мос...</td>\n",
              "      <td>Как вы уже поняли из названия, выставка посвящ...</td>\n",
              "      <td>Даты: вт–вс с 11:00 до 21:00  до 12 мая</td>\n",
              "      <td>Место:  Москва, Зубовский бульвар, 2, корпус 1...</td>\n",
              "      <td>Стоимость: бесплатно</td>\n",
              "      <td>Ссылка: Вход по билетам.</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>99</td>\n",
              "      <td>Концерт</td>\n",
              "      <td>Песни</td>\n",
              "      <td>Бесплатный концерт Мота и группы «Земляне»</td>\n",
              "      <td>На сцене выступят известные артисты: МОТ и Гру...</td>\n",
              "      <td>Даты: 12 апреля 18:00</td>\n",
              "      <td>Место: Москва, просп. Мира, 119, ВДНХ, Главная...</td>\n",
              "      <td>Стоимость: Вход свободный</td>\n",
              "      <td>Ссылка: -</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>74</td>\n",
              "      <td>Мастерклассы</td>\n",
              "      <td>Растения</td>\n",
              "      <td>Икебана WorkShop цветочная мастерская</td>\n",
              "      <td>Икебана это традиционное японское искусство ко...</td>\n",
              "      <td>Даты: 20 апреля: 18:00</td>\n",
              "      <td>Место: Москва, Гашека 2с1, салон цветов ДиваФл...</td>\n",
              "      <td>Стоимость: 3000р</td>\n",
              "      <td>Ссылка: ссылка</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d70c9286-3aed-4086-a19f-07f4da6a3379')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d70c9286-3aed-4086-a19f-07f4da6a3379 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d70c9286-3aed-4086-a19f-07f4da6a3379');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-9fd150ef-ce6f-4bb7-8d9a-145b3b06566d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9fd150ef-ce6f-4bb7-8d9a-145b3b06566d')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-9fd150ef-ce6f-4bb7-8d9a-145b3b06566d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"]\",\n  \"rows\": 20,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"129\",\n          \"42\",\n          \"35\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"\\u041a\\u043e\\u043d\\u0446\\u0435\\u0440\\u0442\",\n          \"\\u041f\\u043e\\u0433\\u0443\\u043b\\u044f\\u0442\\u044c, \\u042d\\u043a\\u0441\\u043a\\u0443\\u0440\\u0441\\u0438\\u044f\",\n          \"\\u0418\\u0433\\u0440\\u044b\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          \"\\u0423\\u043b\\u0438\\u0447\\u043d\\u0430\\u044f, \\u041f\\u0440\\u0438\\u0440\\u043e\\u0434\\u0430, \\u0416\\u0438\\u0432\\u043e\\u0442\\u043d\\u044b\\u0435, \\u0418\\u0441\\u0442\\u043e\\u0440\\u0438\\u044f\",\n          \"\\u041f\\u0440\\u0438\\u0440\\u043e\\u0434\\u0430, \\u0420\\u0430\\u0441\\u0442\\u0435\\u043d\\u0438\\u044f\",\n          \"\\u0423\\u043b\\u0438\\u0447\\u043d\\u0430\\u044f, \\u0418\\u0441\\u0442\\u043e\\u0440\\u0438\\u044f\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"\\u042d\\u043a\\u043e\\u0442\\u0440\\u043e\\u043f\\u044b. \\u00ab\\u0417\\u0430\\u0445\\u0430\\u0440\\u044c\\u0438\\u043d\\u0441\\u043a\\u0430\\u044f \\u043f\\u043e\\u0439\\u043c\\u0430\\u00bb \\u0432 \\u0437\\u0430\\u043a\\u0430\\u0437\\u043d\\u0438\\u043a\\u0435 \\u00ab\\u0414\\u043e\\u043b\\u0438\\u043d\\u0430 \\u0440\\u0435\\u043a\\u0438 \\u0421\\u0445\\u043e\\u0434\\u043d\\u0438 \\u0432 \\u041a\\u0443\\u0440\\u043a\\u0438\\u043d\\u043e\\u00bb 2 \\u043a\\u043c\",\n          \"\\u0412 \\u041c\\u0443\\u0437\\u0435\\u0435 \\u041c\\u043e\\u0441\\u043a\\u0432\\u044b \\u043e\\u0442\\u043a\\u0440\\u044b\\u043b\\u0430\\u0441\\u044c \\u043d\\u043e\\u0432\\u0430\\u044f \\u0432\\u044b\\u0441\\u0442\\u0430\\u0432\\u043a\\u0430 \\u2014 \\u00ab\\u041c\\u043e\\u0441\\u043a\\u0432\\u0438\\u0447\\u043a\\u0430. \\u0416\\u0435\\u043d\\u0449\\u0438\\u043d\\u044b \\u0441\\u043e\\u0432\\u0435\\u0442\\u0441\\u043a\\u043e\\u0439 \\u0441\\u0442\\u043e\\u043b\\u0438\\u0446\\u044b 1920\\u20131930-\\u0445\\u00bb\",\n          \"\\u041a\\u0438\\u043d\\u043e\\u043f\\u043e\\u043a\\u0430\\u0437 \\u0444\\u0438\\u043b\\u044c\\u043c\\u0430 \\u00ab\\u041c\\u0430\\u043b\\u044c\\u0447\\u0438\\u043a \\u0438 \\u043f\\u0442\\u0438\\u0446\\u0430\\u00bb\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"desc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"\\u041b\\u0430\\u043d\\u0434\\u0448\\u0430\\u0444\\u0442\\u043d\\u044b\\u0439 \\u0437\\u0430\\u043a\\u0430\\u0437\\u043d\\u0438\\u043a \\u00ab\\u0414\\u043e\\u043b\\u0438\\u043d\\u0430 \\u0440\\u0435\\u043a\\u0438 \\u0421\\u0445\\u043e\\u0434\\u043d\\u0438 \\u0432 \\u041a\\u0443\\u0440\\u043a\\u0438\\u043d\\u043e\\u00bb - \\u043f\\u0440\\u0438\\u0440\\u043e\\u0434\\u043d\\u044b\\u0439 \\u043f\\u0430\\u0440\\u043a, \\u0440\\u0430\\u0441\\u0442\\u044f\\u043d\\u0443\\u0432\\u0448\\u0438\\u0439\\u0441\\u044f \\u043d\\u0430 5,5 \\u043a\\u0438\\u043b\\u043e\\u043c\\u0435\\u0442\\u0440\\u0430 \\u0432\\u0434\\u043e\\u043b\\u044c \\u043b\\u0435\\u0432\\u043e\\u0433\\u043e \\u0431\\u0435\\u0440\\u0435\\u0433\\u0430 \\u0440\\u0435\\u043a\\u0438 \\u0421\\u0445\\u043e\\u0434\\u043d\\u0438 \\u043d\\u0430 \\u0442\\u0435\\u0440\\u0440\\u0438\\u0442\\u043e\\u0440\\u0438\\u0438 \\u0440\\u0430\\u0439\\u043e\\u043d\\u0430 \\u041a\\u0443\\u0440\\u043a\\u0438\\u043d\\u043e (\\u0421\\u0417\\u0410\\u041e). \\u041d\\u0435\\u0441\\u043c\\u043e\\u0442\\u0440\\u044f \\u043d\\u0430 \\u0441\\u0440\\u0430\\u0432\\u043d\\u0438\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e \\u043c\\u0430\\u043b\\u044b\\u0439 \\u0440\\u0430\\u0437\\u043c\\u0435\\u0440 \\u043d\\u0430 \\u0442\\u0435\\u0440\\u0440\\u0438\\u0442\\u043e\\u0440\\u0438\\u0438 \\u043f\\u0430\\u0440\\u043a\\u0430 \\u043e\\u0447\\u0435\\u043d\\u044c \\u0440\\u0430\\u0437\\u043d\\u043e\\u043e\\u0431\\u0440\\u0430\\u0437\\u043d\\u044b\\u0439 \\u0440\\u0435\\u043b\\u044c\\u0435\\u0444: \\u0440\\u0435\\u0447\\u043d\\u0430\\u044f \\u0434\\u043e\\u043b\\u0438\\u043d\\u0430 \\u0441\\u043e \\u0441\\u043a\\u043b\\u043e\\u043d\\u0430\\u043c\\u0438, \\u043e\\u0432\\u0440\\u0430\\u0433\\u0438, \\u043f\\u043e\\u0439\\u043c\\u0435\\u043d\\u043d\\u044b\\u0435 \\u0438 \\u0441\\u0443\\u0445\\u043e\\u0434\\u043e\\u043b\\u044c\\u043d\\u044b\\u0435 \\u043b\\u0443\\u0433\\u0430, \\u0438 \\u0434\\u0430\\u0436\\u0435 \\u043d\\u0435\\u0431\\u043e\\u043b\\u044c\\u0448\\u043e\\u0439 \\u043b\\u0435\\u0441. \\u041a\\u0440\\u043e\\u043c\\u0435 \\u0442\\u043e\\u0433\\u043e, \\u043f\\u0440\\u0438\\u0440\\u043e\\u0434\\u043d\\u044b\\u0439 \\u043f\\u0430\\u0440\\u043a \\u0441\\u0442\\u0430\\u043b \\u043c\\u0435\\u0441\\u0442\\u043e\\u043c \\u043e\\u0431\\u0438\\u0442\\u0430\\u043d\\u0438\\u044f \\u0440\\u0435\\u0434\\u043a\\u043e\\u0433\\u043e \\u043f\\u043e \\u0440\\u0430\\u0437\\u043d\\u043e\\u043e\\u0431\\u0440\\u0430\\u0437\\u0438\\u044e \\u0441\\u043e\\u043e\\u0431\\u0449\\u0435\\u0441\\u0442\\u0432\\u0430 \\u0436\\u0438\\u0432\\u043e\\u0442\\u043d\\u044b\\u0445, \\u043f\\u0442\\u0438\\u0446 \\u0438 \\u0440\\u0430\\u0441\\u0442\\u0435\\u043d\\u0438\\u0439: \\u0443\\u0436\\u0438, \\u0442\\u0440\\u0438\\u0442\\u043e\\u043d\\u044b, \\u043d\\u043e\\u0440\\u043a\\u0438, \\u0435\\u0436\\u0438, \\u0441\\u043e\\u0432\\u044b \\u0438 \\u043c\\u043d\\u043e\\u0433\\u0438\\u0435 \\u0434\\u0440\\u0443\\u0433\\u0438\\u0435. \\u041c\\u043d\\u043e\\u0433\\u0438\\u0435 \\u0438\\u0437 \\u043e\\u0431\\u0438\\u0442\\u0430\\u044e\\u0449\\u0438\\u0445 \\u0432 \\u00ab\\u0414\\u043e\\u043b\\u0438\\u043d\\u0435 \\u0440\\u0435\\u043a\\u0438 \\u0421\\u0445\\u043e\\u0434\\u043d\\u0438 \\u0432 \\u041a\\u0443\\u0440\\u043a\\u0438\\u043d\\u043e\\u00bb \\u0432\\u0438\\u0434\\u043e\\u0432 \\u044f\\u0432\\u043b\\u044f\\u044e\\u0442\\u0441\\u044f \\u0440\\u0435\\u0434\\u043a\\u0438\\u043c\\u0438 \\u0438\\u043b\\u0438 \\u0438\\u0441\\u0447\\u0435\\u0437\\u0430\\u044e\\u0449\\u0438\\u043c\\u0438 \\u043d\\u0430 \\u0442\\u0435\\u0440\\u0440\\u0438\\u0442\\u043e\\u0440\\u0438\\u0438 \\u041c\\u043e\\u0441\\u043a\\u0432\\u044b.\",\n          \"\\u041a\\u0430\\u043a \\u0432\\u044b \\u0443\\u0436\\u0435 \\u043f\\u043e\\u043d\\u044f\\u043b\\u0438 \\u0438\\u0437 \\u043d\\u0430\\u0437\\u0432\\u0430\\u043d\\u0438\\u044f, \\u0432\\u044b\\u0441\\u0442\\u0430\\u0432\\u043a\\u0430 \\u043f\\u043e\\u0441\\u0432\\u044f\\u0449\\u0435\\u043d\\u0430 \\u0436\\u0435\\u043d\\u0449\\u0438\\u043d\\u0430\\u043c \\u2014 \\u0430 \\u0438\\u043c\\u0435\\u043d\\u043d\\u043e, \\u043e\\u0431\\u0440\\u0430\\u0437\\u0443 \\u043c\\u043e\\u0441\\u043a\\u0432\\u0438\\u0447\\u043a\\u0438 \\u043d\\u0430\\u0447\\u0430\\u043b\\u0430 20-\\u0433\\u043e \\u0432\\u0435\\u043a\\u0430. \\u0410\\u0432\\u0442\\u043e\\u0440\\u044b \\u0432\\u044b\\u0441\\u0442\\u0430\\u0432\\u043a\\u0438 \\u0437\\u0430\\u0436\\u0434\\u0430\\u043b\\u0438\\u0441\\u044c \\u0432\\u043e\\u043f\\u0440\\u043e\\u0441\\u043e\\u043c: \\u043a\\u0430\\u043a\\u0430\\u044f \\u043e\\u043d\\u0430 \\u2014 \\u043d\\u043e\\u0432\\u0430\\u044f \\u0436\\u0435\\u043d\\u0449\\u0438\\u043d\\u0430, \\u0436\\u0438\\u0442\\u0435\\u043b\\u044c\\u043d\\u0438\\u0446\\u0430 \\u0441\\u0442\\u043e\\u043b\\u0438\\u0446\\u044b, \\u043f\\u0435\\u0440\\u0435\\u0436\\u0438\\u0432\\u0448\\u0430\\u044f \\u0441\\u0442\\u043e\\u043b\\u044c\\u043a\\u043e \\u043f\\u043e\\u0442\\u0440\\u044f\\u0441\\u0435\\u043d\\u0438\\u0439? \\u041e\\u0442\\u0432\\u0435\\u0442 \\u0432\\u044b \\u0437\\u043d\\u0430\\u0435\\u0442\\u0435 \\u0441\\u0430\\u043c\\u0438: \\u043e\\u043d\\u0430 \\u2014 \\u0440\\u0430\\u0437\\u043d\\u0430\\u044f! \\u0421\\u043c\\u0435\\u043b\\u0430\\u044f, \\u0430\\u043a\\u0442\\u0438\\u0432\\u043d\\u0430\\u044f, \\u0440\\u0430\\u0431\\u043e\\u0442\\u0430\\u044e\\u0449\\u0430\\u044f \\u043d\\u0430\\u0440\\u0430\\u0432\\u043d\\u0435 \\u0441 \\u043c\\u0443\\u0436\\u0447\\u0438\\u043d\\u0430\\u043c\\u0438, \\u043d\\u043e \\u043f\\u0440\\u0438 \\u044d\\u0442\\u043e\\u043c \\u043d\\u0435\\u0436\\u043d\\u0430\\u044f \\u0438 \\u0447\\u0443\\u0432\\u0441\\u0442\\u0432\\u0435\\u043d\\u043d\\u0430\\u044f. \\u041a\\u0430\\u0436\\u0434\\u044b\\u0439 \\u0437\\u0430\\u043b \\u0432\\u044b\\u0441\\u0442\\u0430\\u0432\\u043a\\u0438 \\u043f\\u0440\\u0435\\u0434\\u0441\\u0442\\u0430\\u0432\\u043b\\u044f\\u0435\\u0442 \\u0441\\u043e\\u0431\\u043e\\u0439 \\u0433\\u043e\\u0440\\u043e\\u0434\\u0441\\u043a\\u043e\\u0435 \\u043f\\u0440\\u043e\\u0441\\u0442\\u0440\\u0430\\u043d\\u0441\\u0442\\u0432\\u043e \\u2014 \\u0441\\u0442\\u043e\\u043b\\u0438\\u044f\\u043d\\u0443\\u0431 \\u0443\\u043b\\u0438\\u0446\\u0443, \\u043f\\u0440\\u043e\\u0441\\u043f\\u0435\\u043a\\u0442, \\u043f\\u043b\\u043e\\u0449\\u0430\\u0434\\u044c \\u0438\\u043b\\u0438 \\u0430\\u0434\\u0440\\u0435\\u0441 \\u043a\\u043e\\u043d\\u043a\\u0440\\u0435\\u0442\\u043d\\u043e\\u0439 \\u0436\\u0435\\u043d\\u0449\\u0438\\u043d\\u044b, \\u0436\\u0438\\u0432\\u0448\\u0435\\u0439 \\u0432 \\u0442\\u043e \\u0432\\u0440\\u0435\\u043c\\u044f. \\u0412 \\u044d\\u043a\\u0441\\u043f\\u043e\\u0437\\u0438\\u0446\\u0438\\u044e \\u0432\\u043e\\u0448\\u043b\\u043e \\u043e\\u043a\\u043e\\u043b\\u043e 2000 \\u044d\\u043a\\u0441\\u043f\\u043e\\u043d\\u0430\\u0442\\u043e\\u0432, \\u0441\\u0440\\u0435\\u0434\\u0438 \\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0445 \\u2014 \\u0440\\u0430\\u0431\\u043e\\u0442\\u044b \\u041a\\u0430\\u0437\\u0438\\u043c\\u0438\\u0440\\u0430 \\u041c\\u0430\\u043b\\u0435\\u0432\\u0438\\u0447\\u0430, \\u0410\\u043b\\u0435\\u043a\\u0441\\u0430\\u043d\\u0434\\u0440\\u0430 \\u0414\\u0435\\u0439\\u043d\\u0435\\u043a\\u0438, \\u041f\\u0435\\u0442\\u0440\\u0430 \\u041a\\u043e\\u043d\\u0447\\u0430\\u043b\\u043e\\u0432\\u0441\\u043a\\u043e\\u0433\\u043e, \\u0418\\u043b\\u044c\\u0438 \\u041c\\u0430\\u0448\\u043a\\u043e\\u0432\\u0430 \\u0438 \\u0434\\u0440\\u0443\\u0433\\u0438\\u0445 \\u0432\\u044b\\u0434\\u0430\\u044e\\u0449\\u0438\\u0445\\u0441\\u044f \\u0445\\u0443\\u0434\\u043e\\u0436\\u043d\\u0438\\u043a\\u043e\\u0432 \\u043f\\u0440\\u043e\\u0448\\u043b\\u043e\\u0433\\u043e \\u0441\\u0442\\u043e\\u043b\\u0435\\u0442\\u0438\\u044f.\",\n          \"\\u041f\\u043e\\u043a\\u0430\\u0437 \\u043e\\u0442 \\u041a\\u0438\\u043d\\u043e\\u043a\\u043b\\u0443\\u0431\\u0430 \\u0414\\u043e\\u043c \\u0414\\u0438\\u043d\\u0430\\u043c\\u043e \\u0438 \\u0435\\u0433\\u043e \\u043a\\u0443\\u0440\\u0430\\u0442\\u043e\\u0440\\u043e\\u0432 \\u0410\\u043b\\u0435\\u043a\\u0441\\u0430\\u043d\\u0434\\u0440\\u0430 \\u041a\\u043e\\u0440\\u043e\\u0431\\u0435\\u0439\\u043d\\u0438\\u043a\\u043e\\u0432\\u0430 \\u0438 \\u041c\\u0430\\u043a\\u0441\\u0438\\u043c\\u0430 \\u0417\\u043e\\u043b\\u043e\\u0442\\u044b\\u0445 \\u2014\\u00a0 \\u00ab\\u043e\\u0441\\u043a\\u0430\\u0440\\u043e\\u043d\\u043e\\u0441\\u043d\\u044b\\u0439\\u00bb \\u0448\\u0435\\u0434\\u0435\\u0432\\u0440 \\u0432\\u0435\\u043b\\u0438\\u043a\\u043e\\u0433\\u043e \\u0425\\u0430\\u044f\\u043e \\u041c\\u0438\\u044f\\u0434\\u0437\\u0430\\u043a\\u0438.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 18,\n        \"samples\": [\n          \"\\u0414\\u0430\\u0442\\u044b: -\",\n          \"\\u0414\\u0430\\u0442\\u044b: \\u043f\\u043e 26 \\u043c\\u0430\\u044f.\",\n          \"\\u0414\\u0430\\u0442\\u044b: 27-28 \\u043c\\u0430\\u044f 19:30\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"loc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e:\\u00a0 55.907730, 37.386544 (\\u0434\\u0430\\u043b\\u0435\\u043a\\u043e)\",\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041c\\u043e\\u0441\\u043a\\u0432\\u0430, \\u0414\\u043e\\u043b\\u044c\\u0441\\u043a\\u0430\\u044f \\u0443\\u043b\\u0438\\u0446\\u0430, 1\\u04414, \\u041c\\u043e\\u0441\\u043a\\u0432\\u0430 (\\u0434\\u0430\\u043b\\u044c\\u0448\\u0435)\",\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041c\\u043e\\u0441\\u043a\\u0432\\u0430, \\u0410\\u0440\\u0431\\u0430\\u0442\\u0441\\u043a\\u0430\\u044f \\u043f\\u043b\\u043e\\u0449\\u0430\\u0434\\u044c, 14, \\u0441\\u0442\\u0440. 1, (\\u0433\\u043e\\u0440\\u043e\\u0434)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: 2000\\u0440\",\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: \\u0431\\u0435\\u0441\\u043f\\u043b\\u0430\\u0442\\u043d\\u043e\",\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: \\u0412\\u0445\\u043e\\u0434 \\u0441\\u0432\\u043e\\u0431\\u043e\\u0434\\u043d\\u044b\\u0439\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"link\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: \\u0411\\u0438\\u043b\\u0435\\u0442\\u044b \\u043f\\u043e \\u0441\\u0441\\u044b\\u043b\\u043a\\u0435 \\u0437\\u0434\\u0435\\u0441\\u044c\",\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: -\",\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: \\u0432\\u043e\\u0442 \\u0438 \\u0432\\u043e\\u0442\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id       cat_1                               cat_2  \\\n",
              "14    15    Выставка         Живопись, Культуры, История   \n",
              "19    20  Перформанс           История, Культуры, Музыка   \n",
              "26    27    Выставка  Современное Искусство, Арт-Объекты   \n",
              "39    40   Кинопоказ           Классика, Образовательное   \n",
              "57    58   Спектакль                        Кино, Редкое   \n",
              "87    88  Перформанс                 Еда, Кино, Классика   \n",
              "110  111     Концерт                               Песни   \n",
              "139  141      Лекция             Образовательное, Бизнес   \n",
              "146  148     Тусовка                       Танцы, Музыка   \n",
              "165  167      Лекция                Еда, Образовательное   \n",
              "187  189        Игры        История, Литература, Уличная   \n",
              "200  202   Спектакль        Танцы, Современное Искусство   \n",
              "\n",
              "                                                  name  \\\n",
              "14                                     Орлов. Котлован   \n",
              "19   Назад в прошлое: встретить праздники с национа...   \n",
              "26   В галерее современного искусства Alma Mater пр...   \n",
              "39       Показ и обсуждение фильма \"Большой Лебовски\"    \n",
              "57   «‎Зотов» запускает новый театральный проект «‎...   \n",
              "87    Гастрономический мюзикл «Москва слезам не верит»   \n",
              "110                                         Дима Билан   \n",
              "139  ТЕЛЕГРАМ СЕГОДНЯ И ЗАВТРА: ОПЫТ, РАЗВИТИЕ, МОН...   \n",
              "146                  LOCAL RADIO SHOWCASE в Powerhouse   \n",
              "165                Вечерний Gourmand CarréFrançois et    \n",
              "187                            ЛЮБОВНЫЕ ИСТОРИИ МОСКВЫ   \n",
              "200               Абсурдистский танцевальный спектакль   \n",
              "\n",
              "                                                  desc  \\\n",
              "14   Молодой художник и выпускник петербургской худ...   \n",
              "19   «ХОРОВОД», организованный DU - UNDERGROUND SHO...   \n",
              "26   Американский писатель, антрополог и мистик Кар...   \n",
              "39   В кофейне «Ностальгия» на Соколе сперва пройде...   \n",
              "57   В Центре «‎Зотов» проведут серию театральных ч...   \n",
              "87   Это совершенно новый для России формат театрал...   \n",
              "110  Впервые за 25 лет творческой деятельности Дима...   \n",
              "139  В рамках фестиваля Veter Spring Fest — любимог...   \n",
              "146  Шоукейс воронежского электронного онлайн-радио...   \n",
              "165  Четвертый выпуск уникального гастрономического...   \n",
              "187  Зачем нужен был фиктивный брак девушке, влюблё...   \n",
              "200  Танцевальный спектакль преподавателя Gogol Sch...   \n",
              "\n",
              "                                                  date  \\\n",
              "14                                    Даты: по 12 мая.   \n",
              "19                            Даты: 12 мая 19:00–23:30   \n",
              "26   Даты: до 27 апреля, с 12:00 — 20:00, вс-пн вых...   \n",
              "39                             Даты: 27 апреля в 18:30   \n",
              "57                        Даты: 17 и 18 апреля в 20:00   \n",
              "87                           Даты: 18 апреля — 31 мая    \n",
              "110                                Дата: 15 июня 19:00   \n",
              "139                                Даты: 19 мая, 13:00   \n",
              "146                               Даты: 3 мая с 23:00.   \n",
              "165                            Даты: 24 апреля в 20:00   \n",
              "187                                            Даты: -   \n",
              "200                               Даты: 25.04, в 20:00   \n",
              "\n",
              "                                                   loc  \\\n",
              "14   Место: Москва, бульвар Гоголевский, 10/2. ММОМ...   \n",
              "19   Место: Москва, ул. Большая Переяславская, 46с1...   \n",
              "26   Место: Москва, ул. Нижняя Красносельская,  дом...   \n",
              "39   Место: Москва,  2-я Песчаная, 4. м. Сокол (город)   \n",
              "57        Место: Москва, Ходынская, 2, стр. 1. (город)   \n",
              "87     Место: Москва, 3-я ул. Ямского Поля, 15 (город)   \n",
              "110  Место: ВТБ Арена – Центральный стадион «Динамо...   \n",
              "139  Место: Veter Spring Fest, Зона Лектория 3 этаж...   \n",
              "146       Место: бар Powerhouse Moscow. Гончарная 7/4.   \n",
              "165  Место: Милютинский переулок 10 стр 1, подъезд ...   \n",
              "187                                  Место: м Тверская   \n",
              "200  Место: Москва, Георгиевский переулок, 3с3 Теат...   \n",
              "\n",
              "                                               price  \\\n",
              "14             Стоимость: 0-350 ₽. Билеты по ссылке.   \n",
              "19                              Стоимость: от 1200р.   \n",
              "26   Стоимость: бесплатно, по предварительной записи   \n",
              "39                                  Стоимость: 400 р   \n",
              "57                                 Стоимость: 2000 р   \n",
              "87                              Стоимость: от 6000 ₽   \n",
              "110                              Стоимость: от 2000р   \n",
              "139                                 Стоимость: 1000р   \n",
              "146        Стоимость: за донейшн (сколько не жалко).   \n",
              "165                             Стоимость:  3900 руб   \n",
              "187                    Стоимость: 1200 р на компанию   \n",
              "200                                 Стоимость: 1500р   \n",
              "\n",
              "                                                  link  \n",
              "14   Ссылка: https://mmoma.ru/visit/gallery/orlov_k...  \n",
              "19                                   Ссылка: Подробнее  \n",
              "26                                   Ссылка: Подробнее  \n",
              "39                          Ссылка: «Большой Лебовски»  \n",
              "57                            Ссылка: Вход по билетам.  \n",
              "87                                Ссылка: Купить билет  \n",
              "110                                     Ссылка: ссылка  \n",
              "139  Ссылка:  Запись в лекторий уже открыта, выбира...  \n",
              "146               Ссылка: https://t.me/radio_local/302  \n",
              "165                                     Ссылка: ссылка  \n",
              "187                                     Ссылка: ссылка  \n",
              "200                              Ссылка: Билетиксы тут  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-79f98eff-0f34-4b22-b7e9-55ee479b600a\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>cat_1</th>\n",
              "      <th>cat_2</th>\n",
              "      <th>name</th>\n",
              "      <th>desc</th>\n",
              "      <th>date</th>\n",
              "      <th>loc</th>\n",
              "      <th>price</th>\n",
              "      <th>link</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>15</td>\n",
              "      <td>Выставка</td>\n",
              "      <td>Живопись, Культуры, История</td>\n",
              "      <td>Орлов. Котлован</td>\n",
              "      <td>Молодой художник и выпускник петербургской худ...</td>\n",
              "      <td>Даты: по 12 мая.</td>\n",
              "      <td>Место: Москва, бульвар Гоголевский, 10/2. ММОМ...</td>\n",
              "      <td>Стоимость: 0-350 ₽. Билеты по ссылке.</td>\n",
              "      <td>Ссылка: https://mmoma.ru/visit/gallery/orlov_k...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>20</td>\n",
              "      <td>Перформанс</td>\n",
              "      <td>История, Культуры, Музыка</td>\n",
              "      <td>Назад в прошлое: встретить праздники с национа...</td>\n",
              "      <td>«ХОРОВОД», организованный DU - UNDERGROUND SHO...</td>\n",
              "      <td>Даты: 12 мая 19:00–23:30</td>\n",
              "      <td>Место: Москва, ул. Большая Переяславская, 46с1...</td>\n",
              "      <td>Стоимость: от 1200р.</td>\n",
              "      <td>Ссылка: Подробнее</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>27</td>\n",
              "      <td>Выставка</td>\n",
              "      <td>Современное Искусство, Арт-Объекты</td>\n",
              "      <td>В галерее современного искусства Alma Mater пр...</td>\n",
              "      <td>Американский писатель, антрополог и мистик Кар...</td>\n",
              "      <td>Даты: до 27 апреля, с 12:00 — 20:00, вс-пн вых...</td>\n",
              "      <td>Место: Москва, ул. Нижняя Красносельская,  дом...</td>\n",
              "      <td>Стоимость: бесплатно, по предварительной записи</td>\n",
              "      <td>Ссылка: Подробнее</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>40</td>\n",
              "      <td>Кинопоказ</td>\n",
              "      <td>Классика, Образовательное</td>\n",
              "      <td>Показ и обсуждение фильма \"Большой Лебовски\"</td>\n",
              "      <td>В кофейне «Ностальгия» на Соколе сперва пройде...</td>\n",
              "      <td>Даты: 27 апреля в 18:30</td>\n",
              "      <td>Место: Москва,  2-я Песчаная, 4. м. Сокол (город)</td>\n",
              "      <td>Стоимость: 400 р</td>\n",
              "      <td>Ссылка: «Большой Лебовски»</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>57</th>\n",
              "      <td>58</td>\n",
              "      <td>Спектакль</td>\n",
              "      <td>Кино, Редкое</td>\n",
              "      <td>«‎Зотов» запускает новый театральный проект «‎...</td>\n",
              "      <td>В Центре «‎Зотов» проведут серию театральных ч...</td>\n",
              "      <td>Даты: 17 и 18 апреля в 20:00</td>\n",
              "      <td>Место: Москва, Ходынская, 2, стр. 1. (город)</td>\n",
              "      <td>Стоимость: 2000 р</td>\n",
              "      <td>Ссылка: Вход по билетам.</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>87</th>\n",
              "      <td>88</td>\n",
              "      <td>Перформанс</td>\n",
              "      <td>Еда, Кино, Классика</td>\n",
              "      <td>Гастрономический мюзикл «Москва слезам не верит»</td>\n",
              "      <td>Это совершенно новый для России формат театрал...</td>\n",
              "      <td>Даты: 18 апреля — 31 мая</td>\n",
              "      <td>Место: Москва, 3-я ул. Ямского Поля, 15 (город)</td>\n",
              "      <td>Стоимость: от 6000 ₽</td>\n",
              "      <td>Ссылка: Купить билет</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>110</th>\n",
              "      <td>111</td>\n",
              "      <td>Концерт</td>\n",
              "      <td>Песни</td>\n",
              "      <td>Дима Билан</td>\n",
              "      <td>Впервые за 25 лет творческой деятельности Дима...</td>\n",
              "      <td>Дата: 15 июня 19:00</td>\n",
              "      <td>Место: ВТБ Арена – Центральный стадион «Динамо...</td>\n",
              "      <td>Стоимость: от 2000р</td>\n",
              "      <td>Ссылка: ссылка</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>139</th>\n",
              "      <td>141</td>\n",
              "      <td>Лекция</td>\n",
              "      <td>Образовательное, Бизнес</td>\n",
              "      <td>ТЕЛЕГРАМ СЕГОДНЯ И ЗАВТРА: ОПЫТ, РАЗВИТИЕ, МОН...</td>\n",
              "      <td>В рамках фестиваля Veter Spring Fest — любимог...</td>\n",
              "      <td>Даты: 19 мая, 13:00</td>\n",
              "      <td>Место: Veter Spring Fest, Зона Лектория 3 этаж...</td>\n",
              "      <td>Стоимость: 1000р</td>\n",
              "      <td>Ссылка:  Запись в лекторий уже открыта, выбира...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>146</th>\n",
              "      <td>148</td>\n",
              "      <td>Тусовка</td>\n",
              "      <td>Танцы, Музыка</td>\n",
              "      <td>LOCAL RADIO SHOWCASE в Powerhouse</td>\n",
              "      <td>Шоукейс воронежского электронного онлайн-радио...</td>\n",
              "      <td>Даты: 3 мая с 23:00.</td>\n",
              "      <td>Место: бар Powerhouse Moscow. Гончарная 7/4.</td>\n",
              "      <td>Стоимость: за донейшн (сколько не жалко).</td>\n",
              "      <td>Ссылка: https://t.me/radio_local/302</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>165</th>\n",
              "      <td>167</td>\n",
              "      <td>Лекция</td>\n",
              "      <td>Еда, Образовательное</td>\n",
              "      <td>Вечерний Gourmand CarréFrançois et</td>\n",
              "      <td>Четвертый выпуск уникального гастрономического...</td>\n",
              "      <td>Даты: 24 апреля в 20:00</td>\n",
              "      <td>Место: Милютинский переулок 10 стр 1, подъезд ...</td>\n",
              "      <td>Стоимость:  3900 руб</td>\n",
              "      <td>Ссылка: ссылка</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>187</th>\n",
              "      <td>189</td>\n",
              "      <td>Игры</td>\n",
              "      <td>История, Литература, Уличная</td>\n",
              "      <td>ЛЮБОВНЫЕ ИСТОРИИ МОСКВЫ</td>\n",
              "      <td>Зачем нужен был фиктивный брак девушке, влюблё...</td>\n",
              "      <td>Даты: -</td>\n",
              "      <td>Место: м Тверская</td>\n",
              "      <td>Стоимость: 1200 р на компанию</td>\n",
              "      <td>Ссылка: ссылка</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>200</th>\n",
              "      <td>202</td>\n",
              "      <td>Спектакль</td>\n",
              "      <td>Танцы, Современное Искусство</td>\n",
              "      <td>Абсурдистский танцевальный спектакль</td>\n",
              "      <td>Танцевальный спектакль преподавателя Gogol Sch...</td>\n",
              "      <td>Даты: 25.04, в 20:00</td>\n",
              "      <td>Место: Москва, Георгиевский переулок, 3с3 Теат...</td>\n",
              "      <td>Стоимость: 1500р</td>\n",
              "      <td>Ссылка: Билетиксы тут</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-79f98eff-0f34-4b22-b7e9-55ee479b600a')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-79f98eff-0f34-4b22-b7e9-55ee479b600a button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-79f98eff-0f34-4b22-b7e9-55ee479b600a');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-59282209-1fbc-4cb8-8014-f131dc6d965d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-59282209-1fbc-4cb8-8014-f131dc6d965d')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-59282209-1fbc-4cb8-8014-f131dc6d965d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"]\",\n  \"rows\": 12,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"189\",\n          \"167\",\n          \"15\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"\\u041f\\u0435\\u0440\\u0444\\u043e\\u0440\\u043c\\u0430\\u043d\\u0441\",\n          \"\\u041b\\u0435\\u043a\\u0446\\u0438\\u044f\",\n          \"\\u0412\\u044b\\u0441\\u0442\\u0430\\u0432\\u043a\\u0430\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"\\u0418\\u0441\\u0442\\u043e\\u0440\\u0438\\u044f, \\u041b\\u0438\\u0442\\u0435\\u0440\\u0430\\u0442\\u0443\\u0440\\u0430, \\u0423\\u043b\\u0438\\u0447\\u043d\\u0430\\u044f\",\n          \"\\u0415\\u0434\\u0430, \\u041e\\u0431\\u0440\\u0430\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e\\u0435\",\n          \"\\u0416\\u0438\\u0432\\u043e\\u043f\\u0438\\u0441\\u044c, \\u041a\\u0443\\u043b\\u044c\\u0442\\u0443\\u0440\\u044b, \\u0418\\u0441\\u0442\\u043e\\u0440\\u0438\\u044f\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"\\u041b\\u042e\\u0411\\u041e\\u0412\\u041d\\u042b\\u0415 \\u0418\\u0421\\u0422\\u041e\\u0420\\u0418\\u0418 \\u041c\\u041e\\u0421\\u041a\\u0412\\u042b\",\n          \"\\u0412\\u0435\\u0447\\u0435\\u0440\\u043d\\u0438\\u0439 Gourmand Carr\\u00e9Fran\\u00e7ois et\\u00a0\",\n          \"\\u041e\\u0440\\u043b\\u043e\\u0432. \\u041a\\u043e\\u0442\\u043b\\u043e\\u0432\\u0430\\u043d\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"desc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"\\u0417\\u0430\\u0447\\u0435\\u043c \\u043d\\u0443\\u0436\\u0435\\u043d \\u0431\\u044b\\u043b \\u0444\\u0438\\u043a\\u0442\\u0438\\u0432\\u043d\\u044b\\u0439 \\u0431\\u0440\\u0430\\u043a \\u0434\\u0435\\u0432\\u0443\\u0448\\u043a\\u0435, \\u0432\\u043b\\u044e\\u0431\\u043b\\u0451\\u043d\\u043d\\u043e\\u0439 \\u0432 \\u0414\\u043e\\u0441\\u0442\\u043e\\u0435\\u0432\\u0441\\u043a\\u043e\\u0433\\u043e? \\u041a\\u0442\\u043e \\u0433\\u0435\\u0440\\u043e\\u0438 \\u0441\\u0430\\u043c\\u043e\\u0433\\u043e \\u0438\\u0437\\u0432\\u0435\\u0441\\u0442\\u043d\\u043e\\u0433\\u043e \\u0432 \\u0438\\u0441\\u0442\\u043e\\u0440\\u0438\\u0438 \\u041c\\u043e\\u0441\\u043a\\u0432\\u044b \\u043b\\u044e\\u0431\\u043e\\u0432\\u043d\\u043e\\u0433\\u043e \\u0442\\u0440\\u0435\\u0443\\u0433\\u043e\\u043b\\u044c\\u043d\\u0438\\u043a\\u0430? \\u041f\\u043e\\u0447\\u0435\\u043c\\u0443 \\u0431\\u0440\\u0430\\u043a \\u0434\\u0432\\u043e\\u0440\\u044f\\u043d\\u043a\\u0438 \\u0438 \\u0438\\u0437\\u0432\\u0435\\u0441\\u0442\\u043d\\u043e\\u0433\\u043e \\u0430\\u0440\\u0445\\u0438\\u0442\\u0435\\u043a\\u0442\\u043e\\u0440\\u0430 \\u0441\\u0442\\u0430\\u043b \\u0441\\u043a\\u0430\\u043d\\u0434\\u0430\\u043b\\u044c\\u043d\\u044b\\u043c?\\u0427\\u0435\\u043c \\u0437\\u0430\\u043a\\u043e\\u043d\\u0447\\u0438\\u043b\\u0430\\u0441\\u044c \\u0438\\u0441\\u0442\\u043e\\u0440\\u0438\\u044f \\u043b\\u044e\\u0431\\u0432\\u0438 \\u0440\\u043e\\u0441\\u0441\\u0438\\u0439\\u0441\\u043a\\u043e\\u0439 \\u0431\\u0430\\u043b\\u0435\\u0440\\u0438\\u043d\\u044b \\u0438 \\u0431\\u0443\\u0434\\u0443\\u0449\\u0435\\u0433\\u043e \\u043f\\u0440\\u0435\\u0437\\u0438\\u0434\\u0435\\u043d\\u0442\\u0430 \\u0424\\u0438\\u043d\\u043b\\u044f\\u043d\\u0434\\u0438\\u0438? \\u041d\\u0430\\u0448\\u043b\\u0430 \\u043b\\u0438 \\u0441\\u0447\\u0430\\u0441\\u0442\\u044c\\u0435 \\u0434\\u0435\\u0432\\u0443\\u0448\\u043a\\u0430, \\u0441\\u0442\\u0430\\u0432\\u0448\\u0430\\u044f \\u043f\\u0440\\u043e\\u0442\\u043e\\u0442\\u0438\\u043f\\u043e\\u043c \\u043f\\u0443\\u0448\\u043a\\u0438\\u043d\\u0441\\u043a\\u043e\\u0439 \\u0422\\u0430\\u0442\\u044c\\u044f\\u043d\\u044b? \\u041a\\u0430\\u043a\\u0430\\u044f \\u043b\\u044e\\u0431\\u043e\\u0432\\u043d\\u0430\\u044f \\u0438\\u0441\\u0442\\u043e\\u0440\\u0438\\u044f \\u0441\\u0442\\u0430\\u043b\\u0430 \\u043f\\u0440\\u0438\\u0447\\u0438\\u043d\\u043e\\u0439 \\u043f\\u043e\\u044f\\u0432\\u043b\\u0435\\u043d\\u0438\\u044f \\u0441\\u0430\\u043c\\u044b\\u0445 \\u0438\\u0437\\u0432\\u0435\\u0441\\u0442\\u043d\\u044b\\u0445 \\u043c\\u043e\\u0441\\u043a\\u043e\\u0432\\u0441\\u043a\\u0438\\u0445 \\u0431\\u0430\\u043d\\u044c? \\u041c\\u043e\\u0441\\u043a\\u0432\\u0430 \\u043d\\u0430\\u0441\\u043a\\u0432\\u043e\\u0437\\u044c \\u043f\\u0440\\u043e\\u043d\\u0438\\u0437\\u0430\\u043d\\u0430 \\u0438\\u0441\\u0442\\u043e\\u0440\\u0438\\u044f\\u043c\\u0438 \\u043b\\u044e\\u0431\\u0432\\u0438 \\u2014 \\u0441\\u0447\\u0430\\u0441\\u0442\\u043b\\u0438\\u0432\\u044b\\u043c\\u0438 \\u0438 \\u0442\\u0440\\u0430\\u0433\\u0438\\u0447\\u043d\\u044b\\u043c\\u0438, \\u0430 \\u043f\\u043e\\u0440\\u043e\\u0439 \\u0438 \\u0441\\u043a\\u0430\\u043d\\u0434\\u0430\\u043b\\u044c\\u043d\\u044b\\u043c\\u0438. \\u0412\\u0435\\u043b\\u0438\\u043a\\u0438\\u0435 \\u043f\\u043e\\u044d\\u0442\\u044b, \\u043a\\u043e\\u043c\\u043f\\u043e\\u0437\\u0438\\u0442\\u043e\\u0440\\u044b, \\u0431\\u043e\\u0433\\u0430\\u0442\\u044b\\u0435 \\u043a\\u0443\\u043f\\u0446\\u044b, \\u043a\\u0440\\u0435\\u0441\\u0442\\u044c\\u044f\\u043d\\u0441\\u043a\\u0438\\u0435 \\u0434\\u0435\\u0442\\u0438, \\u043a\\u043d\\u044f\\u0437\\u044c\\u044f \\u0438 \\u0433\\u0440\\u0430\\u0444\\u0438\\u043d\\u0438, \\u0443\\u0447\\u0451\\u043d\\u044b\\u0435 \\u0438 \\u0430\\u043a\\u0442\\u0440\\u0438\\u0441\\u044b\\u2026 \\u0412\\u0441\\u0435 \\u043e\\u043d\\u0438 \\u043b\\u044e\\u0431\\u0438\\u043b\\u0438 \\u0438 \\u0441\\u0442\\u0440\\u0430\\u0434\\u0430\\u043b\\u0438, \\u0437\\u0430\\u0432\\u043e\\u0434\\u0438\\u043b\\u0438 \\u0440\\u043e\\u043c\\u0430\\u043d\\u044b, \\u0440\\u0430\\u0441\\u0441\\u0442\\u0430\\u0432\\u0430\\u043b\\u0438\\u0441\\u044c, \\u0436\\u0435\\u043d\\u0438\\u043b\\u0438\\u0441\\u044c. \\u041f\\u043e\\u0441\\u043b\\u0435 \\u043f\\u0440\\u043e\\u0445\\u043e\\u0436\\u0434\\u0435\\u043d\\u0438\\u044f \\u044d\\u0442\\u043e\\u0433\\u043e \\u043a\\u0432\\u0435\\u0441\\u0442\\u0430 \\u0437\\u043d\\u0430\\u043a\\u043e\\u043c\\u044b\\u0435 \\u0443\\u043b\\u0438\\u0446\\u044b \\u041c\\u043e\\u0441\\u043a\\u0432\\u044b \\u043e\\u0442\\u043a\\u0440\\u043e\\u044e\\u0442\\u0441\\u044f \\u0432\\u0430\\u043c \\u043f\\u043e-\\u043d\\u043e\\u0432\\u043e\\u043c\\u0443. \\u0413\\u0443\\u043b\\u044f\\u044f \\u043f\\u043e \\u043d\\u0438\\u043c, \\u0432\\u044b \\u0431\\u0443\\u0434\\u0435\\u0442\\u0435 \\u0432\\u0441\\u043f\\u043e\\u043c\\u0438\\u043d\\u0430\\u0442\\u044c \\u0437\\u0430\\u0445\\u0432\\u0430\\u0442\\u044b\\u0432\\u0430\\u044e\\u0449\\u0438\\u0435 \\u0434\\u0443\\u0445 \\u043b\\u044e\\u0431\\u043e\\u0432\\u043d\\u044b\\u0435 \\u0441\\u044e\\u0436\\u0435\\u0442\\u044b.\",\n          \"\\u0427\\u0435\\u0442\\u0432\\u0435\\u0440\\u0442\\u044b\\u0439 \\u0432\\u044b\\u043f\\u0443\\u0441\\u043a \\u0443\\u043d\\u0438\\u043a\\u0430\\u043b\\u044c\\u043d\\u043e\\u0433\\u043e \\u0433\\u0430\\u0441\\u0442\\u0440\\u043e\\u043d\\u043e\\u043c\\u0438\\u0447\\u0435\\u0441\\u043a\\u043e\\u0433\\u043e \\u0441\\u043e\\u0431\\u044b\\u0442\\u0438\\u044f \\u00ab\\u0412\\u0435\\u0447\\u0435\\u0440\\u043d\\u0438\\u0439 Gourmand\\u00bb! Patrick Chonavey \\u2014 \\u0444\\u0440\\u0430\\u043d\\u0446\\u0443\\u0437\\u0441\\u043a\\u0438\\u0439 \\u0448\\u0435\\u0444-\\u043f\\u043e\\u0432\\u0430\\u0440, \\u043d\\u0430\\u0442\\u0443\\u0440\\u043e\\u043f\\u0430\\u0442, health-\\u043a\\u043e\\u0443\\u0447 \\u0441\\u043e\\u0435\\u0434\\u0438\\u043d\\u0438\\u0442 \\u0441\\u0432\\u043e\\u0438 \\u0437\\u043d\\u0430\\u043d\\u0438\\u044f \\u0432 \\u043e\\u0431\\u043b\\u0430\\u0441\\u0442\\u0438 \\u043d\\u0430\\u0442\\u0443\\u0440\\u043e\\u043f\\u0430\\u0442\\u0438\\u0438 \\u0438 \\u0440\\u0430\\u0441\\u043a\\u0440\\u043e\\u0435\\u0442 \\u043d\\u0430\\u043c \\u0441\\u0435\\u043a\\u0440\\u0435\\u0442\\u044b \\u0437\\u0434\\u043e\\u0440\\u043e\\u0432\\u043e\\u0439 \\u043f\\u0438\\u0449\\u0438! \\u041f\\u0430\\u0442\\u0440\\u0438\\u043a \\u043f\\u043e\\u0440\\u0430\\u0434\\u0443\\u0435\\u0442 \\u043d\\u0430\\u0441 \\u0441\\u0435\\u0442\\u043e\\u043c \\u0438\\u0437 \\u0442\\u0440\\u0435\\u0445 \\u0431\\u043b\\u044e\\u0434! \\u041e\\u0442\\u043a\\u0440\\u043e\\u0435\\u0442 \\u043d\\u0430\\u0448 \\u0433\\u0430\\u0441\\u0442\\u0440\\u043e\\u043d\\u043e\\u043c\\u0438\\u0447\\u0435\\u0441\\u043a\\u0438\\u0439 \\u0432\\u0435\\u0447\\u0435\\u0440 \\u0442\\u044b\\u043a\\u0432\\u0435\\u043d\\u043d\\u044b\\u0439 \\u043a\\u0430\\u043f\\u0443\\u0447\\u0438\\u043d\\u043e \\u0441 \\u0430\\u043f\\u0435\\u043b\\u044c\\u0441\\u0438\\u043d\\u043e\\u043c \\u0438 \\u0438\\u043c\\u0431\\u0438\\u0440\\u0435\\u043c, \\u043f\\u0440\\u043e\\u0434\\u043e\\u043b\\u0436\\u0435\\u043d\\u0438\\u0435\\u043c \\u043f\\u043e\\u0441\\u043b\\u0443\\u0436\\u0438\\u0442 \\u0434\\u0443\\u044d\\u0442 \\u0445\\u0443\\u043c\\u0443\\u0441\\u0430 \\u0438 \\u0441\\u0432\\u0435\\u0436\\u0438\\u0445 \\u043e\\u0432\\u043e\\u0449\\u0435\\u0439, \\u0430 \\u0433\\u0430\\u0441\\u0442\\u0440\\u043e\\u043d\\u043e\\u043c\\u0438\\u0447\\u0435\\u0441\\u043a\\u0438\\u0439 \\u043f\\u0438\\u043a \\u0432\\u0435\\u0447\\u0435\\u0440\\u0430 \\u043e\\u0431\\u0435\\u0441\\u043f\\u0435\\u0447\\u0438\\u0442 \\u0440\\u0443\\u043b\\u0435\\u0442 \\u0438\\u0437 \\u043f\\u0442\\u0438\\u0446\\u044b \\u0444\\u0430\\u0440\\u0448\\u0438\\u0440\\u043e\\u0432\\u0430\\u043d\\u043d\\u044b\\u0439 \\u0433\\u0440\\u0438\\u0431\\u043d\\u044b\\u043c\\u0438 \\u0434\\u044e\\u043a\\u0441\\u0438\\u043b\\u044f\\u043c\\u0438 \\u0441\\u0443-\\u0432\\u0438\\u0434 \\u0438 \\u0441\\u044b\\u0440\\u044b\\u043c\\u0438 \\u0441\\u043f\\u0430\\u0433\\u0435\\u0442\\u0442\\u0438 \\u0438\\u0437 \\u0446\\u0443\\u043a\\u0438\\u043d\\u0438 \\u043f\\u043e\\u0434 \\u0441\\u0440\\u0435\\u0434\\u0438\\u0437\\u0435\\u043c\\u043d\\u043e\\u043c\\u043e\\u0440\\u0441\\u043a\\u0438\\u043c \\u0441\\u043e\\u0443\\u0441\\u043e\\u043c\\u2026 \\u0418 \\u043a\\u043e\\u043d\\u0435\\u0447\\u043d\\u043e \\u0436\\u0435, \\u043d\\u0430\\u0448 \\u0432\\u0435\\u0447\\u0435\\u0440 \\u0431\\u0443\\u0434\\u0435\\u0442 \\u0441\\u043e\\u043f\\u0440\\u043e\\u0432\\u043e\\u0436\\u0434\\u0430\\u0442\\u044c\\u0441\\u044f \\u0432\\u0438\\u043d\\u0430\\u043c\\u0438 Ch\\u00e2teau de Talu, \\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0435 \\u043f\\u0440\\u0435\\u043a\\u0440\\u0430\\u0441\\u043d\\u043e \\u0434\\u043e\\u043f\\u043e\\u043b\\u043d\\u044f\\u0442 \\u0432\\u043a\\u0443\\u0441 \\u043a\\u0430\\u0436\\u0434\\u043e\\u0433\\u043e \\u0431\\u043b\\u044e\\u0434\\u0430!\",\n          \"\\u041c\\u043e\\u043b\\u043e\\u0434\\u043e\\u0439 \\u0445\\u0443\\u0434\\u043e\\u0436\\u043d\\u0438\\u043a \\u0438 \\u0432\\u044b\\u043f\\u0443\\u0441\\u043a\\u043d\\u0438\\u043a \\u043f\\u0435\\u0442\\u0435\\u0440\\u0431\\u0443\\u0440\\u0433\\u0441\\u043a\\u043e\\u0439 \\u0445\\u0443\\u0434\\u043e\\u0436\\u0435\\u0441\\u0442\\u0432\\u0435\\u043d\\u043d\\u043e\\u0439 \\u0430\\u043a\\u0430\\u0434\\u0435\\u043c\\u0438\\u0438 \\u0424\\u0438\\u043b\\u0438\\u043f\\u043f \\u041e\\u0440\\u043b\\u043e\\u0432 \\u0438\\u0437\\u043e\\u0431\\u0440\\u0430\\u0436\\u0430\\u0435\\u0442 \\u00ab\\u043d\\u0435\\u0438\\u0437\\u0432\\u0435\\u0441\\u0442\\u043d\\u043e\\u0433\\u043e \\u0433\\u0435\\u0440\\u043e\\u044f\\u00bb. \\u041b\\u0435\\u0439\\u0442\\u043c\\u043e\\u0442\\u0438\\u0432 \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442\\u0430 \\u2014 \\u0434\\u043e\\u0440\\u0435\\u0432\\u043e\\u043b\\u044e\\u0446\\u0438\\u043e\\u043d\\u043d\\u044b\\u0435 \\u043a\\u0440\\u0435\\u0441\\u0442\\u044c\\u044f\\u043d\\u0435, \\u0440\\u0430\\u0431\\u043e\\u0447\\u0438\\u0435 1920\\u201330-\\u0445 \\u0433\\u043e\\u0434\\u043e\\u0432 \\u0438 \\u043f\\u0440\\u0435\\u0434\\u0441\\u0442\\u0430\\u0432\\u0438\\u0442\\u0435\\u043b\\u0438 \\u0431\\u043e\\u043b\\u0435\\u0435 \\u0441\\u043e\\u0432\\u0440\\u0435\\u043c\\u0435\\u043d\\u043d\\u044b\\u0445 \\u0441\\u0443\\u0431\\u043a\\u0443\\u043b\\u044c\\u0442\\u0443\\u0440. \\u0424\\u0438\\u0448\\u043a\\u0430 \\u0435\\u0433\\u043e \\u0436\\u0438\\u0432\\u043e\\u043f\\u0438\\u0441\\u043d\\u044b\\u0445 \\u0445\\u043e\\u043b\\u0441\\u0442\\u043e\\u0432 \\u2014 \\u044d\\u043a\\u0441\\u043f\\u0440\\u0435\\u0441\\u0441\\u0438\\u0432\\u043d\\u043e\\u0441\\u0442\\u044c, \\u043f\\u043e\\u0432\\u044b\\u0448\\u0435\\u043d\\u043d\\u0430\\u044f \\u044d\\u043c\\u043e\\u0446\\u0438\\u043e\\u043d\\u0430\\u043b\\u044c\\u043d\\u043e\\u0441\\u0442\\u044c \\u0438 \\u0433\\u0438\\u043f\\u0435\\u0440\\u0442\\u0440\\u043e\\u0444\\u0438\\u0440\\u043e\\u0432\\u0430\\u043d\\u043d\\u044b\\u0435 \\u0444\\u0438\\u0433\\u0443\\u0440\\u044b.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"\\u0414\\u0430\\u0442\\u044b: -\",\n          \"\\u0414\\u0430\\u0442\\u044b: 24 \\u0430\\u043f\\u0440\\u0435\\u043b\\u044f \\u0432 20:00\",\n          \"\\u0414\\u0430\\u0442\\u044b: \\u043f\\u043e 12 \\u043c\\u0430\\u044f.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"loc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u043c \\u0422\\u0432\\u0435\\u0440\\u0441\\u043a\\u0430\\u044f\",\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041c\\u0438\\u043b\\u044e\\u0442\\u0438\\u043d\\u0441\\u043a\\u0438\\u0439 \\u043f\\u0435\\u0440\\u0435\\u0443\\u043b\\u043e\\u043a 10 \\u0441\\u0442\\u0440 1, \\u043f\\u043e\\u0434\\u044a\\u0435\\u0437\\u0434 1, \\u044d\\u0442\\u0430\\u0436 3\",\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041c\\u043e\\u0441\\u043a\\u0432\\u0430, \\u0431\\u0443\\u043b\\u044c\\u0432\\u0430\\u0440 \\u0413\\u043e\\u0433\\u043e\\u043b\\u0435\\u0432\\u0441\\u043a\\u0438\\u0439, 10/2. \\u041c\\u041c\\u041e\\u041c\\u0410. (\\u0433\\u043e\\u0440\\u043e\\u0434)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: 1200 \\u0440 \\u043d\\u0430 \\u043a\\u043e\\u043c\\u043f\\u0430\\u043d\\u0438\\u044e\",\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c:\\u00a0 3900 \\u0440\\u0443\\u0431\",\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: 0-350 \\u20bd. \\u0411\\u0438\\u043b\\u0435\\u0442\\u044b \\u043f\\u043e \\u0441\\u0441\\u044b\\u043b\\u043a\\u0435.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"link\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: https://t.me/radio_local/302\",\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: \\u041f\\u043e\\u0434\\u0440\\u043e\\u0431\\u043d\\u0435\\u0435\",\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: \\u0441\\u0441\\u044b\\u043b\\u043a\\u0430\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 241
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print('GOODGATHER TOP-5')\n",
        "display(\n",
        "    event_data[event_data['id'].isin(top_n_group_recommendations[:5])]\n",
        "    .set_index('id')\n",
        "    .reindex(top_n_group_recommendations[:5])\n",
        "    .reset_index()\n",
        ")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 432
        },
        "id": "0i05812P13xB",
        "outputId": "dee66cdd-0b51-4a52-e211-5371dc867cc7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "GOODGATHER TOP-5\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "    id                cat_1                                cat_2  \\\n",
              "0  128  Погулять, Экскурсия  Уличная, Природа, Животные, История   \n",
              "1  108             Выставка    Фотография, Современное Искусство   \n",
              "2  104             Погулять                    Природа, Растения   \n",
              "3  105             Выставка                     Фотография, Мода   \n",
              "4   21   Выставка, Погулять                    Растения, Природа   \n",
              "\n",
              "                                                name  \\\n",
              "0  Экотропы. «Природа Алешкинского леса» в Тушинс...   \n",
              "1                        О всех вещах, там обитающих   \n",
              "2               6 мест в Москве, где зацветёт сакура   \n",
              "3  Коллекция Фонда Still Art. Шедевры мировой фот...   \n",
              "4  Тюльпаны и другие весенние цветы распустились ...   \n",
              "\n",
              "                                                desc                     date  \\\n",
              "0  Экскурсия пройдет в Алешкинском лесу на террит...                  Даты: -   \n",
              "1  Выставка соберёт более 50 работ впервые показа...          Даты: до 26 мая   \n",
              "2  Сакура зацветет уже в мае! Её цветение продлит...         Даты: 1 - 31 мая   \n",
              "3  Мультимедиа Арт Музей, Москва представляет выс...         Даты: до 15 июля   \n",
              "4  С 19 марта в Субтропической оранжерее Ботаниче...  Даты: 19 марта - 15 мая   \n",
              "\n",
              "                                                 loc  \\\n",
              "0              Место:  55.864036, 37.418725 (дальше)   \n",
              "1  Место: Stella Art Foundation, 1-й Красногварде...   \n",
              "2  Место: Москва, Дольская улица, 1с4, Москва (да...   \n",
              "3    Место: Москва, ул. Остоженка, 16. МАММ. (город)   \n",
              "4         Место: Москва, Проспект Мира, 26/1 (город)   \n",
              "\n",
              "                                               price               link  \n",
              "0                               Стоимость: бесплатно     Ссылка: ссылка  \n",
              "1                               Стоимость: бесплатно     Ссылка: ссылка  \n",
              "2                               Стоимость: бесплатно          Ссылка: -  \n",
              "3                               Стоимость:  от 300 р    Ссылка:  ссылка  \n",
              "4  Стоимость:  от 200 рублей, дети до 7 лет и мно...  Ссылка: Подробнее  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6895d531-d1de-4ddd-a38e-1a128f811f58\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>cat_1</th>\n",
              "      <th>cat_2</th>\n",
              "      <th>name</th>\n",
              "      <th>desc</th>\n",
              "      <th>date</th>\n",
              "      <th>loc</th>\n",
              "      <th>price</th>\n",
              "      <th>link</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>128</td>\n",
              "      <td>Погулять, Экскурсия</td>\n",
              "      <td>Уличная, Природа, Животные, История</td>\n",
              "      <td>Экотропы. «Природа Алешкинского леса» в Тушинс...</td>\n",
              "      <td>Экскурсия пройдет в Алешкинском лесу на террит...</td>\n",
              "      <td>Даты: -</td>\n",
              "      <td>Место:  55.864036, 37.418725 (дальше)</td>\n",
              "      <td>Стоимость: бесплатно</td>\n",
              "      <td>Ссылка: ссылка</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>108</td>\n",
              "      <td>Выставка</td>\n",
              "      <td>Фотография, Современное Искусство</td>\n",
              "      <td>О всех вещах, там обитающих</td>\n",
              "      <td>Выставка соберёт более 50 работ впервые показа...</td>\n",
              "      <td>Даты: до 26 мая</td>\n",
              "      <td>Место: Stella Art Foundation, 1-й Красногварде...</td>\n",
              "      <td>Стоимость: бесплатно</td>\n",
              "      <td>Ссылка: ссылка</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>104</td>\n",
              "      <td>Погулять</td>\n",
              "      <td>Природа, Растения</td>\n",
              "      <td>6 мест в Москве, где зацветёт сакура</td>\n",
              "      <td>Сакура зацветет уже в мае! Её цветение продлит...</td>\n",
              "      <td>Даты: 1 - 31 мая</td>\n",
              "      <td>Место: Москва, Дольская улица, 1с4, Москва (да...</td>\n",
              "      <td>Стоимость: бесплатно</td>\n",
              "      <td>Ссылка: -</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>105</td>\n",
              "      <td>Выставка</td>\n",
              "      <td>Фотография, Мода</td>\n",
              "      <td>Коллекция Фонда Still Art. Шедевры мировой фот...</td>\n",
              "      <td>Мультимедиа Арт Музей, Москва представляет выс...</td>\n",
              "      <td>Даты: до 15 июля</td>\n",
              "      <td>Место: Москва, ул. Остоженка, 16. МАММ. (город)</td>\n",
              "      <td>Стоимость:  от 300 р</td>\n",
              "      <td>Ссылка:  ссылка</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>21</td>\n",
              "      <td>Выставка, Погулять</td>\n",
              "      <td>Растения, Природа</td>\n",
              "      <td>Тюльпаны и другие весенние цветы распустились ...</td>\n",
              "      <td>С 19 марта в Субтропической оранжерее Ботаниче...</td>\n",
              "      <td>Даты: 19 марта - 15 мая</td>\n",
              "      <td>Место: Москва, Проспект Мира, 26/1 (город)</td>\n",
              "      <td>Стоимость:  от 200 рублей, дети до 7 лет и мно...</td>\n",
              "      <td>Ссылка: Подробнее</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6895d531-d1de-4ddd-a38e-1a128f811f58')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-6895d531-d1de-4ddd-a38e-1a128f811f58 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-6895d531-d1de-4ddd-a38e-1a128f811f58');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-5e87678c-da32-498e-bdcb-847a5af2a4de\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5e87678c-da32-498e-bdcb-847a5af2a4de')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-5e87678c-da32-498e-bdcb-847a5af2a4de button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \")\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"108\",\n          \"21\",\n          \"104\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"\\u0412\\u044b\\u0441\\u0442\\u0430\\u0432\\u043a\\u0430\",\n          \"\\u0412\\u044b\\u0441\\u0442\\u0430\\u0432\\u043a\\u0430, \\u041f\\u043e\\u0433\\u0443\\u043b\\u044f\\u0442\\u044c\",\n          \"\\u041f\\u043e\\u0433\\u0443\\u043b\\u044f\\u0442\\u044c, \\u042d\\u043a\\u0441\\u043a\\u0443\\u0440\\u0441\\u0438\\u044f\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"\\u0424\\u043e\\u0442\\u043e\\u0433\\u0440\\u0430\\u0444\\u0438\\u044f, \\u0421\\u043e\\u0432\\u0440\\u0435\\u043c\\u0435\\u043d\\u043d\\u043e\\u0435 \\u0418\\u0441\\u043a\\u0443\\u0441\\u0441\\u0442\\u0432\\u043e\",\n          \"\\u0420\\u0430\\u0441\\u0442\\u0435\\u043d\\u0438\\u044f, \\u041f\\u0440\\u0438\\u0440\\u043e\\u0434\\u0430\",\n          \"\\u041f\\u0440\\u0438\\u0440\\u043e\\u0434\\u0430, \\u0420\\u0430\\u0441\\u0442\\u0435\\u043d\\u0438\\u044f\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"\\u041e \\u0432\\u0441\\u0435\\u0445 \\u0432\\u0435\\u0449\\u0430\\u0445, \\u0442\\u0430\\u043c \\u043e\\u0431\\u0438\\u0442\\u0430\\u044e\\u0449\\u0438\\u0445\",\n          \"\\u0422\\u044e\\u043b\\u044c\\u043f\\u0430\\u043d\\u044b \\u0438 \\u0434\\u0440\\u0443\\u0433\\u0438\\u0435 \\u0432\\u0435\\u0441\\u0435\\u043d\\u043d\\u0438\\u0435 \\u0446\\u0432\\u0435\\u0442\\u044b \\u0440\\u0430\\u0441\\u043f\\u0443\\u0441\\u0442\\u0438\\u043b\\u0438\\u0441\\u044c \\u0432 \\u0410\\u043f\\u0442\\u0435\\u043a\\u0430\\u0440\\u0441\\u043a\\u043e\\u043c \\u043e\\u0433\\u043e\\u0440\\u043e\\u0434\\u0435\",\n          \"6 \\u043c\\u0435\\u0441\\u0442 \\u0432 \\u041c\\u043e\\u0441\\u043a\\u0432\\u0435, \\u0433\\u0434\\u0435 \\u0437\\u0430\\u0446\\u0432\\u0435\\u0442\\u0451\\u0442 \\u0441\\u0430\\u043a\\u0443\\u0440\\u0430\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"desc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"\\u0412\\u044b\\u0441\\u0442\\u0430\\u0432\\u043a\\u0430 \\u0441\\u043e\\u0431\\u0435\\u0440\\u0451\\u0442 \\u0431\\u043e\\u043b\\u0435\\u0435 50 \\u0440\\u0430\\u0431\\u043e\\u0442 \\u0432\\u043f\\u0435\\u0440\\u0432\\u044b\\u0435 \\u043f\\u043e\\u043a\\u0430\\u0437\\u0430\\u043d\\u043d\\u044b\\u0445 \\u043f\\u0443\\u0431\\u043b\\u0438\\u0447\\u043d\\u043e. \\u042d\\u043a\\u0441\\u043f\\u043e\\u0437\\u0438\\u0446\\u0438\\u044f \\u0432\\u043a\\u043b\\u044e\\u0447\\u0430\\u0435\\u0442 \\u0440\\u0430\\u0431\\u043e\\u0442\\u044b \\u0438\\u0437 \\u0444\\u043e\\u0442\\u043e\\u0433\\u0440\\u0430\\u0444\\u0438\\u0447\\u0435\\u0441\\u043a\\u043e\\u0439 \\u0441\\u0435\\u0440\\u0438\\u0438 \\u00ab\\u0418 \\u044d\\u0442\\u043e \\u0442\\u043e\\u0436\\u0435 \\u043f\\u0440\\u043e\\u0439\\u0434\\u0435\\u0442\\u00bb \\u0415\\u0432\\u0433\\u0435\\u043d\\u0438\\u0438 \\u0421\\u043e\\u043b\\u043e\\u043c\\u0430\\u0442\\u0438\\u043d\\u043e\\u0439, \\u043c\\u0435\\u0434\\u0438\\u0442\\u0430\\u0442\\u0438\\u0432\\u043d\\u043e-\\u0441\\u0442\\u0430\\u0442\\u0438\\u0447\\u043d\\u044b\\u0435 \\u0432\\u0438\\u0434\\u0435\\u043e \\u0410\\u043b\\u0435\\u043a\\u0441\\u0430\\u043d\\u0434\\u0440\\u044b \\u041c\\u0438\\u0442\\u043b\\u044f\\u043d\\u0441\\u043a\\u043e\\u0439 \\u0438 \\u043d\\u043e\\u0432\\u0443\\u044e \\u0441\\u0435\\u0440\\u0438\\u044e \\u043f\\u0440\\u043e\\u0438\\u0437\\u0432\\u0435\\u0434\\u0435\\u043d\\u0438\\u0439 \\u041d\\u0438\\u043d\\u044b \\u041a\\u043e\\u0442\\u0451\\u043b. \\u041e\\u0431\\u044a\\u0435\\u043a\\u0442\\u0438\\u0432 \\u043a\\u0430\\u043c\\u0435\\u0440\\u044b \\u0415\\u0432\\u0433\\u0435\\u043d\\u0438\\u0438 \\u0421\\u043e\\u043b\\u043e\\u043c\\u0430\\u0442\\u0438\\u043d\\u043e\\u0439 \\u043d\\u0430\\u043f\\u0440\\u0430\\u0432\\u043b\\u0435\\u043d \\u043d\\u0435\\u0441\\u043a\\u043e\\u043b\\u044c\\u043a\\u043e \\u0432 \\u0441\\u0442\\u043e\\u0440\\u043e\\u043d\\u0443 \\u0438 \\u043f\\u043e \\u043a\\u0430\\u0441\\u0430\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e\\u0439 \\u043f\\u043e \\u043e\\u0442\\u043d\\u043e\\u0448\\u0435\\u043d\\u0438\\u044e \\u043a \\u043e\\u0431\\u044a\\u0435\\u043a\\u0442\\u0443 \\u0444\\u043e\\u0442\\u043e\\u0433\\u0440\\u0430\\u0444\\u0438\\u0447\\u0435\\u0441\\u043a\\u043e\\u0433\\u043e \\u0438\\u043d\\u0442\\u0435\\u0440\\u0435\\u0441\\u0430. \\u0424\\u043e\\u0442\\u043e\\u0433\\u0440\\u0430\\u0444\\u0438\\u0438 \\u0445\\u0443\\u0434\\u043e\\u0436\\u043d\\u0438\\u0446\\u044b \\u043d\\u0430\\u043f\\u043e\\u043c\\u0438\\u043d\\u0430\\u044e\\u0442 \\u0441\\u0442\\u043e\\u043f-\\u043a\\u0430\\u0434\\u0440\\u044b \\u043a\\u0438\\u043d\\u043e\\u0444\\u0438\\u043b\\u044c\\u043c\\u0430, \\u0437\\u0430\\u0441\\u0442\\u044b\\u0432\\u0448\\u0438\\u0435 \\u0432 \\u043c\\u043e\\u043c\\u0435\\u043d\\u0442 \\u0441\\u043c\\u0435\\u043d\\u044b \\u043f\\u043b\\u0430\\u043d\\u043e\\u0432. \\u041e\\u043d\\u0438 \\u0431\\u043e\\u043b\\u044c\\u0448\\u0435 \\u0444\\u043e\\u043a\\u0443\\u0441\\u0438\\u0440\\u0443\\u044e\\u0442\\u0441\\u044f \\u043d\\u0430 \\u043f\\u0443\\u0441\\u0442\\u043e\\u0442\\u0435 \\u043c\\u0435\\u0436\\u0434\\u0443 \\u043e\\u0431\\u044a\\u0435\\u043a\\u0442\\u0430\\u043c\\u0438, \\u0447\\u0435\\u043c \\u043d\\u0430 \\u043a\\u043e\\u043d\\u043a\\u0440\\u0435\\u0442\\u043d\\u044b\\u0445 \\u043f\\u0440\\u0435\\u0434\\u043c\\u0435\\u0442\\u0430\\u0445. \\u041e\\u0442\\u0440\\u0430\\u0436\\u0435\\u043d\\u0438\\u0435 \\u0441\\u0432\\u0435\\u0442\\u0430 \\u043d\\u0430 \\u0441\\u0442\\u0435\\u043d\\u0435 \\u0432 \\u043d\\u043e\\u043c\\u0435\\u0440\\u0435 \\u043e\\u0442\\u0435\\u043b\\u044f, \\u0441\\u043b\\u0443\\u0447\\u0430\\u0439\\u043d\\u044b\\u0439 \\u0432\\u0437\\u0433\\u043b\\u044f\\u0434 \\u043d\\u0430 \\u0445\\u0440\\u0443\\u043f\\u043a\\u0443\\u044e \\u043a\\u043b\\u044e\\u0447\\u0438\\u0446\\u0443, \\u0449\\u0435\\u043b\\u044c \\u043c\\u0435\\u0436\\u0434\\u0443 \\u0448\\u0442\\u043e\\u0440\\u043e\\u0439 \\u0438 \\u043f\\u043e\\u0434\\u043e\\u043a\\u043e\\u043d\\u043d\\u0438\\u043a\\u043e\\u043c, \\u0431\\u0443\\u0440\\u043b\\u044f\\u0449\\u0430\\u044f \\u0440\\u044f\\u0431\\u044c \\u0432\\u043e\\u0434\\u044b \\u2014 \\u044d\\u0442\\u0438 \\u043c\\u0438\\u043c\\u043e\\u043b\\u0435\\u0442\\u043d\\u044b\\u0435, \\u043f\\u043e\\u0434\\u0432\\u0438\\u0436\\u043d\\u044b\\u0435, \\u0444\\u0440\\u0430\\u0433\\u043c\\u0435\\u043d\\u0442\\u0430\\u0440\\u043d\\u044b\\u0435 \\u043e\\u0431\\u0440\\u0430\\u0437\\u044b \\u043f\\u043e\\u0434\\u0434\\u0435\\u0440\\u0436\\u0438\\u0432\\u0430\\u044e\\u0442 \\u0446\\u0435\\u043b\\u043e\\u0441\\u0442\\u043d\\u043e\\u0441\\u0442\\u044c \\u043d\\u0430\\u0448\\u0435\\u0433\\u043e \\u043e\\u043f\\u044b\\u0442\\u0430 \\u043f\\u0440\\u043e\\u0436\\u0438\\u0432\\u0430\\u043d\\u0438\\u044f \\u043f\\u043e\\u0432\\u0441\\u0435\\u0434\\u043d\\u0435\\u0432\\u043d\\u043e\\u0441\\u0442\\u0438.\",\n          \"\\u0421 19 \\u043c\\u0430\\u0440\\u0442\\u0430 \\u0432 \\u0421\\u0443\\u0431\\u0442\\u0440\\u043e\\u043f\\u0438\\u0447\\u0435\\u0441\\u043a\\u043e\\u0439 \\u043e\\u0440\\u0430\\u043d\\u0436\\u0435\\u0440\\u0435\\u0435 \\u0411\\u043e\\u0442\\u0430\\u043d\\u0438\\u0447\\u0435\\u0441\\u043a\\u043e\\u0433\\u043e \\u0441\\u0430\\u0434\\u0430 \\u041c\\u0413\\u0423 \\u00ab\\u0410\\u043f\\u0442\\u0435\\u043a\\u0430\\u0440\\u0441\\u043a\\u0438\\u0439 \\u043e\\u0433\\u043e\\u0440\\u043e\\u0434\\u00bb \\u043f\\u043e\\u0441\\u0435\\u0442\\u0438\\u0442\\u0435\\u043b\\u0438 \\u043c\\u043e\\u0433\\u0443\\u0442 \\u0443\\u0432\\u0438\\u0434\\u0435\\u0442\\u044c \\u0442\\u044e\\u043b\\u044c\\u043f\\u0430\\u043d\\u044b, \\u043d\\u0430\\u0440\\u0446\\u0438\\u0441\\u0441\\u044b, \\u0433\\u0438\\u0430\\u0446\\u0438\\u043d\\u0442\\u044b, \\u043a\\u0440\\u043e\\u043a\\u0443\\u0441\\u044b \\u0438 \\u0434\\u0440\\u0443\\u0433\\u0438\\u0435 \\u0440\\u0430\\u0441\\u0442\\u0435\\u043d\\u0438\\u044f, \\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0435 \\u0440\\u0430\\u043d\\u0435\\u0435 \\u0431\\u044b\\u043b\\u0438 \\u043f\\u0440\\u0435\\u0434\\u0441\\u0442\\u0430\\u0432\\u043b\\u0435\\u043d\\u044b \\u043d\\u0430 \\u0432\\u044b\\u0441\\u0442\\u0430\\u0432\\u043a\\u0435 \\u00ab\\u0420\\u0435\\u043f\\u0435\\u0442\\u0438\\u0446\\u0438\\u044f \\u0432\\u0435\\u0441\\u043d\\u044b\\u00bb. \\u042d\\u0442\\u043e \\u043e\\u0442\\u043b\\u0438\\u0447\\u043d\\u044b\\u0439 \\u0448\\u0430\\u043d\\u0441 \\u043f\\u043e\\u043b\\u044e\\u0431\\u043e\\u0432\\u0430\\u0442\\u044c\\u0441\\u044f \\u0432\\u0435\\u0441\\u0435\\u043d\\u043d\\u0438\\u043c\\u0438 \\u0446\\u0432\\u0435\\u0442\\u0430\\u043c\\u0438 \\u0441\\u0440\\u0435\\u0434\\u0438 \\u044d\\u043a\\u0437\\u043e\\u0442\\u0438\\u0447\\u0435\\u0441\\u043a\\u0438\\u0445 \\u0440\\u0430\\u0441\\u0442\\u0435\\u043d\\u0438\\u0439, \\u043d\\u0430\\u0441\\u043b\\u0430\\u0434\\u0438\\u0442\\u044c\\u0441\\u044f \\u043f\\u043e\\u0442\\u0440\\u044f\\u0441\\u0430\\u044e\\u0449\\u0438\\u043c\\u0438 \\u0430\\u0440\\u043e\\u043c\\u0430\\u0442\\u0430\\u043c\\u0438 \\u0438 \\u043f\\u043e\\u043b\\u0443\\u0447\\u0438\\u0442\\u044c \\u043c\\u043e\\u0440\\u0435 \\u0443\\u0434\\u043e\\u0432\\u043e\\u043b\\u044c\\u0441\\u0442\\u0432\\u0438\\u044f. \\u0422\\u0430\\u043a\\u0436\\u0435 \\u0432 \\u0421\\u0443\\u0431\\u0442\\u0440\\u043e\\u043f\\u0438\\u0447\\u0435\\u0441\\u043a\\u043e\\u0439 \\u043e\\u0440\\u0430\\u043d\\u0436\\u0435\\u0440\\u0435\\u0435 \\u0441\\u0435\\u0439\\u0447\\u0430\\u0441 \\u0446\\u0432\\u0435\\u0442\\u0443\\u0442 \\u043e\\u0440\\u0445\\u0438\\u0434\\u0435\\u0438, \\u0430\\u0437\\u0430\\u043b\\u0438\\u0438, \\u043a\\u043b\\u0438\\u0432\\u0438\\u0438 \\u0438 \\u0444\\u0430\\u043d\\u0442\\u0430\\u0441\\u0442\\u0438\\u0447\\u0435\\u0441\\u043a\\u0438 \\u0430\\u0440\\u043e\\u043c\\u0430\\u0442\\u043d\\u043e\\u0435 \\u043f\\u043e\\u043c\\u0435\\u043b\\u043e.\",\n          \"\\u0421\\u0430\\u043a\\u0443\\u0440\\u0430 \\u0437\\u0430\\u0446\\u0432\\u0435\\u0442\\u0435\\u0442 \\u0443\\u0436\\u0435 \\u0432 \\u043c\\u0430\\u0435! \\u0415\\u0451 \\u0446\\u0432\\u0435\\u0442\\u0435\\u043d\\u0438\\u0435 \\u043f\\u0440\\u043e\\u0434\\u043b\\u0438\\u0442\\u0441\\u044f \\u0432\\u0441\\u0435\\u0433\\u043e \\u043d\\u0435\\u0441\\u043a\\u043e\\u043b\\u044c\\u043a\\u043e \\u0434\\u043d\\u0435\\u0439, \\u0430 \\u043f\\u043e\\u0441\\u043b\\u0435 \\u0441\\u0440\\u0430\\u0437\\u0443 \\u0440\\u0430\\u0441\\u0446\\u0432\\u0435\\u0442\\u0435\\u0442 \\u0441\\u0438\\u0440\\u0435\\u043d\\u044c. \\u0421\\u043e\\u0431\\u0440\\u0430\\u043b\\u0438 \\u0434\\u043b\\u044f \\u0432\\u0430\\u0441 \\u043f\\u043e\\u0434\\u0431\\u043e\\u0440\\u043a\\u0443 \\u043c\\u0435\\u0441\\u0442, \\u0433\\u0434\\u0435 \\u043c\\u043e\\u0436\\u043d\\u043e \\u0431\\u0443\\u0434\\u0435\\u0442 \\u043f\\u043e\\u043b\\u044e\\u0431\\u043e\\u0432\\u0430\\u0442\\u044c\\u0441\\u044f \\u0440\\u043e\\u0437\\u043e\\u0432\\u044b\\u043c\\u0438 \\u0434\\u0435\\u0440\\u0435\\u0432\\u044c\\u044f\\u043c\\u0438. \\u0410\\u043f\\u0442\\u0435\\u043a\\u0430\\u0440\\u0441\\u043a\\u0438\\u0439 \\u043e\\u0433\\u043e\\u0440\\u043e\\u0434 \\u041c\\u0413\\u0423, \\u0413\\u043b\\u0430\\u0432\\u043d\\u044b\\u0439 \\u0431\\u043e\\u0442\\u0430\\u043d\\u0438\\u0447\\u0435\\u0441\\u043a\\u0438\\u0439 \\u0441\\u0430\\u0434 \\u0438\\u043c\\u0435\\u043d\\u0438 \\u041d.\\u0412. \\u0426\\u0438\\u0446\\u0438\\u043d\\u0430, \\u0410\\u043b\\u043b\\u0435\\u044f \\u0432\\u043e\\u0437\\u043b\\u0435 \\u0413\\u043b\\u0430\\u0432\\u043d\\u043e\\u0433\\u043e \\u0437\\u0434\\u0430\\u043d\\u0438\\u044f \\u041c\\u0413\\u0423, \\u0411\\u0438\\u0440\\u044e\\u043b\\u0435\\u0432\\u0441\\u043a\\u0438\\u0439 \\u0434\\u0435\\u043d\\u0434\\u0440\\u043e\\u043f\\u0430\\u0440\\u043a, \\u0415\\u043a\\u0430\\u0442\\u0435\\u0440\\u0438\\u043d\\u0438\\u043d\\u0441\\u043a\\u0438\\u0439 \\u043f\\u0430\\u0440\\u043a, \\u041f\\u0430\\u0440\\u043a \\u00ab\\u0426\\u0430\\u0440\\u0438\\u0446\\u044b\\u043d\\u043e\\u00bb\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"\\u0414\\u0430\\u0442\\u044b: \\u0434\\u043e 26 \\u043c\\u0430\\u044f\",\n          \"\\u0414\\u0430\\u0442\\u044b: 19 \\u043c\\u0430\\u0440\\u0442\\u0430 - 15 \\u043c\\u0430\\u044f\",\n          \"\\u0414\\u0430\\u0442\\u044b: 1 - 31 \\u043c\\u0430\\u044f\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"loc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: Stella Art Foundation, 1-\\u0439 \\u041a\\u0440\\u0430\\u0441\\u043d\\u043e\\u0433\\u0432\\u0430\\u0440\\u0434\\u0435\\u0439\\u0441\\u043a\\u0438\\u0439 \\u043f\\u0440., 15, \\u00ab\\u041c\\u043e\\u0441\\u043a\\u0432\\u0430-\\u0421\\u0438\\u0442\\u0438\\u00bb, \\u0431\\u0430\\u0448\\u043d\\u044f \\u00ab\\u041c\\u0435\\u0440\\u043a\\u0443\\u0440\\u0438\\u0439\\u00bb, 2 \\u044d\\u0442\\u0430\\u0436\",\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041c\\u043e\\u0441\\u043a\\u0432\\u0430, \\u041f\\u0440\\u043e\\u0441\\u043f\\u0435\\u043a\\u0442 \\u041c\\u0438\\u0440\\u0430, 26/1 (\\u0433\\u043e\\u0440\\u043e\\u0434)\",\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041c\\u043e\\u0441\\u043a\\u0432\\u0430, \\u0414\\u043e\\u043b\\u044c\\u0441\\u043a\\u0430\\u044f \\u0443\\u043b\\u0438\\u0446\\u0430, 1\\u04414, \\u041c\\u043e\\u0441\\u043a\\u0432\\u0430 (\\u0434\\u0430\\u043b\\u044c\\u0448\\u0435)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: \\u0431\\u0435\\u0441\\u043f\\u043b\\u0430\\u0442\\u043d\\u043e\",\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c:\\u00a0 \\u043e\\u0442 300 \\u0440\",\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c:\\u00a0 \\u043e\\u0442 200 \\u0440\\u0443\\u0431\\u043b\\u0435\\u0439, \\u0434\\u0435\\u0442\\u0438 \\u0434\\u043e 7 \\u043b\\u0435\\u0442 \\u0438 \\u043c\\u043d\\u043e\\u0433\\u043e\\u0434\\u0435\\u0442\\u043d\\u044b\\u0435 \\u0441\\u0435\\u043c\\u044c\\u0438 \\u2013 \\u0431\\u0435\\u0441\\u043f\\u043b\\u0430\\u0442\\u043d\\u043e\\u00a0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"link\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: -\",\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: \\u041f\\u043e\\u0434\\u0440\\u043e\\u0431\\u043d\\u0435\\u0435\",\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: \\u0441\\u0441\\u044b\\u043b\\u043a\\u0430\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "top5_ids = event_data[event_data['id'].isin(top_n_group_recommendations[:5])]\\\n",
        "    .set_index('id')\\\n",
        "    .reindex(top_n_group_recommendations[:5])\\\n",
        "    .reset_index()['id'].values.tolist()\n",
        "top5_ids"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bsrN9oJZpEsx",
        "outputId": "de908df6-533f-4758-9714-01fe22e7bd16"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['129', '3', '109', '108', '30']"
            ]
          },
          "metadata": {},
          "execution_count": 107
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "random.seed(1098)\n",
        "random_ids = event_data[\n",
        "    event_data.id.isin(random.choices(CHOOSE_FROM[~CHOOSE_FROM.item_id.isin(top_n_group_recommendations)].item_id.values, k=16))\n",
        "]['id'].values.tolist()\n",
        "random_ids"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "c0kHdmm2o1qP",
        "outputId": "accfdd14-1720-45d5-8720-020d856a7811"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['20',\n",
              " '25',\n",
              " '35',\n",
              " '40',\n",
              " '44',\n",
              " '75',\n",
              " '88',\n",
              " '99',\n",
              " '115',\n",
              " '138',\n",
              " '147',\n",
              " '166',\n",
              " '188',\n",
              " '189',\n",
              " '202']"
            ]
          },
          "metadata": {},
          "execution_count": 109
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "for_group = random_ids + top5_ids\n",
        "random.shuffle(for_group)\n",
        "for_group"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7FA1LU63o1k7",
        "outputId": "c085aa28-bc7d-4adc-a9fd-0c7d513516c5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['35',\n",
              " '166',\n",
              " '44',\n",
              " '129',\n",
              " '3',\n",
              " '75',\n",
              " '109',\n",
              " '88',\n",
              " '25',\n",
              " '40',\n",
              " '202',\n",
              " '189',\n",
              " '20',\n",
              " '108',\n",
              " '115',\n",
              " '147',\n",
              " '99',\n",
              " '30',\n",
              " '138',\n",
              " '188']"
            ]
          },
          "metadata": {},
          "execution_count": 110
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "event_data[event_data['id'].isin(for_group)]\\\n",
        "    .set_index('id')\\\n",
        "    .reindex(for_group)\\\n",
        "    .reset_index()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "FO9UMzMopmUo",
        "outputId": "20d15cee-ccbc-45a4-9340-5c0466a43aed"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     id                cat_1                                cat_2  \\\n",
              "0    35            Кинопоказ                Классика, Мультфильмы   \n",
              "1   166               Лекция                           Кино, Мода   \n",
              "2    44                 Игры        Развлечения, История, Уличная   \n",
              "3   129  Погулять, Экскурсия  Уличная, Природа, Животные, История   \n",
              "4     3             Выставка                  Фотография, История   \n",
              "5    75            Экскурсия                  Уличная, Литература   \n",
              "6   109             Выставка            Фотография, Мода, История   \n",
              "7    88           Перформанс                  Еда, Кино, Классика   \n",
              "8    25             Выставка                    Живопись, История   \n",
              "9    40            Кинопоказ            Классика, Образовательное   \n",
              "10  202            Спектакль         Танцы, Современное Искусство   \n",
              "11  189                 Игры         История, Литература, Уличная   \n",
              "12   20           Перформанс            История, Культуры, Музыка   \n",
              "13  108             Выставка    Фотография, Современное Искусство   \n",
              "14  115            Спектакль                             Классика   \n",
              "15  147              Тусовка                        Танцы, Музыка   \n",
              "16   99              Концерт                                Песни   \n",
              "17   30       Маркет, Лекция                Образовательное, Мода   \n",
              "18  138              Тусовка                        Танцы, Музыка   \n",
              "19  188                 Игры        История, Архитектура, Уличная   \n",
              "\n",
              "                                                 name  \\\n",
              "0                  Кинопоказ фильма «Мальчик и птица»   \n",
              "1   Нескромное обаяние женственности: 1950-е в мод...   \n",
              "2               Культурно-исторический квест HSE RUN    \n",
              "3   Экотропы. «Захарьинская пойма» в заказнике «До...   \n",
              "4     Алфавит. Советская фотография 1920-1930-х годов   \n",
              "5                    Булгаковская Москва — какая она?   \n",
              "6     Модницы XIX — начала ХХ века. Из коллекции МАММ   \n",
              "7    Гастрономический мюзикл «Москва слезам не верит»   \n",
              "8                    Выставка посвященная группе «13»   \n",
              "9       Показ и обсуждение фильма \"Большой Лебовски\"    \n",
              "10               Абсурдистский танцевальный спектакль   \n",
              "11                            ЛЮБОВНЫЕ ИСТОРИИ МОСКВЫ   \n",
              "12  Назад в прошлое: встретить праздники с национа...   \n",
              "13                        О всех вещах, там обитающих   \n",
              "14                         Спектакль «Собачье сердце»   \n",
              "15                             NU: HARD HIGHTS в RNDM   \n",
              "16         Бесплатный концерт Мота и группы «Земляне»   \n",
              "17  Винтаж в особняке Леман: на выходных на Патриа...   \n",
              "18                  Дебютная вечеринка команды R-99.    \n",
              "19                                        КОЛОМЕНСКОЕ   \n",
              "\n",
              "                                                 desc  \\\n",
              "0   Показ от Киноклуба Дом Динамо и его кураторов ...   \n",
              "1   Десятилетие расцвета парижской высокой моды и ...   \n",
              "2   Увлекательные загадки, интересные места столиц...   \n",
              "3   Ландшафтный заказник «Долина реки Сходни в Кур...   \n",
              "4   Фундаментальное исследование одного из ярчайши...   \n",
              "5   Мистическая и романтичная! Убедиться в этом мо...   \n",
              "6   Мультимедиа Арт Музей, Москва представляет выс...   \n",
              "7   Это совершенно новый для России формат театрал...   \n",
              "8   Выставка под названием «13. В переулках эпохи»...   \n",
              "9   В кофейне «Ностальгия» на Соколе сперва пройде...   \n",
              "10  Танцевальный спектакль преподавателя Gogol Sch...   \n",
              "11  Зачем нужен был фиктивный брак девушке, влюблё...   \n",
              "12  «ХОРОВОД», организованный DU - UNDERGROUND SHO...   \n",
              "13  Выставка соберёт более 50 работ впервые показа...   \n",
              "14  Актерский состав: Дмитрий Белоцерковский, Свят...   \n",
              "15  Вечеринка тяжелой скоростной электроники и хар...   \n",
              "16  На сцене выступят известные артисты: МОТ и Гру...   \n",
              "17  Особняк Леман превратится в рай для любителей ...   \n",
              "18  Она откроет серию мечтательно-дарковым звучани...   \n",
              "19  В Коломенском очень хорошо читаются изменения ...   \n",
              "\n",
              "                                            date  \\\n",
              "0                             Даты: 4 мая, 20:00   \n",
              "1                          Даты: 25 апреля 19:30   \n",
              "2   Даты: 28 апреля 10:30, старт квеста — 12:00.   \n",
              "3                                        Даты: -   \n",
              "4                               Даты: по 26 мая.   \n",
              "5                        Даты: Ежедневно в 16:00   \n",
              "6                               Даты: до 15 июля   \n",
              "7                      Даты: 18 апреля — 31 мая    \n",
              "8                               Даты: до 2 июня.   \n",
              "9                        Даты: 27 апреля в 18:30   \n",
              "10                          Даты: 25.04, в 20:00   \n",
              "11                                       Даты: -   \n",
              "12                      Даты: 12 мая 19:00–23:30   \n",
              "13                               Даты: до 26 мая   \n",
              "14                           Даты: 3 мая в 14:00   \n",
              "15                 Даты: 3 мая с 22:00 до 07:00.   \n",
              "16                        Даты: 12 апреля 18:00    \n",
              "17             Даты: 28 апреля с 11:00 до 21:00.   \n",
              "18                               Даты: 28 апреля   \n",
              "19                                       Даты: -   \n",
              "\n",
              "                                                  loc  \\\n",
              "0   Место:  ГУМ, Красная площадь, 3, 2 этаж, 1 линия.   \n",
              "1                    Место: Ермолаевский переулок, 17   \n",
              "2   Место: Москва, Старая Басманная, 21/4с1. м. Ку...   \n",
              "3               Место:  55.907730, 37.386544 (далеко)   \n",
              "4   Место: Москва, Якиманская набережная., 2/1. Це...   \n",
              "5         Место: Москва, Триумфальная пл., 2  (город)   \n",
              "6     Место: Москва, ул. Остоженка, 16. МАММ. (город)   \n",
              "7     Место: Москва, 3-я ул. Ямского Поля, 15 (город)   \n",
              "8   Место: Москва, Ленинградский проспект, 15 ст 1...   \n",
              "9   Место: Москва,  2-я Песчаная, 4. м. Сокол (город)   \n",
              "10  Место: Москва, Георгиевский переулок, 3с3 Теат...   \n",
              "11                                  Место: м Тверская   \n",
              "12  Место: Москва, ул. Большая Переяславская, 46с1...   \n",
              "13  Место: Stella Art Foundation, 1-й Красногварде...   \n",
              "14                               Место: Театр Комедии   \n",
              "15  Место: клуб RNDM. Наставнический пер., 13/15, ...   \n",
              "16  Место: Москва, просп. Мира, 119, ВДНХ, Главная...   \n",
              "17        Место: Москва, Гранатный пер., 7ст1.(город)   \n",
              "18                                   Место: RNDM клуб   \n",
              "19                               Место: м Коломенская   \n",
              "\n",
              "                                           price  \\\n",
              "0                           Стоимость: бесплатно   \n",
              "1                               Стоимость: 450 р   \n",
              "2                           Стоимость: бесплатно   \n",
              "3                           Стоимость: бесплатно   \n",
              "4        Стоимость: 300-500 ₽. Билеты по ссылке.   \n",
              "5                                Стоимость: 700р   \n",
              "6                           Стоимость: бесплатно   \n",
              "7                           Стоимость: от 6000 ₽   \n",
              "8                       Стоимость: от 250 рублей   \n",
              "9                               Стоимость: 400 р   \n",
              "10                              Стоимость: 1500р   \n",
              "11                 Стоимость: 1200 р на компанию   \n",
              "12                          Стоимость: от 1200р.   \n",
              "13                          Стоимость: бесплатно   \n",
              "14  Стоимость: от 1200р, –75% по промокоду ТЕАТР   \n",
              "15   Стоимость: предпродажа от 1000 ₽ по ссылке.   \n",
              "16                     Стоимость: Вход свободный   \n",
              "17                         Стоимость: 400 рублей   \n",
              "18                             Стоимость: 2500 р   \n",
              "19                 Стоимость: 1200 р на компанию   \n",
              "\n",
              "                                                 link  \n",
              "0                              Ссылка: по регистрации  \n",
              "1                                      Ссылка: ссылка  \n",
              "2                                   Ссылка: вот и вот  \n",
              "3                                           Ссылка: -  \n",
              "4   Ссылка: https://betoncvc.com/exhibitions/alfav...  \n",
              "5                               Ссылка:  Купить билет  \n",
              "6                                      Ссылка: ссылка  \n",
              "7                                Ссылка: Купить билет  \n",
              "8                                   Ссылка: Подробнее  \n",
              "9                          Ссылка: «Большой Лебовски»  \n",
              "10                              Ссылка: Билетиксы тут  \n",
              "11                                     Ссылка: ссылка  \n",
              "12                                  Ссылка: Подробнее  \n",
              "13                                     Ссылка: ссылка  \n",
              "14                     Ссылка: Билеты по ссылке здесь  \n",
              "15            Ссылка: https://t.me/NotUnderground/215  \n",
              "16                                          Ссылка: -  \n",
              "17                                  Ссылка: Подробнее  \n",
              "18                          Ссылка: Билеты по ссылке.  \n",
              "19                                     Ссылка: ссылка  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f72ab22d-dc79-43ab-97c0-78cc0b80d5f7\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>cat_1</th>\n",
              "      <th>cat_2</th>\n",
              "      <th>name</th>\n",
              "      <th>desc</th>\n",
              "      <th>date</th>\n",
              "      <th>loc</th>\n",
              "      <th>price</th>\n",
              "      <th>link</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>35</td>\n",
              "      <td>Кинопоказ</td>\n",
              "      <td>Классика, Мультфильмы</td>\n",
              "      <td>Кинопоказ фильма «Мальчик и птица»</td>\n",
              "      <td>Показ от Киноклуба Дом Динамо и его кураторов ...</td>\n",
              "      <td>Даты: 4 мая, 20:00</td>\n",
              "      <td>Место:  ГУМ, Красная площадь, 3, 2 этаж, 1 линия.</td>\n",
              "      <td>Стоимость: бесплатно</td>\n",
              "      <td>Ссылка: по регистрации</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>166</td>\n",
              "      <td>Лекция</td>\n",
              "      <td>Кино, Мода</td>\n",
              "      <td>Нескромное обаяние женственности: 1950-е в мод...</td>\n",
              "      <td>Десятилетие расцвета парижской высокой моды и ...</td>\n",
              "      <td>Даты: 25 апреля 19:30</td>\n",
              "      <td>Место: Ермолаевский переулок, 17</td>\n",
              "      <td>Стоимость: 450 р</td>\n",
              "      <td>Ссылка: ссылка</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>44</td>\n",
              "      <td>Игры</td>\n",
              "      <td>Развлечения, История, Уличная</td>\n",
              "      <td>Культурно-исторический квест HSE RUN</td>\n",
              "      <td>Увлекательные загадки, интересные места столиц...</td>\n",
              "      <td>Даты: 28 апреля 10:30, старт квеста — 12:00.</td>\n",
              "      <td>Место: Москва, Старая Басманная, 21/4с1. м. Ку...</td>\n",
              "      <td>Стоимость: бесплатно</td>\n",
              "      <td>Ссылка: вот и вот</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>129</td>\n",
              "      <td>Погулять, Экскурсия</td>\n",
              "      <td>Уличная, Природа, Животные, История</td>\n",
              "      <td>Экотропы. «Захарьинская пойма» в заказнике «До...</td>\n",
              "      <td>Ландшафтный заказник «Долина реки Сходни в Кур...</td>\n",
              "      <td>Даты: -</td>\n",
              "      <td>Место:  55.907730, 37.386544 (далеко)</td>\n",
              "      <td>Стоимость: бесплатно</td>\n",
              "      <td>Ссылка: -</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3</td>\n",
              "      <td>Выставка</td>\n",
              "      <td>Фотография, История</td>\n",
              "      <td>Алфавит. Советская фотография 1920-1930-х годов</td>\n",
              "      <td>Фундаментальное исследование одного из ярчайши...</td>\n",
              "      <td>Даты: по 26 мая.</td>\n",
              "      <td>Место: Москва, Якиманская набережная., 2/1. Це...</td>\n",
              "      <td>Стоимость: 300-500 ₽. Билеты по ссылке.</td>\n",
              "      <td>Ссылка: https://betoncvc.com/exhibitions/alfav...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>75</td>\n",
              "      <td>Экскурсия</td>\n",
              "      <td>Уличная, Литература</td>\n",
              "      <td>Булгаковская Москва — какая она?</td>\n",
              "      <td>Мистическая и романтичная! Убедиться в этом мо...</td>\n",
              "      <td>Даты: Ежедневно в 16:00</td>\n",
              "      <td>Место: Москва, Триумфальная пл., 2  (город)</td>\n",
              "      <td>Стоимость: 700р</td>\n",
              "      <td>Ссылка:  Купить билет</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>109</td>\n",
              "      <td>Выставка</td>\n",
              "      <td>Фотография, Мода, История</td>\n",
              "      <td>Модницы XIX — начала ХХ века. Из коллекции МАММ</td>\n",
              "      <td>Мультимедиа Арт Музей, Москва представляет выс...</td>\n",
              "      <td>Даты: до 15 июля</td>\n",
              "      <td>Место: Москва, ул. Остоженка, 16. МАММ. (город)</td>\n",
              "      <td>Стоимость: бесплатно</td>\n",
              "      <td>Ссылка: ссылка</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>88</td>\n",
              "      <td>Перформанс</td>\n",
              "      <td>Еда, Кино, Классика</td>\n",
              "      <td>Гастрономический мюзикл «Москва слезам не верит»</td>\n",
              "      <td>Это совершенно новый для России формат театрал...</td>\n",
              "      <td>Даты: 18 апреля — 31 мая</td>\n",
              "      <td>Место: Москва, 3-я ул. Ямского Поля, 15 (город)</td>\n",
              "      <td>Стоимость: от 6000 ₽</td>\n",
              "      <td>Ссылка: Купить билет</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>25</td>\n",
              "      <td>Выставка</td>\n",
              "      <td>Живопись, История</td>\n",
              "      <td>Выставка посвященная группе «13»</td>\n",
              "      <td>Выставка под названием «13. В переулках эпохи»...</td>\n",
              "      <td>Даты: до 2 июня.</td>\n",
              "      <td>Место: Москва, Ленинградский проспект, 15 ст 1...</td>\n",
              "      <td>Стоимость: от 250 рублей</td>\n",
              "      <td>Ссылка: Подробнее</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>40</td>\n",
              "      <td>Кинопоказ</td>\n",
              "      <td>Классика, Образовательное</td>\n",
              "      <td>Показ и обсуждение фильма \"Большой Лебовски\"</td>\n",
              "      <td>В кофейне «Ностальгия» на Соколе сперва пройде...</td>\n",
              "      <td>Даты: 27 апреля в 18:30</td>\n",
              "      <td>Место: Москва,  2-я Песчаная, 4. м. Сокол (город)</td>\n",
              "      <td>Стоимость: 400 р</td>\n",
              "      <td>Ссылка: «Большой Лебовски»</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>202</td>\n",
              "      <td>Спектакль</td>\n",
              "      <td>Танцы, Современное Искусство</td>\n",
              "      <td>Абсурдистский танцевальный спектакль</td>\n",
              "      <td>Танцевальный спектакль преподавателя Gogol Sch...</td>\n",
              "      <td>Даты: 25.04, в 20:00</td>\n",
              "      <td>Место: Москва, Георгиевский переулок, 3с3 Теат...</td>\n",
              "      <td>Стоимость: 1500р</td>\n",
              "      <td>Ссылка: Билетиксы тут</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>189</td>\n",
              "      <td>Игры</td>\n",
              "      <td>История, Литература, Уличная</td>\n",
              "      <td>ЛЮБОВНЫЕ ИСТОРИИ МОСКВЫ</td>\n",
              "      <td>Зачем нужен был фиктивный брак девушке, влюблё...</td>\n",
              "      <td>Даты: -</td>\n",
              "      <td>Место: м Тверская</td>\n",
              "      <td>Стоимость: 1200 р на компанию</td>\n",
              "      <td>Ссылка: ссылка</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>20</td>\n",
              "      <td>Перформанс</td>\n",
              "      <td>История, Культуры, Музыка</td>\n",
              "      <td>Назад в прошлое: встретить праздники с национа...</td>\n",
              "      <td>«ХОРОВОД», организованный DU - UNDERGROUND SHO...</td>\n",
              "      <td>Даты: 12 мая 19:00–23:30</td>\n",
              "      <td>Место: Москва, ул. Большая Переяславская, 46с1...</td>\n",
              "      <td>Стоимость: от 1200р.</td>\n",
              "      <td>Ссылка: Подробнее</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>108</td>\n",
              "      <td>Выставка</td>\n",
              "      <td>Фотография, Современное Искусство</td>\n",
              "      <td>О всех вещах, там обитающих</td>\n",
              "      <td>Выставка соберёт более 50 работ впервые показа...</td>\n",
              "      <td>Даты: до 26 мая</td>\n",
              "      <td>Место: Stella Art Foundation, 1-й Красногварде...</td>\n",
              "      <td>Стоимость: бесплатно</td>\n",
              "      <td>Ссылка: ссылка</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>115</td>\n",
              "      <td>Спектакль</td>\n",
              "      <td>Классика</td>\n",
              "      <td>Спектакль «Собачье сердце»</td>\n",
              "      <td>Актерский состав: Дмитрий Белоцерковский, Свят...</td>\n",
              "      <td>Даты: 3 мая в 14:00</td>\n",
              "      <td>Место: Театр Комедии</td>\n",
              "      <td>Стоимость: от 1200р, –75% по промокоду ТЕАТР</td>\n",
              "      <td>Ссылка: Билеты по ссылке здесь</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>147</td>\n",
              "      <td>Тусовка</td>\n",
              "      <td>Танцы, Музыка</td>\n",
              "      <td>NU: HARD HIGHTS в RNDM</td>\n",
              "      <td>Вечеринка тяжелой скоростной электроники и хар...</td>\n",
              "      <td>Даты: 3 мая с 22:00 до 07:00.</td>\n",
              "      <td>Место: клуб RNDM. Наставнический пер., 13/15, ...</td>\n",
              "      <td>Стоимость: предпродажа от 1000 ₽ по ссылке.</td>\n",
              "      <td>Ссылка: https://t.me/NotUnderground/215</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>99</td>\n",
              "      <td>Концерт</td>\n",
              "      <td>Песни</td>\n",
              "      <td>Бесплатный концерт Мота и группы «Земляне»</td>\n",
              "      <td>На сцене выступят известные артисты: МОТ и Гру...</td>\n",
              "      <td>Даты: 12 апреля 18:00</td>\n",
              "      <td>Место: Москва, просп. Мира, 119, ВДНХ, Главная...</td>\n",
              "      <td>Стоимость: Вход свободный</td>\n",
              "      <td>Ссылка: -</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>30</td>\n",
              "      <td>Маркет, Лекция</td>\n",
              "      <td>Образовательное, Мода</td>\n",
              "      <td>Винтаж в особняке Леман: на выходных на Патриа...</td>\n",
              "      <td>Особняк Леман превратится в рай для любителей ...</td>\n",
              "      <td>Даты: 28 апреля с 11:00 до 21:00.</td>\n",
              "      <td>Место: Москва, Гранатный пер., 7ст1.(город)</td>\n",
              "      <td>Стоимость: 400 рублей</td>\n",
              "      <td>Ссылка: Подробнее</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>138</td>\n",
              "      <td>Тусовка</td>\n",
              "      <td>Танцы, Музыка</td>\n",
              "      <td>Дебютная вечеринка команды R-99.</td>\n",
              "      <td>Она откроет серию мечтательно-дарковым звучани...</td>\n",
              "      <td>Даты: 28 апреля</td>\n",
              "      <td>Место: RNDM клуб</td>\n",
              "      <td>Стоимость: 2500 р</td>\n",
              "      <td>Ссылка: Билеты по ссылке.</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>188</td>\n",
              "      <td>Игры</td>\n",
              "      <td>История, Архитектура, Уличная</td>\n",
              "      <td>КОЛОМЕНСКОЕ</td>\n",
              "      <td>В Коломенском очень хорошо читаются изменения ...</td>\n",
              "      <td>Даты: -</td>\n",
              "      <td>Место: м Коломенская</td>\n",
              "      <td>Стоимость: 1200 р на компанию</td>\n",
              "      <td>Ссылка: ссылка</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f72ab22d-dc79-43ab-97c0-78cc0b80d5f7')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f72ab22d-dc79-43ab-97c0-78cc0b80d5f7 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f72ab22d-dc79-43ab-97c0-78cc0b80d5f7');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-eaa1896b-837d-4408-bd60-9d88e4b6c9a3\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-eaa1896b-837d-4408-bd60-9d88e4b6c9a3')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-eaa1896b-837d-4408-bd60-9d88e4b6c9a3 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"    \",\n  \"rows\": 20,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"35\",\n          \"30\",\n          \"147\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"\\u042d\\u043a\\u0441\\u043a\\u0443\\u0440\\u0441\\u0438\\u044f\",\n          \"\\u041a\\u0438\\u043d\\u043e\\u043f\\u043e\\u043a\\u0430\\u0437\",\n          \"\\u041a\\u043e\\u043d\\u0446\\u0435\\u0440\\u0442\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          \"\\u041a\\u043b\\u0430\\u0441\\u0441\\u0438\\u043a\\u0430, \\u041c\\u0443\\u043b\\u044c\\u0442\\u0444\\u0438\\u043b\\u044c\\u043c\\u044b\",\n          \"\\u0423\\u043b\\u0438\\u0447\\u043d\\u0430\\u044f, \\u041b\\u0438\\u0442\\u0435\\u0440\\u0430\\u0442\\u0443\\u0440\\u0430\",\n          \"\\u0418\\u0441\\u0442\\u043e\\u0440\\u0438\\u044f, \\u041b\\u0438\\u0442\\u0435\\u0440\\u0430\\u0442\\u0443\\u0440\\u0430, \\u0423\\u043b\\u0438\\u0447\\u043d\\u0430\\u044f\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"\\u041a\\u0438\\u043d\\u043e\\u043f\\u043e\\u043a\\u0430\\u0437 \\u0444\\u0438\\u043b\\u044c\\u043c\\u0430 \\u00ab\\u041c\\u0430\\u043b\\u044c\\u0447\\u0438\\u043a \\u0438 \\u043f\\u0442\\u0438\\u0446\\u0430\\u00bb\",\n          \"\\u0412\\u0438\\u043d\\u0442\\u0430\\u0436 \\u0432 \\u043e\\u0441\\u043e\\u0431\\u043d\\u044f\\u043a\\u0435 \\u041b\\u0435\\u043c\\u0430\\u043d: \\u043d\\u0430 \\u0432\\u044b\\u0445\\u043e\\u0434\\u043d\\u044b\\u0445 \\u043d\\u0430 \\u041f\\u0430\\u0442\\u0440\\u0438\\u0430\\u0440\\u0448\\u0438\\u0445 \\u043f\\u0440\\u043e\\u0439\\u0434\\u0435\\u0442 Vintage Marketplace\",\n          \"NU: HARD HIGHTS\\u00a0\\u0432 RNDM\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"desc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"\\u041f\\u043e\\u043a\\u0430\\u0437 \\u043e\\u0442 \\u041a\\u0438\\u043d\\u043e\\u043a\\u043b\\u0443\\u0431\\u0430 \\u0414\\u043e\\u043c \\u0414\\u0438\\u043d\\u0430\\u043c\\u043e \\u0438 \\u0435\\u0433\\u043e \\u043a\\u0443\\u0440\\u0430\\u0442\\u043e\\u0440\\u043e\\u0432 \\u0410\\u043b\\u0435\\u043a\\u0441\\u0430\\u043d\\u0434\\u0440\\u0430 \\u041a\\u043e\\u0440\\u043e\\u0431\\u0435\\u0439\\u043d\\u0438\\u043a\\u043e\\u0432\\u0430 \\u0438 \\u041c\\u0430\\u043a\\u0441\\u0438\\u043c\\u0430 \\u0417\\u043e\\u043b\\u043e\\u0442\\u044b\\u0445 \\u2014\\u00a0 \\u00ab\\u043e\\u0441\\u043a\\u0430\\u0440\\u043e\\u043d\\u043e\\u0441\\u043d\\u044b\\u0439\\u00bb \\u0448\\u0435\\u0434\\u0435\\u0432\\u0440 \\u0432\\u0435\\u043b\\u0438\\u043a\\u043e\\u0433\\u043e \\u0425\\u0430\\u044f\\u043e \\u041c\\u0438\\u044f\\u0434\\u0437\\u0430\\u043a\\u0438.\",\n          \"\\u041e\\u0441\\u043e\\u0431\\u043d\\u044f\\u043a \\u041b\\u0435\\u043c\\u0430\\u043d \\u043f\\u0440\\u0435\\u0432\\u0440\\u0430\\u0442\\u0438\\u0442\\u0441\\u044f \\u0432 \\u0440\\u0430\\u0439 \\u0434\\u043b\\u044f \\u043b\\u044e\\u0431\\u0438\\u0442\\u0435\\u043b\\u0435\\u0439 \\u0432\\u0438\\u043d\\u0442\\u0430\\u0436\\u0430. \\u041b\\u044e\\u0431\\u0438\\u0442\\u0435\\u043b\\u0438 \\u043c\\u043e\\u0434\\u044b \\u0438 \\u0441\\u0442\\u0438\\u043b\\u044f \\u0441\\u043c\\u043e\\u0433\\u0443\\u0442 \\u043f\\u043e\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044c\\u0441\\u044f \\u0432 \\u0443\\u043d\\u0438\\u043a\\u0430\\u043b\\u044c\\u043d\\u0443\\u044e \\u0430\\u0442\\u043c\\u043e\\u0441\\u0444\\u0435\\u0440\\u0443 \\u043f\\u0440\\u043e\\u0448\\u043b\\u043e\\u0433\\u043e: \\u0448\\u0435\\u0441\\u0442\\u044c\\u0434\\u0435\\u0441\\u044f\\u0442 \\u0432\\u0438\\u043d\\u0442\\u0430\\u0436\\u043d\\u044b\\u0445 \\u043c\\u0430\\u0433\\u0430\\u0437\\u0438\\u043d\\u043e\\u0432 \\u0441\\u043e \\u0432\\u0441\\u0435\\u0439 \\u0420\\u043e\\u0441\\u0441\\u0438\\u0438 \\u043f\\u0440\\u0435\\u0434\\u043b\\u043e\\u0436\\u0430\\u0442 \\u0441\\u0432\\u043e\\u0438 \\u0443\\u043d\\u0438\\u043a\\u0430\\u043b\\u044c\\u043d\\u044b\\u0435 \\u043d\\u0430\\u0445\\u043e\\u0434\\u043a\\u0438 \\u0432 \\u043d\\u0435\\u043f\\u043e\\u0432\\u0442\\u043e\\u0440\\u0438\\u043c\\u043e\\u0439 \\u0430\\u0442\\u043c\\u043e\\u0441\\u0444\\u0435\\u0440\\u0435 \\u0440\\u043e\\u0441\\u043a\\u043e\\u0448\\u043d\\u043e\\u0433\\u043e \\u0437\\u0434\\u0430\\u043d\\u0438\\u044f XIX \\u0432\\u0435\\u043a\\u0430. \\u041c\\u043e\\u0434\\u043d\\u044b\\u0435 \\u044d\\u043d\\u0442\\u0443\\u0437\\u0438\\u0430\\u0441\\u0442\\u044b \\u0441\\u043c\\u043e\\u0433\\u0443\\u0442 \\u043d\\u0430\\u0441\\u043b\\u0430\\u0434\\u0438\\u0442\\u044c\\u0441\\u044f \\u0431\\u043e\\u0433\\u0430\\u0442\\u0441\\u0442\\u0432\\u043e\\u043c \\u0441\\u0442\\u0438\\u043b\\u0435\\u0439 \\u043e\\u0442 \\u044d\\u043f\\u043e\\u0445\\u0438 \\u0421\\u0442\\u0430\\u0440\\u043e\\u0433\\u043e \\u0413\\u043e\\u043b\\u043b\\u0438\\u0432\\u0443\\u0434\\u0430 \\u0434\\u043e \\u0430\\u0441\\u0438\\u043c\\u043c\\u0435\\u0442\\u0440\\u0438\\u0447\\u043d\\u043e\\u0433\\u043e \\u0430\\u0440\\u0442\\u0438\\u0441\\u0430\\u043d\\u0430\\u043b\\u044c\\u043d\\u043e\\u0433\\u043e \\u0442\\u0440\\u0438\\u043a\\u043e\\u0442\\u0430\\u0436\\u0430, \\u043f\\u0440\\u0435\\u0434\\u0441\\u0442\\u0430\\u0432\\u043b\\u0435\\u043d\\u043d\\u043e\\u0433\\u043e \\u0442\\u0430\\u043a\\u0438\\u043c\\u0438 \\u0438\\u043c\\u0435\\u043d\\u0430\\u043c\\u0438, \\u043a\\u0430\\u043a Christian Dior, Yves Saint Laurent \\u0438 Alaia. \\u041c\\u0430\\u0440\\u043a\\u0435\\u0442 \\u043f\\u0440\\u0435\\u0434\\u043b\\u043e\\u0436\\u0438\\u0442 \\u043a\\u043e\\u043b\\u043b\\u0435\\u043a\\u0446\\u0438\\u0438 \\u0438\\u0437 \\u0434\\u0438\\u0437\\u0430\\u0439\\u043d\\u0435\\u0440\\u0441\\u043a\\u0438\\u0445 \\u0430\\u0440\\u0445\\u0438\\u0432\\u043e\\u0432 \\u0432\\u0440\\u043e\\u0434\\u0435 Gucci \\u044d\\u043f\\u043e\\u0445\\u0438 \\u0422\\u043e\\u043c\\u0430 \\u0424\\u043e\\u0440\\u0434\\u0430 \\u0438 Dior \\u043e\\u0442 Galliano \\u043f\\u043e \\u0446\\u0435\\u043d\\u0430\\u043c, \\u043d\\u0435\\u0441\\u0440\\u0430\\u0432\\u043d\\u0438\\u043c\\u044b\\u043c \\u0441 \\u043c\\u0438\\u0440\\u043e\\u0432\\u044b\\u043c\\u0438. \\u041a\\u0440\\u043e\\u043c\\u0435 \\u0442\\u043e\\u0433\\u043e, \\u043d\\u0430 \\u043c\\u0435\\u0440\\u043e\\u043f\\u0440\\u0438\\u044f\\u0442\\u0438\\u0438 \\u0431\\u0443\\u0434\\u0435\\u0442 \\u043e\\u0441\\u043e\\u0431\\u044b\\u0439 \\u0443\\u0433\\u043e\\u043b\\u043e\\u043a \\u043e\\u0442 THE CULTT \\u0441 \\u044d\\u043a\\u0441\\u043a\\u043b\\u044e\\u0437\\u0438\\u0432\\u043d\\u044b\\u043c\\u0438 \\u0432\\u0435\\u0449\\u0430\\u043c\\u0438 \\u043e\\u0442 \\u0441\\u0442\\u043e\\u043b\\u0438\\u0447\\u043d\\u044b\\u0445 it-girls \\u0438 boys. \\u0417\\u0434\\u0435\\u0441\\u044c \\u043f\\u0440\\u043e\\u0439\\u0434\\u0443\\u0442 \\u043b\\u0435\\u043a\\u0446\\u0438\\u0438 \\u0438 \\u043f\\u0430\\u0431\\u043b\\u0438\\u043a-\\u0442\\u043e\\u043a\\u0438 \\u0441 \\u0432\\u0435\\u0434\\u0443\\u0449\\u0438\\u043c\\u0438 \\u044d\\u043a\\u0441\\u043f\\u0435\\u0440\\u0442\\u0430\\u043c\\u0438 \\u0438 \\u0441\\u0442\\u0438\\u043b\\u0438\\u0441\\u0442\\u0430\\u043c\\u0438.\\u00a0\",\n          \"\\u0412\\u0435\\u0447\\u0435\\u0440\\u0438\\u043d\\u043a\\u0430 \\u0442\\u044f\\u0436\\u0435\\u043b\\u043e\\u0439 \\u0441\\u043a\\u043e\\u0440\\u043e\\u0441\\u0442\\u043d\\u043e\\u0439 \\u044d\\u043b\\u0435\\u043a\\u0442\\u0440\\u043e\\u043d\\u0438\\u043a\\u0438 \\u0438 \\u0445\\u0430\\u0440\\u0434-\\u0442\\u0435\\u0445\\u043d\\u043e \\u0432 \\u043a\\u0430\\u043c\\u0435\\u0440\\u043d\\u043e\\u043c \\u043a\\u043b\\u0443\\u0431\\u0435 RNDM. \\u0412 \\u043b\\u0430\\u0439\\u043d\\u0430\\u043f\\u0435 \\u2014 \\u0442\\u0430\\u043b\\u0430\\u043d\\u0442\\u043b\\u0438\\u0432\\u044b\\u0439 \\u043f\\u0435\\u0442\\u0435\\u0440\\u0431\\u0443\\u0440\\u0433\\u0441\\u043a\\u0438\\u0439 \\u0434\\u0438\\u0434\\u0436\\u0435\\u0439 Igor Starshinov, \\u0430 \\u0442\\u0430\\u043a\\u0436\\u0435 Bl\\u00f8\\u00f8ddrain, Depressive Tuesday, Superoleg, Alena Dust, Candy Lu \\u0438 \\u0434\\u0440\\u0443\\u0433\\u0438\\u0435. \\u0417\\u0434\\u0435\\u0441\\u044c \\u0436\\u0435 \\u043f\\u0440\\u043e\\u0439\\u0434\\u0435\\u0442 \\u0432\\u044b\\u0441\\u0442\\u0430\\u0432\\u043a\\u0430-\\u0438\\u043d\\u0441\\u0442\\u0430\\u043b\\u043b\\u044f\\u0446\\u0438\\u044f \\u0430\\u0440\\u0442-\\u0442\\u0435\\u0440\\u0430\\u043f\\u0435\\u0432\\u0442\\u0430 \\u0415\\u043b\\u0438\\u0437\\u0430\\u0432\\u0435\\u0442\\u044b \\u0426\\u0430\\u043d\\u0434\\u0435\\u043a\\u043e\\u0432\\u043e\\u0439.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 18,\n        \"samples\": [\n          \"\\u0414\\u0430\\u0442\\u044b: 4 \\u043c\\u0430\\u044f, 20:00\",\n          \"\\u0414\\u0430\\u0442\\u044b: 25 \\u0430\\u043f\\u0440\\u0435\\u043b\\u044f 19:30\",\n          \"\\u0414\\u0430\\u0442\\u044b: \\u0434\\u043e 2 \\u0438\\u044e\\u043d\\u044f.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"loc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e:\\u00a0 \\u0413\\u0423\\u041c, \\u041a\\u0440\\u0430\\u0441\\u043d\\u0430\\u044f \\u043f\\u043b\\u043e\\u0449\\u0430\\u0434\\u044c, 3, 2 \\u044d\\u0442\\u0430\\u0436, 1 \\u043b\\u0438\\u043d\\u0438\\u044f.\",\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041c\\u043e\\u0441\\u043a\\u0432\\u0430, \\u0413\\u0440\\u0430\\u043d\\u0430\\u0442\\u043d\\u044b\\u0439 \\u043f\\u0435\\u0440., 7\\u0441\\u04421.(\\u0433\\u043e\\u0440\\u043e\\u0434)\",\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u043a\\u043b\\u0443\\u0431 RNDM. \\u041d\\u0430\\u0441\\u0442\\u0430\\u0432\\u043d\\u0438\\u0447\\u0435\\u0441\\u043a\\u0438\\u0439 \\u043f\\u0435\\u0440., 13/15, \\u0441\\u0442\\u0440. 3.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 15,\n        \"samples\": [\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: \\u043e\\u0442 1200\\u0440.\",\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: \\u043f\\u0440\\u0435\\u0434\\u043f\\u0440\\u043e\\u0434\\u0430\\u0436\\u0430 \\u043e\\u0442 1000 \\u20bd \\u043f\\u043e \\u0441\\u0441\\u044b\\u043b\\u043a\\u0435.\",\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: \\u0431\\u0435\\u0441\\u043f\\u043b\\u0430\\u0442\\u043d\\u043e\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"link\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 13,\n        \"samples\": [\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: https://t.me/NotUnderground/215\",\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: \\u0411\\u0438\\u043b\\u0435\\u0442\\u0438\\u043a\\u0441\\u044b \\u0442\\u0443\\u0442\",\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: \\u043f\\u043e \\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u0438\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 112
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "ZUcaJcpSv1IY"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "FBvUK3B0appy"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Итеративный этап в виде цикла."
      ],
      "metadata": {
        "id": "jJdyC_MyKiuF"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# задачем название колонки в которой лежит вес пользователей для агрегации\n",
        "INDIVIDUAL_COEF = 'final_coef'\n",
        "# параметры модели\n",
        "COMPONENTS = 10\n",
        "IDENTITY = True"
      ],
      "metadata": {
        "id": "eI4gvG5_KiCh"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# каталог мероприятий в сыром виде\n",
        "event_data = pd.read_excel('events.xlsx')\n",
        "# данные о пои, юзерах и трен взаимодействиях\n",
        "train_event_features = pd.read_csv('encoded_items_train.csv')\n",
        "test_event_features = pd.read_csv('encoded_items_test.csv')\n",
        "user_features_data = pd.read_csv('user_traits.csv')\n",
        "train_interactions = pd.read_csv('interactions_train.csv', index_col=0)\n",
        "\n",
        "\n",
        "train_event_features = train_event_features.rename(columns={'id': 'item_id'})\n",
        "train_event_features['item_id'] = train_event_features['item_id'].astype(str)\n",
        "test_event_features = test_event_features.rename(columns={'id': 'item_id'})\n",
        "test_event_features['item_id'] = test_event_features['item_id'].astype(str)\n",
        "train_interactions.columns = train_interactions.columns.astype(str)\n",
        "# делаем 1 из дизлайка и 5 из лайка\n",
        "train_interactions = train_interactions.replace(1, 5).replace(-1, 1)\n",
        "\n",
        "\n",
        "# from sklearn.feature_extraction.text import TfidfVectorizer\n",
        "# # надо будет добавить описание в фичи\n",
        "# vectorizer = TfidfVectorizer(max_features=100)\n",
        "# item_features = vectorizer.fit_transform(train_event_features['desc'])\n",
        "# item_features2 = vectorizer.fit_transform(test_event_features['desc'])\n",
        "\n",
        "user_features_data = user_features_data.rename(columns={'name': 'user_id'})\n",
        "user_features_data = user_features_data.drop(\n",
        "    list(set([\n",
        "        'mood',\n",
        "        'Соперничество',\n",
        "        'Сотрудничество',\n",
        "        'Компромисс',\n",
        "        'Избегание',\n",
        "        'Приспособление',\n",
        "        'conflict_coef',\n",
        "        'Extraversion',\n",
        "        'Agreableness',\n",
        "        'Conscientiousness',\n",
        "        'Neuroticism',\n",
        "        'Openness',\n",
        "        'character_coef',\n",
        "        'final_coef',\n",
        "        'final_coef_scaled',\n",
        "    ]) - {INDIVIDUAL_COEF}),\n",
        "    axis=1,\n",
        ")"
      ],
      "metadata": {
        "id": "ih9c34NVKiAd"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "user_features_data"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        },
        "id": "R9gliCJHKh9C",
        "outputId": "91ebbb38-e597-4849-b32d-a861356cebf3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  user_id  age  income  final_coef  residence_moscow  residence_nnovgorod  \\\n",
              "0    Окси   24       3    0.760000                 1                    0   \n",
              "1    Катя   23       1    1.216154                 0                    1   \n",
              "2     Ксю   23       3    0.603750                 1                    0   \n",
              "3    Лиза   22       2    1.014444                 0                    1   \n",
              "4     Ира   24       2    1.700000                 0                    1   \n",
              "5     Аня   23       2    1.666000                 0                    1   \n",
              "\n",
              "   fulltime_work  student  unemployed  \n",
              "0              1        0           0  \n",
              "1              0        1           1  \n",
              "2              1        0           0  \n",
              "3              1        1           0  \n",
              "4              1        1           0  \n",
              "5              1        0           0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a7616a90-5ae1-4304-a0fa-28d246933bde\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>user_id</th>\n",
              "      <th>age</th>\n",
              "      <th>income</th>\n",
              "      <th>final_coef</th>\n",
              "      <th>residence_moscow</th>\n",
              "      <th>residence_nnovgorod</th>\n",
              "      <th>fulltime_work</th>\n",
              "      <th>student</th>\n",
              "      <th>unemployed</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Окси</td>\n",
              "      <td>24</td>\n",
              "      <td>3</td>\n",
              "      <td>0.760000</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Катя</td>\n",
              "      <td>23</td>\n",
              "      <td>1</td>\n",
              "      <td>1.216154</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Ксю</td>\n",
              "      <td>23</td>\n",
              "      <td>3</td>\n",
              "      <td>0.603750</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Лиза</td>\n",
              "      <td>22</td>\n",
              "      <td>2</td>\n",
              "      <td>1.014444</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Ира</td>\n",
              "      <td>24</td>\n",
              "      <td>2</td>\n",
              "      <td>1.700000</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Аня</td>\n",
              "      <td>23</td>\n",
              "      <td>2</td>\n",
              "      <td>1.666000</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a7616a90-5ae1-4304-a0fa-28d246933bde')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a7616a90-5ae1-4304-a0fa-28d246933bde button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a7616a90-5ae1-4304-a0fa-28d246933bde');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-cdecb124-0089-4542-8a99-a0c3fb7cad44\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cdecb124-0089-4542-8a99-a0c3fb7cad44')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-cdecb124-0089-4542-8a99-a0c3fb7cad44 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "user_features_data",
              "summary": "{\n  \"name\": \"user_features_data\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"user_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"\\u041e\\u043a\\u0441\\u0438\",\n          \"\\u041a\\u0430\\u0442\\u044f\",\n          \"\\u0410\\u043d\\u044f\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 22,\n        \"max\": 24,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          24,\n          23,\n          22\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3,\n          1,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"final_coef\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.456374783913529,\n        \"min\": 0.60375,\n        \"max\": 1.7000000004,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0.760000000038,\n          1.21615384644,\n          1.666\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"residence_moscow\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"residence_nnovgorod\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fulltime_work\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"student\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"unemployed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 180
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "scaler = MinMaxScaler()\n",
        "\n",
        "user_features_data[['age', 'income']] = scaler.fit_transform(user_features_data[['age', 'income']])\n",
        "user_features_data"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        },
        "id": "-Nav5h8WKh5s",
        "outputId": "8e7609a2-005b-4d2e-c6b1-7319c0ed87f6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  user_id  age  income  final_coef  residence_moscow  residence_nnovgorod  \\\n",
              "0    Окси  1.0     1.0    0.760000                 1                    0   \n",
              "1    Катя  0.5     0.0    1.216154                 0                    1   \n",
              "2     Ксю  0.5     1.0    0.603750                 1                    0   \n",
              "3    Лиза  0.0     0.5    1.014444                 0                    1   \n",
              "4     Ира  1.0     0.5    1.700000                 0                    1   \n",
              "5     Аня  0.5     0.5    1.666000                 0                    1   \n",
              "\n",
              "   fulltime_work  student  unemployed  \n",
              "0              1        0           0  \n",
              "1              0        1           1  \n",
              "2              1        0           0  \n",
              "3              1        1           0  \n",
              "4              1        1           0  \n",
              "5              1        0           0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f7c2dbcb-969c-4ea0-80e1-04b5e35eaf24\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>user_id</th>\n",
              "      <th>age</th>\n",
              "      <th>income</th>\n",
              "      <th>final_coef</th>\n",
              "      <th>residence_moscow</th>\n",
              "      <th>residence_nnovgorod</th>\n",
              "      <th>fulltime_work</th>\n",
              "      <th>student</th>\n",
              "      <th>unemployed</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Окси</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.760000</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Катя</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.216154</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Ксю</td>\n",
              "      <td>0.5</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.603750</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Лиза</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>1.014444</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Ира</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>1.700000</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Аня</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>1.666000</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f7c2dbcb-969c-4ea0-80e1-04b5e35eaf24')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f7c2dbcb-969c-4ea0-80e1-04b5e35eaf24 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f7c2dbcb-969c-4ea0-80e1-04b5e35eaf24');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e5a6e8c6-921f-4456-9aed-02862303e2b9\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e5a6e8c6-921f-4456-9aed-02862303e2b9')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e5a6e8c6-921f-4456-9aed-02862303e2b9 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "user_features_data",
              "summary": "{\n  \"name\": \"user_features_data\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"user_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"\\u041e\\u043a\\u0441\\u0438\",\n          \"\\u041a\\u0430\\u0442\\u044f\",\n          \"\\u0410\\u043d\\u044f\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3763863263545405,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1.0,\n          0.5,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3763863263545405,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1.0,\n          0.0,\n          0.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"final_coef\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.456374783913529,\n        \"min\": 0.60375,\n        \"max\": 1.7000000004,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0.760000000038,\n          1.21615384644,\n          1.666\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"residence_moscow\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"residence_nnovgorod\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fulltime_work\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"student\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"unemployed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 181
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "spreadsheet = gc.open('Результаты TKI')\n",
        "worksheet = spreadsheet.get_worksheet(6)\n",
        "data = worksheet.get_all_values()\n",
        "headers = data.pop(0)\n",
        "\n",
        "df = pd.DataFrame(data, columns=headers)\n",
        "user_features_data = user_features_data.drop('final_coef', axis=1)\\\n",
        "                                       .merge(\n",
        "                                           df[['', 'final_coef']].rename(columns={'':'user_id'}),\n",
        "                                           how='left',\n",
        "                                           on='user_id'\n",
        "                                           )\n",
        "user_features_data.final_coef = user_features_data.final_coef.str.replace(',', '.').astype(float)\n",
        "display(user_features_data)\n",
        "# user_features_data.loc[0, 'final_coef'] = 0.5\n",
        "# user_features_data.loc[1, 'final_coef'] = 1.229\n",
        "# user_features_data.loc[2, 'final_coef'] = 0.403\n",
        "# user_features_data.loc[3, 'final_coef'] = 0.733\n",
        "# user_features_data.loc[4, 'final_coef'] = 1.452\n",
        "# user_features_data.loc[5, 'final_coef'] = 1.232\n",
        "\n",
        "'''\n",
        "\"0,403\" ксю\n",
        "\"1,232\" аня\n",
        "\"0,733\" лиза\n",
        "\"1,229\" катя\n",
        "\"1,452\" ира\n",
        "\"0,500\" окси\n",
        "'''"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "id": "zwntaf3WLPVw",
        "outputId": "a46f77c3-80eb-42b7-bed9-5d986fea75f5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'\\n\"0,403\" ксю\\n\"1,232\" аня\\n\"0,733\" лиза\\n\"1,229\" катя\\n\"1,452\" ира\\n\"0,500\" окси\\n'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 182
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "spreadsheet = gc.open('Онбординг (Ответы)')\n",
        "\n",
        "worksheet = spreadsheet.get_worksheet(0)\n",
        "data = worksheet.get_all_values()\n",
        "headers = data.pop(0)\n",
        "\n",
        "moods = pd.DataFrame(data, columns=headers)\n",
        "user_features_data = user_features_data.merge(\n",
        "                        moods[['Имя', 'Настроение']].rename(\n",
        "                            columns={'Имя':'user_id',\n",
        "                                     'Настроение': 'moods'}),\n",
        "                        how='left',\n",
        "                        on='user_id'\n",
        "                        )\n",
        "user_features_data.moods = user_features_data.moods.apply(lambda x: [str(m).strip() for m in x.split(',')])\n",
        "user_features_data"
      ],
      "metadata": {
        "id": "s1Fhnwe0fvXO"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "dataset = Dataset(user_identity_features=IDENTITY, item_identity_features=IDENTITY)\n",
        "\n",
        "dataset.fit(\n",
        "    users=user_features_data['user_id'],\n",
        "    # придется запихнуть все разом, потому что иначе не получится дообучить модель\n",
        "    # она после добавление взаимодействий ругается что item фичи не совпадают в размере\n",
        "    items=pd.concat([train_event_features, test_event_features], axis=0)['item_id'],\n",
        "    user_features=user_features_data.drop(\n",
        "        ['user_id', INDIVIDUAL_COEF, 'moods'], axis=1\n",
        "        ).columns.tolist(),\n",
        "    item_features=train_event_features.drop(\n",
        "        ['item_id'], axis=1\n",
        "    ).columns.tolist(),  # трейн потому что колонки одинаковые\n",
        ")"
      ],
      "metadata": {
        "id": "nk8HBU0IKh3Z"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "user_features = dataset.build_user_features(\n",
        "    (\n",
        "        (x['user_id'], {f: x[f] for f in user_features_data.drop([INDIVIDUAL_COEF, 'moods'], axis=1).columns if f != 'user_id'})\n",
        "        for _, x in user_features_data.drop([INDIVIDUAL_COEF, 'moods'], axis=1).iterrows()\n",
        "    ), normalize=False\n",
        ")\n",
        "\n",
        "\n",
        "train_item_features = dataset.build_item_features(\n",
        "    (\n",
        "        (x['item_id'], {f: x[f] for f in train_event_features.columns if f != 'item_id'})\n",
        "        for _, x in train_event_features.iterrows()\n",
        "    ), normalize=False\n",
        ")\n",
        "\n",
        "\n",
        "# создаем разреженную матрицу взаимодействий\n",
        "interaction_matrix = sparse.csr_matrix(train_interactions.values)"
      ],
      "metadata": {
        "id": "TVEyBuRqKytn"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model = LightFM(loss='warp', no_components=COMPONENTS, random_state=42)\n",
        "\n",
        "model.fit(\n",
        "    interactions=interaction_matrix,  # train_data,\n",
        "    user_features=user_features,\n",
        "    item_features=train_item_features,\n",
        "    epochs=30,\n",
        "    num_threads=1\n",
        ")\n",
        "\n",
        "# сохраняем текущую модель\n",
        "with open('ind_pref_based_model.pkl', 'wb') as model_file:\n",
        "    pickle.dump(model, model_file)"
      ],
      "metadata": {
        "id": "3iRJ6UzlKyr7"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def get_user_profile(md, ds, user_id, ufm):\n",
        "    user_internal_id = ds.mapping()[0][user_id]\n",
        "    return md.get_user_representations(ufm)[1][user_internal_id]\n",
        "\n",
        "\n",
        "def calculate_mood_weight(moods):\n",
        "    base_weight = 0\n",
        "    mood_effect = {\n",
        "        'support': ['грустное', 'подавленное', 'уставшее', 'ленивое',\n",
        "                   'апатичное', 'тревожное', 'испуганное'],\n",
        "        'restrain': ['взволнованное', 'гиперактивное', 'раздраженное',\n",
        "                     'счастливое'],\n",
        "        'neutral': ['радостное', 'приподнятое', 'спокойное']\n",
        "    }\n",
        "\n",
        "    for mood in moods:\n",
        "        if mood.lower() in mood_effect['support']:\n",
        "            base_weight += 0.5\n",
        "        elif mood.lower() in mood_effect['restrain']:\n",
        "            base_weight -= 0.5\n",
        "\n",
        "    return 1 + base_weight / len(moods)\n",
        "\n",
        "# Агрегация профилей пользователей с учетом весов\n",
        "def get_user_weight(user_row, col):\n",
        "    # тут можно усложнить расчет весов?\n",
        "    # настроения обязательно лежат в юзер фичах в колонке moods в виде списка\n",
        "    mood_weight = calculate_mood_weight(user_row['moods'])\n",
        "    return user_row[col] * mood_weight # ** 2\n",
        "\n",
        "\n",
        "def aggregate_user_profiles(md, ds, ufd, ufm, user_ids, user_weights, k=0):\n",
        "    group_profile = np.zeros(md.get_user_representations(ufm)[1].shape[1])  # одномерный вектор размера n_components 10\n",
        "    total_weight = 0\n",
        "    for user_id in user_ids:\n",
        "        user_idx = ufd.index[ufd['user_id'] == user_id].tolist()[0]\n",
        "        user_profile = get_user_profile(md, ds, user_id, ufm)\n",
        "        user_weight = get_user_weight(ufd.iloc[user_idx], user_weights)\n",
        "        group_profile += user_profile * user_weight\n",
        "        total_weight += user_weight\n",
        "\n",
        "    if total_weight > 0:\n",
        "      # аргумент k можно использовать для усиления влияния весов\n",
        "        group_profile /= total_weight - total_weight * k\n",
        "\n",
        "    return group_profile\n",
        "\n",
        "\n",
        "# без весов\n",
        "# def aggregate_user_profiles(md, ds, ufd, ufm, user_ids,):\n",
        "#     group_profile = None\n",
        "#     num_users = len(user_ids)\n",
        "\n",
        "#     for user_id in user_ids:\n",
        "#         user_profile = get_user_profile(md, ds, user_id, ufm)\n",
        "#         if group_profile is None:\n",
        "#             group_profile = np.zeros_like(user_profile)\n",
        "#         group_profile += user_profile\n",
        "\n",
        "#     group_profile /= num_users\n",
        "#     return group_profile\n",
        "\n",
        "\n",
        "def get_group_recommendations(md, ds, gp, test_item_features, test_events, ufm, n=10):\n",
        "    _, _, item_mapping, _ = ds.mapping()\n",
        "    internal_item_ids = [item_mapping[item_id] for item_id in test_events['item_id']]\n",
        "    group_features = sparse.csr_matrix(gp.reshape(1, -1))\n",
        "    scores = md.predict(\n",
        "        user_ids=np.zeros(\n",
        "            len(internal_item_ids), dtype=np.int32\n",
        "        ),  # нули так как в гп у нас только 1 пользователь, его индекс 0\n",
        "        # тут должны быть внутренние id пользователей которым рекомендовать\n",
        "        item_ids=np.array(internal_item_ids),  # из чего рекомендуем\n",
        "        user_features=group_features,\n",
        "        item_features=test_item_features,\n",
        "    )\n",
        "    top_items_indices = np.argsort(-scores)[:n]\n",
        "    top_n_scores = sorted(scores.tolist(), reverse=True)[:n]\n",
        "    # print(top_n_scores)\n",
        "    return test_events.iloc[top_items_indices]['item_id'].tolist()"
      ],
      "metadata": {
        "id": "AD2NpP82Kyp7"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "user_ids = ['Ксю', 'Аня', 'Лиза', 'Катя', 'Ира', 'Окси']\n",
        "group_profile = aggregate_user_profiles(\n",
        "    model, dataset, user_features_data, user_features, user_ids, INDIVIDUAL_COEF, 0\n",
        "    )\n",
        "\n",
        "test_item_features = dataset.build_item_features(\n",
        "    (\n",
        "        (x['item_id'], {f: x[f] for f in test_event_features.columns if f != 'item_id'})\n",
        "        for _, x in test_event_features.iterrows()\n",
        "    ),\n",
        "    normalize=False,\n",
        ")\n",
        "\n",
        "top_n_group_recommendations = get_group_recommendations(\n",
        "    model, dataset, group_profile, test_item_features, test_event_features, user_features\n",
        ")\n",
        "\n",
        "print(top_n_group_recommendations)\n",
        "\n",
        "event_data['id'] = event_data['id'].astype(str)\n",
        "# display(event_data[event_data.id.isin(top_n_group_recommendations)])\n",
        "\n",
        "display(\n",
        "    event_data[event_data['id'].isin(top_n_group_recommendations[:3])]\n",
        "    .set_index('id')\n",
        "    .reindex(top_n_group_recommendations[:3])\n",
        "    .reset_index()\n",
        ")\n",
        "\n",
        "# random seed для рандома рекомендации\n",
        "random.seed(43)\n",
        "event_data[\n",
        "    event_data.id\n",
        "    == random.choice(test_event_features[\n",
        "        ~test_event_features.item_id.isin(top_n_group_recommendations[:3])\n",
        "        ].item_id)\n",
        "]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 468
        },
        "id": "jM6xwiUGKyn_",
        "outputId": "a266f179-a8f1-41ad-d3b0-e5c7cf341ca2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['136', '119', '125', '128', '122', '152', '129', '156', '1', '109']\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "    id                         cat_1  \\\n",
              "0  136                     Фестиваль   \n",
              "1  119  Фестиваль, Концерт, Погулять   \n",
              "2  125           Погулять, Экскурсия   \n",
              "\n",
              "                                       cat_2  \\\n",
              "0  Животные, Спорт, Образовательное, Уличная   \n",
              "1             Песни, Природа, Спорт, Уличная   \n",
              "2        Уличная, Природа, Животные, История   \n",
              "\n",
              "                                                name  \\\n",
              "0  Открытие летнего сезона Центра национальных ко...   \n",
              "1    Фестиваль «Запуск лета: парк в ритме поп-рока»    \n",
              "2  Экотропы. «Там, на неведомых дорожках» в парке...   \n",
              "\n",
              "                                                desc  \\\n",
              "0  В программе:  Фестиваль выходного дня иммерсив...   \n",
              "1  В программе: Ходулисты, Танцевальная тренировк...   \n",
              "2  Во время экскурсии можно будет познакомиться с...   \n",
              "\n",
              "                           date                                      loc  \\\n",
              "0       Даты: 28 апреля с 15:00               Место: ВДНХ, Выводной круг   \n",
              "1  Даты: 1 мая с 12:00 до 21:00  Место: Парк Сокольники, Сад астрономов    \n",
              "2                       Даты: -     Место: 55.693378, 37.788162 (дальше)   \n",
              "\n",
              "                        price                      link  \n",
              "0  Стоимость: Вход свободный   Ссылка: Расписание ЗДЕСЬ  \n",
              "1  Стоимость: Вход свободный              Ссылка: ЗДЕСЬ  \n",
              "2        Стоимость: бесплатно            Ссылка: ссылка  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-66bd3add-686d-47e6-8882-a356659a9a3f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>cat_1</th>\n",
              "      <th>cat_2</th>\n",
              "      <th>name</th>\n",
              "      <th>desc</th>\n",
              "      <th>date</th>\n",
              "      <th>loc</th>\n",
              "      <th>price</th>\n",
              "      <th>link</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>136</td>\n",
              "      <td>Фестиваль</td>\n",
              "      <td>Животные, Спорт, Образовательное, Уличная</td>\n",
              "      <td>Открытие летнего сезона Центра национальных ко...</td>\n",
              "      <td>В программе:  Фестиваль выходного дня иммерсив...</td>\n",
              "      <td>Даты: 28 апреля с 15:00</td>\n",
              "      <td>Место: ВДНХ, Выводной круг</td>\n",
              "      <td>Стоимость: Вход свободный</td>\n",
              "      <td>Ссылка: Расписание ЗДЕСЬ</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>119</td>\n",
              "      <td>Фестиваль, Концерт, Погулять</td>\n",
              "      <td>Песни, Природа, Спорт, Уличная</td>\n",
              "      <td>Фестиваль «Запуск лета: парк в ритме поп-рока»</td>\n",
              "      <td>В программе: Ходулисты, Танцевальная тренировк...</td>\n",
              "      <td>Даты: 1 мая с 12:00 до 21:00</td>\n",
              "      <td>Место: Парк Сокольники, Сад астрономов</td>\n",
              "      <td>Стоимость: Вход свободный</td>\n",
              "      <td>Ссылка: ЗДЕСЬ</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>125</td>\n",
              "      <td>Погулять, Экскурсия</td>\n",
              "      <td>Уличная, Природа, Животные, История</td>\n",
              "      <td>Экотропы. «Там, на неведомых дорожках» в парке...</td>\n",
              "      <td>Во время экскурсии можно будет познакомиться с...</td>\n",
              "      <td>Даты: -</td>\n",
              "      <td>Место: 55.693378, 37.788162 (дальше)</td>\n",
              "      <td>Стоимость: бесплатно</td>\n",
              "      <td>Ссылка: ссылка</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-66bd3add-686d-47e6-8882-a356659a9a3f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-66bd3add-686d-47e6-8882-a356659a9a3f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-66bd3add-686d-47e6-8882-a356659a9a3f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-5b4f057c-d483-4bdf-858a-97be8f5815d1\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5b4f057c-d483-4bdf-858a-97be8f5815d1')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-5b4f057c-d483-4bdf-858a-97be8f5815d1 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"]\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"136\",\n          \"119\",\n          \"125\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0424\\u0435\\u0441\\u0442\\u0438\\u0432\\u0430\\u043b\\u044c\",\n          \"\\u0424\\u0435\\u0441\\u0442\\u0438\\u0432\\u0430\\u043b\\u044c, \\u041a\\u043e\\u043d\\u0446\\u0435\\u0440\\u0442, \\u041f\\u043e\\u0433\\u0443\\u043b\\u044f\\u0442\\u044c\",\n          \"\\u041f\\u043e\\u0433\\u0443\\u043b\\u044f\\u0442\\u044c, \\u042d\\u043a\\u0441\\u043a\\u0443\\u0440\\u0441\\u0438\\u044f\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0416\\u0438\\u0432\\u043e\\u0442\\u043d\\u044b\\u0435, \\u0421\\u043f\\u043e\\u0440\\u0442, \\u041e\\u0431\\u0440\\u0430\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e\\u0435, \\u0423\\u043b\\u0438\\u0447\\u043d\\u0430\\u044f\",\n          \"\\u041f\\u0435\\u0441\\u043d\\u0438, \\u041f\\u0440\\u0438\\u0440\\u043e\\u0434\\u0430, \\u0421\\u043f\\u043e\\u0440\\u0442, \\u0423\\u043b\\u0438\\u0447\\u043d\\u0430\\u044f\",\n          \"\\u0423\\u043b\\u0438\\u0447\\u043d\\u0430\\u044f, \\u041f\\u0440\\u0438\\u0440\\u043e\\u0434\\u0430, \\u0416\\u0438\\u0432\\u043e\\u0442\\u043d\\u044b\\u0435, \\u0418\\u0441\\u0442\\u043e\\u0440\\u0438\\u044f\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u041e\\u0442\\u043a\\u0440\\u044b\\u0442\\u0438\\u0435 \\u043b\\u0435\\u0442\\u043d\\u0435\\u0433\\u043e \\u0441\\u0435\\u0437\\u043e\\u043d\\u0430 \\u0426\\u0435\\u043d\\u0442\\u0440\\u0430 \\u043d\\u0430\\u0446\\u0438\\u043e\\u043d\\u0430\\u043b\\u044c\\u043d\\u044b\\u0445 \\u043a\\u043e\\u043d\\u043d\\u044b\\u0445 \\u0442\\u0440\\u0430\\u0434\\u0438\\u0446\\u0438\\u0439 \\u043d\\u0430 \\u0412\\u0414\\u041d\\u0425 28 \\u0430\\u043f\\u0440\\u0435\\u043b\\u044f\\u00a0\",\n          \"\\u0424\\u0435\\u0441\\u0442\\u0438\\u0432\\u0430\\u043b\\u044c \\u00ab\\u0417\\u0430\\u043f\\u0443\\u0441\\u043a \\u043b\\u0435\\u0442\\u0430: \\u043f\\u0430\\u0440\\u043a \\u0432 \\u0440\\u0438\\u0442\\u043c\\u0435 \\u043f\\u043e\\u043f-\\u0440\\u043e\\u043a\\u0430\\u00bb\\u00a0\",\n          \"\\u042d\\u043a\\u043e\\u0442\\u0440\\u043e\\u043f\\u044b. \\u00ab\\u0422\\u0430\\u043c, \\u043d\\u0430 \\u043d\\u0435\\u0432\\u0435\\u0434\\u043e\\u043c\\u044b\\u0445 \\u0434\\u043e\\u0440\\u043e\\u0436\\u043a\\u0430\\u0445\\u00bb \\u0432 \\u043f\\u0430\\u0440\\u043a\\u0435 \\u041a\\u0443\\u0437\\u044c\\u043c\\u0438\\u043d\\u043a\\u0438-\\u041b\\u044e\\u0431\\u043b\\u0438\\u043d\\u043e 3,7 \\u043a\\u043c\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"desc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0412 \\u043f\\u0440\\u043e\\u0433\\u0440\\u0430\\u043c\\u043c\\u0435: \\u00a0\\u0424\\u0435\\u0441\\u0442\\u0438\\u0432\\u0430\\u043b\\u044c \\u0432\\u044b\\u0445\\u043e\\u0434\\u043d\\u043e\\u0433\\u043e \\u0434\\u043d\\u044f \\u0438\\u043c\\u043c\\u0435\\u0440\\u0441\\u0438\\u0432\\u043d\\u043e\\u0439 \\u0438\\u0433\\u0440\\u044b \\u2013 \\u0433\\u043e\\u0441\\u0442\\u0438 \\u043d\\u0430\\u0443\\u0447\\u0430\\u0442\\u0441\\u044f \\u0441\\u0438\\u0434\\u0435\\u0442\\u044c \\u0432\\u00a0\\u0441\\u0435\\u0434\\u043b\\u0435, \\u0441\\u0442\\u0440\\u0435\\u043b\\u044f\\u0442\\u044c \\u0438\\u0437\\u00a0\\u043b\\u0443\\u043a\\u0430, \\u043e\\u0431\\u0440\\u0430\\u0449\\u0430\\u0442\\u044c\\u0441\\u044f \\u0441\\u00a0\\u0448\\u0430\\u0448\\u043a\\u043e\\u0439 \\u0438\\u00a0\\u043f\\u0438\\u043a\\u043e\\u0439, \\u0421\\u043e\\u0441\\u0442\\u044f\\u0437\\u0430\\u043d\\u0438\\u044f \\u043f\\u043e \\u0445\\u043e\\u0431\\u0431\\u0438\\u0445\\u043e\\u0440\\u0441\\u0438\\u043d\\u0433\\u0443, \\u0417\\u043d\\u0430\\u043a\\u043e\\u043c\\u0441\\u0442\\u0432\\u043e \\u0441\\u00a0\\u043a\\u043e\\u043d\\u043d\\u044b\\u043c \\u0441\\u043e\\u0441\\u0442\\u0430\\u0432\\u043e\\u043c \\u041a\\u0440\\u0435\\u043c\\u043b\\u0435\\u0432\\u0441\\u043a\\u043e\\u0439 \\u0448\\u043a\\u043e\\u043b\\u044b \\u0432\\u0435\\u0440\\u0445\\u043e\\u0432\\u043e\\u0439 \\u0435\\u0437\\u0434\\u044b, \\u041a\\u043e\\u043d\\u043d\\u043e\\u0435 \\u043f\\u0440\\u0435\\u0434\\u0441\\u0442\\u0430\\u0432\\u043b\\u0435\\u043d\\u0438\\u0435 \\u2013 \\u0442\\u0435\\u043d\\u0442\\u043f\\u0435\\u0433\\u0433\\u0438\\u043d\\u0433, \\u043a\\u043e\\u043d\\u043d\\u0430\\u044f \\u0441\\u0442\\u0440\\u0435\\u043b\\u044c\\u0431\\u0430 \\u0438\\u0437\\u00a0\\u043b\\u0443\\u043a\\u0430 \\u0438\\u00a0\\u0434\\u0436\\u0438\\u0433\\u0438\\u0442\\u043e\\u0432\\u043a\\u0430\",\n          \"\\u0412 \\u043f\\u0440\\u043e\\u0433\\u0440\\u0430\\u043c\\u043c\\u0435: \\u0425\\u043e\\u0434\\u0443\\u043b\\u0438\\u0441\\u0442\\u044b, \\u0422\\u0430\\u043d\\u0446\\u0435\\u0432\\u0430\\u043b\\u044c\\u043d\\u0430\\u044f \\u0442\\u0440\\u0435\\u043d\\u0438\\u0440\\u043e\\u0432\\u043a\\u0430, \\u0421\\u043a\\u0435\\u0439\\u0442\\u0431\\u043e\\u0440\\u0434-\\u0448\\u043e\\u0443, \\u0421\\u043e\\u0440\\u0435\\u0432\\u043d\\u043e\\u0432\\u0430\\u043d\\u0438\\u044f \\u043f\\u043e \\u0413\\u0422\\u041e, \\u0417\\u0430\\u043d\\u044f\\u0442\\u0438\\u044f \\u043f\\u043e \\u0441\\u0442\\u0440\\u0435\\u0442\\u0447\\u0438\\u043d\\u0433\\u0443, \\u041c\\u0430\\u0441\\u0442\\u0435\\u0440-\\u043a\\u043b\\u0430\\u0441\\u0441 \\u043f\\u043e \\u0433\\u043b\\u0430\\u0437\\u0438\\u0440\\u043e\\u0432\\u0430\\u043d\\u0438\\u044e \\u0444\\u0440\\u0443\\u043a\\u0442\\u043e\\u0432 \\u0431\\u0435\\u043b\\u044c\\u0433\\u0438\\u0439\\u0441\\u043a\\u0438\\u043c \\u0448\\u043e\\u043a\\u043e\\u043b\\u0430\\u0434\\u043e\\u043c, \\u0412\\u044b\\u043f\\u0443\\u0441\\u043a \\u043d\\u043e\\u0432\\u043e\\u0439 \\u043f\\u0430\\u0440\\u044b \\u043b\\u0435\\u0431\\u0435\\u0434\\u0435\\u0439 \\u0441 \\u043b\\u0435\\u043a\\u0446\\u0438\\u0435\\u0439 \\u043e\\u0440\\u043d\\u0438\\u0442\\u043e\\u043b\\u043e\\u0433\\u0430, \\u0412 \\u0411\\u043e\\u043b\\u044c\\u0448\\u043e\\u043c \\u0440\\u043e\\u0437\\u0430\\u0440\\u0438\\u0438 \\u043f\\u043e\\u044f\\u0432\\u0438\\u0442\\u0441\\u044f \\u0441\\u0432\\u0435\\u0442\\u043e\\u0432\\u043e\\u0435 \\u043e\\u0431\\u043e\\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u0438\\u0435 \\u043b\\u0430\\u0432\\u043e\\u0447\\u043a\\u0438 \\u0432\\u043b\\u044e\\u0431\\u043b\\u0435\\u043d\\u043d\\u044b\\u0445, \\u041f\\u043e\\u043f-\\u0440\\u043e\\u043a \\u043a\\u043e\\u043d\\u0446\\u0435\\u0440\\u0442, \\u041a\\u0440\\u0435\\u0430\\u0442\\u0438\\u0432\\u043d\\u0430\\u044f \\u0444\\u043e\\u0442\\u043e\\u0437\\u043e\\u043d\\u0430\",\n          \"\\u0412\\u043e \\u0432\\u0440\\u0435\\u043c\\u044f \\u044d\\u043a\\u0441\\u043a\\u0443\\u0440\\u0441\\u0438\\u0438 \\u043c\\u043e\\u0436\\u043d\\u043e \\u0431\\u0443\\u0434\\u0435\\u0442 \\u043f\\u043e\\u0437\\u043d\\u0430\\u043a\\u043e\\u043c\\u0438\\u0442\\u044c\\u0441\\u044f \\u0441 \\u0444\\u043b\\u043e\\u0440\\u043e\\u0439 \\u0438 \\u0444\\u0430\\u0443\\u043d\\u043e\\u0439 \\u043f\\u0440\\u0438\\u0440\\u043e\\u0434\\u043d\\u043e\\u0433\\u043e \\u043f\\u0430\\u0440\\u043a\\u0430, \\u043e\\u0441\\u043c\\u043e\\u0442\\u0440\\u0435\\u0442\\u044c \\u0441\\u0430\\u043c\\u044b\\u0435 \\u0437\\u0430\\u043f\\u043e\\u0432\\u0435\\u0434\\u043d\\u044b\\u0435 \\u0443\\u0433\\u043e\\u043b\\u043a\\u0438 \\u0438 \\u043f\\u0440\\u043e\\u0433\\u0443\\u043b\\u044f\\u0442\\u044c\\u0441\\u044f \\u043f\\u043e \\u0436\\u0438\\u0432\\u043e\\u043f\\u0438\\u0441\\u043d\\u044b\\u043c \\u0442\\u0440\\u043e\\u043f\\u0430\\u043c. \\u042d\\u043a\\u043e\\u043b\\u043e\\u0433\\u0438\\u0447\\u0435\\u0441\\u043a\\u0430\\u044f \\u0442\\u0440\\u043e\\u043f\\u0430 \\u043f\\u0440\\u043e\\u0445\\u043e\\u0434\\u0438\\u0442 \\u0447\\u0435\\u0440\\u0435\\u0437 \\u043f\\u0440\\u0430\\u043a\\u0442\\u0438\\u0447\\u0435\\u0441\\u043a\\u0438 \\u043d\\u0435\\u0442\\u0440\\u043e\\u043d\\u0443\\u0442\\u044b\\u0439 \\u043b\\u0435\\u0441\\u043e\\u043f\\u0430\\u0440\\u043a\\u043e\\u0432\\u044b\\u0439 \\u043c\\u0430\\u0441\\u0441\\u0438\\u0432, \\u043f\\u043e\\u044d\\u0442\\u043e\\u043c\\u0443 \\u0443 \\u044d\\u043a\\u0441\\u043a\\u0443\\u0440\\u0441\\u0430\\u043d\\u0442\\u043e\\u0432 \\u0431\\u0443\\u0434\\u0435\\u0442 \\u0432\\u043e\\u0437\\u043c\\u043e\\u0436\\u043d\\u043e\\u0441\\u0442\\u044c \\u0443\\u0432\\u0438\\u0434\\u0435\\u0442\\u044c \\u0440\\u0435\\u0434\\u043a\\u0438\\u0435 \\u0440\\u0430\\u0441\\u0442\\u0435\\u043d\\u0438\\u044f, \\u0438\\u043d\\u0442\\u0435\\u0440\\u0435\\u0441\\u043d\\u044b\\u0435 \\u0434\\u0435\\u0440\\u0435\\u0432\\u044c\\u044f, \\u043f\\u043e\\u0441\\u043b\\u0443\\u0448\\u0430\\u0442\\u044c \\u043f\\u0442\\u0438\\u0446 \\u0432 \\u0438\\u0445 \\u0435\\u0441\\u0442\\u0435\\u0441\\u0442\\u0432\\u0435\\u043d\\u043d\\u043e\\u0439 \\u0441\\u0440\\u0435\\u0434\\u0435 \\u043e\\u0431\\u0438\\u0442\\u0430\\u043d\\u0438\\u044f. \\u041c\\u0430\\u0440\\u0448\\u0440\\u0443\\u0442 \\u0431\\u0443\\u0434\\u0435\\u0442 \\u0438\\u043d\\u0442\\u0435\\u0440\\u0435\\u0441\\u0435\\u043d \\u043a\\u0430\\u043a \\u0434\\u0435\\u0442\\u044f\\u043c, \\u0442\\u0430\\u043a \\u0438 \\u0432\\u0437\\u0440\\u043e\\u0441\\u043b\\u044b\\u043c, \\u0438 \\u043d\\u0435 \\u0443\\u0442\\u043e\\u043c\\u0438\\u0442\\u0435\\u043b\\u0435\\u043d \\u0434\\u043b\\u044f \\u043b\\u044e\\u0431\\u043e\\u0433\\u043e \\u0432\\u043e\\u0437\\u0440\\u0430\\u0441\\u0442\\u0430, \\u043f\\u043e\\u0441\\u043a\\u043e\\u043b\\u044c\\u043a\\u0443 \\u044d\\u043a\\u043e\\u0442\\u0440\\u043e\\u043f\\u0430 \\u043d\\u0430 \\u0432\\u0441\\u0435\\u043c \\u043f\\u0440\\u043e\\u0442\\u044f\\u0436\\u0435\\u043d\\u0438\\u0438 \\u043e\\u0431\\u043e\\u0440\\u0443\\u0434\\u043e\\u0432\\u0430\\u043d\\u0430 \\u0441\\u043a\\u0430\\u043c\\u0435\\u0439\\u043a\\u0430\\u043c\\u0438, \\u043c\\u0435\\u0431\\u0435\\u043b\\u044c\\u044e \\u0438\\u0437 \\u0431\\u0440\\u0435\\u0432\\u0435\\u043d, \\u0431\\u0435\\u0441\\u0435\\u0434\\u043a\\u0430\\u043c\\u0438 \\u0434\\u043b\\u044f \\u0442\\u0438\\u0445\\u043e\\u0433\\u043e \\u043e\\u0442\\u0434\\u044b\\u0445\\u0430. \\u0414\\u0435\\u0442\\u0438 \\u043d\\u0430\\u0443\\u0447\\u0430\\u0442\\u0441\\u044f \\u0440\\u0430\\u0437\\u0431\\u0438\\u0440\\u0430\\u0442\\u044c\\u0441\\u044f \\u0432 \\u043f\\u043e\\u0440\\u043e\\u0434\\u0430\\u0445 \\u0434\\u0435\\u0440\\u0435\\u0432\\u044c\\u0435\\u0432, \\u0443\\u0437\\u043d\\u0430\\u044e\\u0442 \\u043c\\u043d\\u043e\\u0433\\u043e \\u043b\\u044e\\u0431\\u043e\\u043f\\u044b\\u0442\\u043d\\u044b\\u0445 \\u0438 \\u043f\\u043e\\u043b\\u0435\\u0437\\u043d\\u044b\\u0445 \\u0444\\u0430\\u043a\\u0442\\u043e\\u0432 \\u043e \\u0440\\u0430\\u0441\\u0442\\u0435\\u043d\\u0438\\u044f\\u0445, \\u043f\\u0442\\u0438\\u0446\\u0430\\u0445 \\u0438 \\u0436\\u0438\\u0432\\u043e\\u0442\\u043d\\u044b\\u0445 \\u043f\\u0430\\u0440\\u043a\\u0430. \\u0412 \\u0445\\u043e\\u0434\\u0435 \\u044d\\u043a\\u0441\\u043a\\u0443\\u0440\\u0441\\u0438\\u0438 \\u0438\\u043c \\u043f\\u043e\\u043d\\u0430\\u0434\\u043e\\u0431\\u0438\\u0442\\u0441\\u044f \\u0432\\u043d\\u0438\\u043c\\u0430\\u043d\\u0438\\u0435 \\u0438 \\u0441\\u043c\\u0435\\u043a\\u0430\\u043b\\u043a\\u0430, \\u0447\\u0442\\u043e\\u0431\\u044b \\u0441 \\u043f\\u043e\\u043c\\u043e\\u0449\\u044c\\u044e \\u043f\\u043e\\u0434\\u0441\\u043a\\u0430\\u0437\\u043e\\u043a \\u043d\\u0430\\u0439\\u0442\\u0438 \\u0441\\u043f\\u0440\\u044f\\u0442\\u0430\\u043d\\u043d\\u044b\\u0439 \\u0432 \\u043b\\u0435\\u0441\\u0443 \\u0441\\u044e\\u0440\\u043f\\u0440\\u0438\\u0437.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0414\\u0430\\u0442\\u044b: 28 \\u0430\\u043f\\u0440\\u0435\\u043b\\u044f \\u0441 15:00\",\n          \"\\u0414\\u0430\\u0442\\u044b: 1 \\u043c\\u0430\\u044f \\u0441 12:00 \\u0434\\u043e 21:00\",\n          \"\\u0414\\u0430\\u0442\\u044b: -\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"loc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u0412\\u0414\\u041d\\u0425, \\u0412\\u044b\\u0432\\u043e\\u0434\\u043d\\u043e\\u0439 \\u043a\\u0440\\u0443\\u0433\",\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041f\\u0430\\u0440\\u043a \\u0421\\u043e\\u043a\\u043e\\u043b\\u044c\\u043d\\u0438\\u043a\\u0438, \\u0421\\u0430\\u0434 \\u0430\\u0441\\u0442\\u0440\\u043e\\u043d\\u043e\\u043c\\u043e\\u0432\\u00a0\",\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: 55.693378, 37.788162 (\\u0434\\u0430\\u043b\\u044c\\u0448\\u0435)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: \\u0431\\u0435\\u0441\\u043f\\u043b\\u0430\\u0442\\u043d\\u043e\",\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: \\u0412\\u0445\\u043e\\u0434 \\u0441\\u0432\\u043e\\u0431\\u043e\\u0434\\u043d\\u044b\\u0439\\u00a0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"link\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: \\u0420\\u0430\\u0441\\u043f\\u0438\\u0441\\u0430\\u043d\\u0438\\u0435 \\u0417\\u0414\\u0415\\u0421\\u042c\",\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: \\u0417\\u0414\\u0415\\u0421\\u042c\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    id     cat_1                               cat_2   name  \\\n",
              "10  11  Выставка  Современное Искусство, Арт-Объекты  Тупик   \n",
              "\n",
              "                                                 desc                 date  \\\n",
              "10  Музей ART4 тестирует новый выставочный формат,...  Даты: по 30 апреля.   \n",
              "\n",
              "                                                  loc              price  \\\n",
              "10  Место: Москва, Хлыновский тупик, 4. галерея AR...  Стоимость: 300 ₽.   \n",
              "\n",
              "                                 link  \n",
              "10  Ссылка: https://www.art4.ru/show/  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c8cd5f69-7802-488b-b525-285cc7cf9391\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>cat_1</th>\n",
              "      <th>cat_2</th>\n",
              "      <th>name</th>\n",
              "      <th>desc</th>\n",
              "      <th>date</th>\n",
              "      <th>loc</th>\n",
              "      <th>price</th>\n",
              "      <th>link</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>11</td>\n",
              "      <td>Выставка</td>\n",
              "      <td>Современное Искусство, Арт-Объекты</td>\n",
              "      <td>Тупик</td>\n",
              "      <td>Музей ART4 тестирует новый выставочный формат,...</td>\n",
              "      <td>Даты: по 30 апреля.</td>\n",
              "      <td>Место: Москва, Хлыновский тупик, 4. галерея AR...</td>\n",
              "      <td>Стоимость: 300 ₽.</td>\n",
              "      <td>Ссылка: https://www.art4.ru/show/</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c8cd5f69-7802-488b-b525-285cc7cf9391')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c8cd5f69-7802-488b-b525-285cc7cf9391 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c8cd5f69-7802-488b-b525-285cc7cf9391');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"]\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"11\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0412\\u044b\\u0441\\u0442\\u0430\\u0432\\u043a\\u0430\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0421\\u043e\\u0432\\u0440\\u0435\\u043c\\u0435\\u043d\\u043d\\u043e\\u0435 \\u0418\\u0441\\u043a\\u0443\\u0441\\u0441\\u0442\\u0432\\u043e, \\u0410\\u0440\\u0442-\\u041e\\u0431\\u044a\\u0435\\u043a\\u0442\\u044b\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0422\\u0443\\u043f\\u0438\\u043a\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"desc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u041c\\u0443\\u0437\\u0435\\u0439 ART4 \\u0442\\u0435\\u0441\\u0442\\u0438\\u0440\\u0443\\u0435\\u0442 \\u043d\\u043e\\u0432\\u044b\\u0439 \\u0432\\u044b\\u0441\\u0442\\u0430\\u0432\\u043e\\u0447\\u043d\\u044b\\u0439 \\u0444\\u043e\\u0440\\u043c\\u0430\\u0442, \\u0432 \\u0440\\u0430\\u043c\\u043a\\u0430\\u0445 \\u043a\\u043e\\u0442\\u043e\\u0440\\u043e\\u0433\\u043e \\u0431\\u0443\\u0434\\u0435\\u0442 \\u0440\\u0430\\u0431\\u043e\\u0442\\u0430\\u0442\\u044c \\u0441\\u0440\\u0430\\u0437\\u0443 \\u0441 \\u043d\\u0435\\u0441\\u043a\\u043e\\u043b\\u044c\\u043a\\u0438\\u043c\\u0438 \\u0441\\u043e\\u0432\\u0440\\u0435\\u043c\\u0435\\u043d\\u043d\\u044b\\u043c\\u0438 \\u0445\\u0443\\u0434\\u043e\\u0436\\u043d\\u0438\\u043a\\u0430\\u043c\\u0438. \\u041d\\u043e\\u0432\\u044b\\u0439 \\u043c\\u0435\\u0441\\u044f\\u0446 \\u2014 \\u043d\\u043e\\u0432\\u044b\\u0435 \\u0438\\u043c\\u0435\\u043d\\u0430 \\u0438 \\u043b\\u0435\\u0439\\u0442\\u043c\\u043e\\u0442\\u0438\\u0432\\u044b. \\u0421\\u0435\\u0439\\u0447\\u0430\\u0441 \\u0437\\u0434\\u0435\\u0441\\u044c \\u043f\\u043e\\u043a\\u0430\\u0437\\u044b\\u0432\\u0430\\u044e\\u0442 \\u0440\\u0430\\u0431\\u043e\\u0442\\u044b \\u0422\\u0438\\u043c\\u0430 \\u041f\\u0430\\u0440\\u0449\\u0438\\u043a\\u043e\\u0432\\u0430, \\u0421\\u0430\\u0448\\u0438 \\u041b\\u0435\\u043c\\u0438\\u0448\\u0430, \\u041f\\u043e\\u043b\\u0438\\u043d\\u044b \\u0420\\u0443\\u043a\\u0430\\u0432\\u0438\\u0447\\u043a\\u0438\\u043d\\u043e\\u0439 \\u0438 \\u0434\\u0440\\u0443\\u0433\\u0438\\u0445 \\u0438\\u043c\\u0435\\u043d\\u0438\\u0442\\u044b\\u0445 \\u0442\\u0432\\u043e\\u0440\\u0446\\u043e\\u0432. \\u041a\\u0443\\u0440\\u0430\\u0442\\u043e\\u0440\\u044b \\u043d\\u0430\\u043f\\u043e\\u043b\\u043d\\u0438\\u043b\\u0438 \\u043f\\u0440\\u043e\\u0441\\u0442\\u0440\\u0430\\u043d\\u0441\\u0442\\u0432\\u043e \\u0438\\u0445 \\u0444\\u043e\\u0442\\u043e\\u0433\\u0440\\u0430\\u0444\\u0438\\u044f\\u043c\\u0438 \\u0438 \\u0436\\u0438\\u0432\\u043e\\u043f\\u0438\\u0441\\u043d\\u044b\\u043c\\u0438 \\u0445\\u043e\\u043b\\u0441\\u0442\\u0430\\u043c\\u0438, \\u0432 \\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0445 \\u043c\\u043e\\u0436\\u043d\\u043e \\u0432\\u0441\\u0442\\u0440\\u0435\\u0442\\u0438\\u0442\\u044c \\u0438\\u0441\\u0441\\u043b\\u0435\\u0434\\u043e\\u0432\\u0430\\u043d\\u0438\\u0435 \\u0442\\u0435\\u043b\\u0435\\u0441\\u043d\\u043e\\u0439 \\u043d\\u0435\\u0441\\u0432\\u043e\\u0431\\u043e\\u0434\\u044b \\u0438 \\u0442\\u043e\\u0442\\u0430\\u043b\\u044c\\u043d\\u043e\\u0433\\u043e \\u043e\\u0434\\u0438\\u043d\\u043e\\u0447\\u0435\\u0441\\u0442\\u0432\\u0430.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0414\\u0430\\u0442\\u044b: \\u043f\\u043e 30 \\u0430\\u043f\\u0440\\u0435\\u043b\\u044f.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"loc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041c\\u043e\\u0441\\u043a\\u0432\\u0430, \\u0425\\u043b\\u044b\\u043d\\u043e\\u0432\\u0441\\u043a\\u0438\\u0439 \\u0442\\u0443\\u043f\\u0438\\u043a, 4. \\u0433\\u0430\\u043b\\u0435\\u0440\\u0435\\u044f ART4. (\\u0433\\u043e\\u0440\\u043e\\u0434)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: 300 \\u20bd.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"link\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: https://www.art4.ru/show/\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 187
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def wait_for_file_upload():\n",
        "    uploaded = files.upload()\n",
        "    filename = list(uploaded.keys())[0]\n",
        "    # file_content = uploaded[filename]\n",
        "    print(f'File \"{filename}\" uploaded successfully.')\n",
        "    return filename #, file_content"
      ],
      "metadata": {
        "id": "CwIM2mnNKymK"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def iterate(model_in, ds_in, first_intrc_set, start_train_intrc, start_train_event_ftrs,\n",
        "            start_test_event_ftrs, test_item_ftrs, user_ftrs_data, user_ftrs,\n",
        "            user_ids, event_data, weight_coef, random_seeds):\n",
        "\n",
        "    for i, seed in enumerate(random_seeds):\n",
        "\n",
        "        print(f'\\033[1mStarting round {i+1}!\\033[0m\\n')\n",
        "\n",
        "        if i == 0:\n",
        "            model = model_in\n",
        "            train_event_ftrs = start_train_event_ftrs\n",
        "            test_event_ftrs = start_test_event_ftrs\n",
        "            train_intrc = start_train_intrc\n",
        "            new_interactions = first_intrc_set\n",
        "            extended_interactions =  start_train_intrc\n",
        "            new_train_event_features = start_train_event_ftrs\n",
        "            test_event_features_cut = start_test_event_ftrs\n",
        "\n",
        "        elif i in [1, 2, 3, 4]:\n",
        "            print('Please upload new interactions:\\n')\n",
        "            filename = wait_for_file_upload()\n",
        "            new_interactions = pd.read_excel(filename, index_col=0)\n",
        "            with open(f'{i}_group_based_model.pkl', 'rb') as mfile:\n",
        "                model = pickle.load(mfile)\n",
        "\n",
        "        new_interactions.columns = new_interactions.columns.astype(str)\n",
        "        new_interactions = new_interactions.dropna(axis=1, how='all')\n",
        "        new_interactions = new_interactions.fillna(0).replace(1, 5).replace(-1, 1)\n",
        "\n",
        "        NEW_ID_SET = new_interactions.columns.tolist()\n",
        "\n",
        "        if i != 0:\n",
        "          # проверяем что правильный эксель загрузили\n",
        "          assert sorted(rec_to_show['id'].tolist() + rand_to_show['id'].tolist()) == sorted(NEW_ID_SET)\n",
        "\n",
        "        extended_interactions = pd.concat([extended_interactions, new_interactions], axis=1).astype(int)\n",
        "        extended_interactions_matrix = sparse.csr_matrix(extended_interactions.values)\n",
        "\n",
        "        new_event_features = start_test_event_ftrs[start_test_event_ftrs.item_id.isin(NEW_ID_SET)] # !!!\n",
        "\n",
        "        new_train_event_features = pd.concat([new_train_event_features, new_event_features])\n",
        "\n",
        "        new_train_item_features = ds_in.build_item_features(\n",
        "        (\n",
        "            (x['item_id'], {f: x[f] for f in new_train_event_features.columns if f != 'item_id'})\n",
        "            for _, x in new_train_event_features.iterrows()\n",
        "        ), normalize=False\n",
        "        )\n",
        "\n",
        "        model.fit_partial(\n",
        "        interactions=extended_interactions_matrix,\n",
        "        user_features=user_ftrs,\n",
        "        item_features=new_train_item_features,\n",
        "        epochs=2,\n",
        "        num_threads=1\n",
        "        )\n",
        "\n",
        "        with open(f'{i+1}_group_based_model.pkl', 'wb') as model_file:\n",
        "            pickle.dump(model, model_file)\n",
        "\n",
        "        group_profile = aggregate_user_profiles(\n",
        "            model, ds_in, user_ftrs_data, user_ftrs, user_ids, weight_coef\n",
        "            )\n",
        "\n",
        "        test_event_features_cut = test_event_features_cut.drop(\n",
        "            test_event_features_cut[\n",
        "                test_event_features_cut.item_id.isin(NEW_ID_SET)\n",
        "                ].index, axis=0)\n",
        "\n",
        "        top_n_group_recommendations = get_group_recommendations(\n",
        "            model,\n",
        "            ds_in,\n",
        "            group_profile,\n",
        "            test_item_ftrs, # не обрезанный потому что зачем, у медели и так есть все фичи тестовых пои\n",
        "            test_event_features_cut, # обрезанный потому что нельзя рекомендовать лайкнутые\n",
        "            user_ftrs\n",
        "        )\n",
        "        print('TOP-10 rec indices: ', top_n_group_recommendations)\n",
        "\n",
        "        # display(event_data[event_data.id.isin(top_n_group_recommendations)])\n",
        "\n",
        "        if i in [0, 1, 2, 3]:\n",
        "            rec_to_show = event_data[event_data['id'].isin(top_n_group_recommendations[:3])]\\\n",
        "              .set_index('id')\\\n",
        "              .reindex(top_n_group_recommendations[:3])\\\n",
        "              .reset_index()\n",
        "\n",
        "            # random seed для рандома рекомендации\n",
        "            random.seed(seed)\n",
        "            rand_to_show = event_data[\n",
        "              event_data.id\n",
        "              == random.choice(test_event_features_cut[\n",
        "                  ~test_event_features_cut.item_id.isin(top_n_group_recommendations[:3])\n",
        "                  ].item_id.values)\n",
        "              ]\n",
        "\n",
        "        else:\n",
        "            rec_to_show = event_data[event_data['id'].isin(top_n_group_recommendations[:5])]\\\n",
        "              .set_index('id')\\\n",
        "              .reindex(top_n_group_recommendations[:5])\\\n",
        "              .reset_index()\n",
        "\n",
        "            # random seed для рандома рекомендации\n",
        "            random.seed(seed)\n",
        "            rand_to_show = event_data[\n",
        "    event_data.id.isin(random.choices(test_event_features_cut[\n",
        "        ~test_event_features_cut.item_id.isin(top_n_group_recommendations)\n",
        "        ].item_id.values, k=16))\n",
        "    ]\n",
        "        print('Showing TOP-3 recommendations and one random for now.')\n",
        "        display(rec_to_show)\n",
        "        display(rand_to_show)\n",
        "\n",
        "    return rec_to_show['id'].tolist(), rec_to_show['id'].tolist() + rand_to_show['id'].tolist()"
      ],
      "metadata": {
        "id": "d7813kU4Kyj0"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# открываем модель натрен только по трен выборке\n",
        "with open('ind_pref_based_model.pkl', 'rb') as mfile:\n",
        "    loaded_model = pickle.load(mfile)\n",
        "\n",
        "\n",
        "user_ids = ['Ксю', 'Аня', 'Лиза', 'Катя', 'Ира', 'Окси']\n",
        "# рандом сидов должно быть столько сколько будет итераций!!! то есть 5!!!\n",
        "seeds = [83, 83, 99, 58, 1098]\n",
        "\n",
        "new1_interactions = pd.read_excel('intrc_it_11.xlsx', index_col=0)"
      ],
      "metadata": {
        "id": "3knhFVNuOTCN"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "recs, forval = iterate(\n",
        "    loaded_model,\n",
        "    dataset,\n",
        "    new1_interactions,\n",
        "    train_interactions,\n",
        "    train_event_features,\n",
        "    test_event_features,\n",
        "    test_item_features,\n",
        "    user_features_data,\n",
        "    user_features,\n",
        "    user_ids,\n",
        "    event_data,\n",
        "    INDIVIDUAL_COEF,\n",
        "    seeds,\n",
        ")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "3Rzs9ZYtKyhg",
        "outputId": "8fe41d18-0dc0-4d44-f960-3c751925dc56"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[1mStarting round 1!\u001b[0m\n",
            "\n",
            "TOP-10 rec indices:  ['152', '21', '122', '156', '109', '86', '128', '105', '104', '157']\n",
            "Showing TOP-3 recommendations and one random for now.\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "    id               cat_1                     cat_2  \\\n",
              "0  152            Выставка  Мультфильмы, Мультимедиа   \n",
              "1   21  Выставка, Погулять         Растения, Природа   \n",
              "2  122            Погулять         Природа, Животные   \n",
              "\n",
              "                                                name  \\\n",
              "0  Постоянная экспозиция мультимедийного центра «...   \n",
              "1  Тюльпаны и другие весенние цветы распустились ...   \n",
              "2  Идём кататься на конном экипаже в Центр воспро...   \n",
              "\n",
              "                                                desc  \\\n",
              "0  Мультимедийный развлекательно-развивающий цент...   \n",
              "1  С 19 марта в Субтропической оранжерее Ботаниче...   \n",
              "2  Катание для детей и взрослых осуществляется по...   \n",
              "\n",
              "                                        date  \\\n",
              "0              Даты: Ежедневно 10:00 — 21:00   \n",
              "1                    Даты: 19 марта - 15 мая   \n",
              "2  Даты: С 1 мая, ежедневно с 10:00 до 16:15   \n",
              "\n",
              "                                                 loc  \\\n",
              "0                           Место: ВДНХ, Павильон №7   \n",
              "1         Место: Москва, Проспект Мира, 26/1 (город)   \n",
              "2  Место: Филиал Московского зоопарка в Сычево, В...   \n",
              "\n",
              "                                               price  \\\n",
              "0                             Стоимость: 550 - 1500р   \n",
              "1  Стоимость:  от 200 рублей, дети до 7 лет и мно...   \n",
              "2                                 Стоимость: от 300р   \n",
              "\n",
              "                                                link  \n",
              "0  Ссылка: https://vdnh.ru/events/ekspozitsiya-mu...  \n",
              "1                                  Ссылка: Подробнее  \n",
              "2                                          Ссылка: -  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-60f7dbd3-9c39-4296-ac04-c2e0890d56f9\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>cat_1</th>\n",
              "      <th>cat_2</th>\n",
              "      <th>name</th>\n",
              "      <th>desc</th>\n",
              "      <th>date</th>\n",
              "      <th>loc</th>\n",
              "      <th>price</th>\n",
              "      <th>link</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>152</td>\n",
              "      <td>Выставка</td>\n",
              "      <td>Мультфильмы, Мультимедиа</td>\n",
              "      <td>Постоянная экспозиция мультимедийного центра «...</td>\n",
              "      <td>Мультимедийный развлекательно-развивающий цент...</td>\n",
              "      <td>Даты: Ежедневно 10:00 — 21:00</td>\n",
              "      <td>Место: ВДНХ, Павильон №7</td>\n",
              "      <td>Стоимость: 550 - 1500р</td>\n",
              "      <td>Ссылка: https://vdnh.ru/events/ekspozitsiya-mu...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>21</td>\n",
              "      <td>Выставка, Погулять</td>\n",
              "      <td>Растения, Природа</td>\n",
              "      <td>Тюльпаны и другие весенние цветы распустились ...</td>\n",
              "      <td>С 19 марта в Субтропической оранжерее Ботаниче...</td>\n",
              "      <td>Даты: 19 марта - 15 мая</td>\n",
              "      <td>Место: Москва, Проспект Мира, 26/1 (город)</td>\n",
              "      <td>Стоимость:  от 200 рублей, дети до 7 лет и мно...</td>\n",
              "      <td>Ссылка: Подробнее</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>122</td>\n",
              "      <td>Погулять</td>\n",
              "      <td>Природа, Животные</td>\n",
              "      <td>Идём кататься на конном экипаже в Центр воспро...</td>\n",
              "      <td>Катание для детей и взрослых осуществляется по...</td>\n",
              "      <td>Даты: С 1 мая, ежедневно с 10:00 до 16:15</td>\n",
              "      <td>Место: Филиал Московского зоопарка в Сычево, В...</td>\n",
              "      <td>Стоимость: от 300р</td>\n",
              "      <td>Ссылка: -</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-60f7dbd3-9c39-4296-ac04-c2e0890d56f9')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-60f7dbd3-9c39-4296-ac04-c2e0890d56f9 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-60f7dbd3-9c39-4296-ac04-c2e0890d56f9');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b20b9930-4511-4d3d-b5e8-1505d68a94c9\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b20b9930-4511-4d3d-b5e8-1505d68a94c9')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b20b9930-4511-4d3d-b5e8-1505d68a94c9 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \")\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"152\",\n          \"21\",\n          \"122\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0412\\u044b\\u0441\\u0442\\u0430\\u0432\\u043a\\u0430\",\n          \"\\u0412\\u044b\\u0441\\u0442\\u0430\\u0432\\u043a\\u0430, \\u041f\\u043e\\u0433\\u0443\\u043b\\u044f\\u0442\\u044c\",\n          \"\\u041f\\u043e\\u0433\\u0443\\u043b\\u044f\\u0442\\u044c\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u041c\\u0443\\u043b\\u044c\\u0442\\u0444\\u0438\\u043b\\u044c\\u043c\\u044b, \\u041c\\u0443\\u043b\\u044c\\u0442\\u0438\\u043c\\u0435\\u0434\\u0438\\u0430\",\n          \"\\u0420\\u0430\\u0441\\u0442\\u0435\\u043d\\u0438\\u044f, \\u041f\\u0440\\u0438\\u0440\\u043e\\u0434\\u0430\",\n          \"\\u041f\\u0440\\u0438\\u0440\\u043e\\u0434\\u0430, \\u0416\\u0438\\u0432\\u043e\\u0442\\u043d\\u044b\\u0435\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u041f\\u043e\\u0441\\u0442\\u043e\\u044f\\u043d\\u043d\\u0430\\u044f \\u044d\\u043a\\u0441\\u043f\\u043e\\u0437\\u0438\\u0446\\u0438\\u044f \\u043c\\u0443\\u043b\\u044c\\u0442\\u0438\\u043c\\u0435\\u0434\\u0438\\u0439\\u043d\\u043e\\u0433\\u043e \\u0446\\u0435\\u043d\\u0442\\u0440\\u0430 \\u00ab\\u0421\\u043e\\u044e\\u0437\\u043c\\u0443\\u043b\\u044c\\u0442\\u043f\\u0430\\u0440\\u043a\\u00bb\",\n          \"\\u0422\\u044e\\u043b\\u044c\\u043f\\u0430\\u043d\\u044b \\u0438 \\u0434\\u0440\\u0443\\u0433\\u0438\\u0435 \\u0432\\u0435\\u0441\\u0435\\u043d\\u043d\\u0438\\u0435 \\u0446\\u0432\\u0435\\u0442\\u044b \\u0440\\u0430\\u0441\\u043f\\u0443\\u0441\\u0442\\u0438\\u043b\\u0438\\u0441\\u044c \\u0432 \\u0410\\u043f\\u0442\\u0435\\u043a\\u0430\\u0440\\u0441\\u043a\\u043e\\u043c \\u043e\\u0433\\u043e\\u0440\\u043e\\u0434\\u0435\",\n          \"\\u0418\\u0434\\u0451\\u043c \\u043a\\u0430\\u0442\\u0430\\u0442\\u044c\\u0441\\u044f \\u043d\\u0430 \\u043a\\u043e\\u043d\\u043d\\u043e\\u043c \\u044d\\u043a\\u0438\\u043f\\u0430\\u0436\\u0435 \\u0432 \\u0426\\u0435\\u043d\\u0442\\u0440 \\u0432\\u043e\\u0441\\u043f\\u0440\\u043e\\u0438\\u0437\\u0432\\u043e\\u0434\\u0441\\u0442\\u0432\\u0430 \\u0440\\u0435\\u0434\\u043a\\u0438\\u0445 \\u0432\\u0438\\u0434\\u043e\\u0432 \\u0436\\u0438\\u0432\\u043e\\u0442\\u043d\\u044b\\u0445\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"desc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u041c\\u0443\\u043b\\u044c\\u0442\\u0438\\u043c\\u0435\\u0434\\u0438\\u0439\\u043d\\u044b\\u0439 \\u0440\\u0430\\u0437\\u0432\\u043b\\u0435\\u043a\\u0430\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e-\\u0440\\u0430\\u0437\\u0432\\u0438\\u0432\\u0430\\u044e\\u0449\\u0438\\u0439 \\u0446\\u0435\\u043d\\u0442\\u0440 \\u00ab\\u0421\\u043e\\u044e\\u0437\\u043c\\u0443\\u043b\\u044c\\u0442\\u043f\\u0430\\u0440\\u043a\\u00bb \\u2014 \\u0443\\u043d\\u0438\\u043a\\u0430\\u043b\\u044c\\u043d\\u0430\\u044f \\u043f\\u043b\\u043e\\u0449\\u0430\\u0434\\u043a\\u0430 \\u0434\\u043b\\u044f \\u0434\\u0435\\u0442\\u0435\\u0439 \\u0438 \\u0432\\u0437\\u0440\\u043e\\u0441\\u043b\\u044b\\u0445, \\u0433\\u0434\\u0435 \\u043a\\u0430\\u0436\\u0434\\u044b\\u0439 \\u0441\\u043c\\u043e\\u0436\\u0435\\u0442 \\u043f\\u043e\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044c\\u0441\\u044f \\u0432 \\u043c\\u0438\\u0440 \\u043b\\u044e\\u0431\\u0438\\u043c\\u044b\\u0445 \\u043c\\u0443\\u043b\\u044c\\u0442\\u0438\\u043f\\u043b\\u0438\\u043a\\u0430\\u0446\\u0438\\u043e\\u043d\\u043d\\u044b\\u0445 \\u0433\\u0435\\u0440\\u043e\\u0435\\u0432, \\u043e\\u0436\\u0438\\u0432\\u0438\\u0442\\u044c \\u0438\\u0445, \\u043f\\u043e\\u043b\\u0443\\u0447\\u0438\\u0442\\u044c \\u043d\\u043e\\u0432\\u044b\\u0435 \\u043d\\u0430\\u0432\\u044b\\u043a\\u0438 \\u0438 \\u0440\\u0430\\u0441\\u043a\\u0440\\u044b\\u0442\\u044c \\u0441\\u0432\\u043e\\u0438 \\u0442\\u0430\\u043b\\u0430\\u043d\\u0442\\u044b. \\u0413\\u043e\\u0441\\u0442\\u0435\\u0439 \\u0436\\u0434\\u0443\\u0442 18 \\u0438\\u043d\\u0442\\u0435\\u0440\\u0430\\u043a\\u0442\\u0438\\u0432\\u043d\\u044b\\u0445 \\u0430\\u0442\\u0442\\u0440\\u0430\\u043a\\u0446\\u0438\\u043e\\u043d\\u043e\\u0432, \\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043e\\u0442\\u0430\\u043d\\u043d\\u044b\\u0445 \\u0441 \\u043f\\u0440\\u0438\\u043c\\u0435\\u043d\\u0435\\u043d\\u0438\\u0435\\u043c \\u0446\\u0438\\u0444\\u0440\\u043e\\u0432\\u044b\\u0445 \\u0442\\u0435\\u0445\\u043d\\u043e\\u043b\\u043e\\u0433\\u0438\\u0439 \\u2014 VR (\\u0432\\u0438\\u0440\\u0442\\u0443\\u0430\\u043b\\u044c\\u043d\\u043e\\u0439 \\u0440\\u0435\\u0430\\u043b\\u044c\\u043d\\u043e\\u0441\\u0442\\u0438), AR (\\u0434\\u043e\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u043d\\u043e\\u0439 \\u0440\\u0435\\u0430\\u043b\\u044c\\u043d\\u043e\\u0441\\u0442\\u0438), 3D-\\u0430\\u043d\\u0438\\u043c\\u0430\\u0446\\u0438\\u0438, \\u0430\\u0432\\u0442\\u043e\\u043d\\u043e\\u043c\\u043d\\u043e\\u0433\\u043e \\u0440\\u0430\\u0437\\u0432\\u0438\\u0442\\u0438\\u044f \\u0438 \\u0431\\u0435\\u0441\\u043a\\u043e\\u043d\\u0435\\u0447\\u043d\\u043e\\u0439 \\u0433\\u0435\\u043d\\u0435\\u0440\\u0430\\u0446\\u0438\\u0438 \\u0433\\u0440\\u0430\\u0444\\u0438\\u0447\\u0435\\u0441\\u043a\\u0438\\u0445 \\u043e\\u0431\\u044a\\u0435\\u043a\\u0442\\u043e\\u0432\",\n          \"\\u0421 19 \\u043c\\u0430\\u0440\\u0442\\u0430 \\u0432 \\u0421\\u0443\\u0431\\u0442\\u0440\\u043e\\u043f\\u0438\\u0447\\u0435\\u0441\\u043a\\u043e\\u0439 \\u043e\\u0440\\u0430\\u043d\\u0436\\u0435\\u0440\\u0435\\u0435 \\u0411\\u043e\\u0442\\u0430\\u043d\\u0438\\u0447\\u0435\\u0441\\u043a\\u043e\\u0433\\u043e \\u0441\\u0430\\u0434\\u0430 \\u041c\\u0413\\u0423 \\u00ab\\u0410\\u043f\\u0442\\u0435\\u043a\\u0430\\u0440\\u0441\\u043a\\u0438\\u0439 \\u043e\\u0433\\u043e\\u0440\\u043e\\u0434\\u00bb \\u043f\\u043e\\u0441\\u0435\\u0442\\u0438\\u0442\\u0435\\u043b\\u0438 \\u043c\\u043e\\u0433\\u0443\\u0442 \\u0443\\u0432\\u0438\\u0434\\u0435\\u0442\\u044c \\u0442\\u044e\\u043b\\u044c\\u043f\\u0430\\u043d\\u044b, \\u043d\\u0430\\u0440\\u0446\\u0438\\u0441\\u0441\\u044b, \\u0433\\u0438\\u0430\\u0446\\u0438\\u043d\\u0442\\u044b, \\u043a\\u0440\\u043e\\u043a\\u0443\\u0441\\u044b \\u0438 \\u0434\\u0440\\u0443\\u0433\\u0438\\u0435 \\u0440\\u0430\\u0441\\u0442\\u0435\\u043d\\u0438\\u044f, \\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0435 \\u0440\\u0430\\u043d\\u0435\\u0435 \\u0431\\u044b\\u043b\\u0438 \\u043f\\u0440\\u0435\\u0434\\u0441\\u0442\\u0430\\u0432\\u043b\\u0435\\u043d\\u044b \\u043d\\u0430 \\u0432\\u044b\\u0441\\u0442\\u0430\\u0432\\u043a\\u0435 \\u00ab\\u0420\\u0435\\u043f\\u0435\\u0442\\u0438\\u0446\\u0438\\u044f \\u0432\\u0435\\u0441\\u043d\\u044b\\u00bb. \\u042d\\u0442\\u043e \\u043e\\u0442\\u043b\\u0438\\u0447\\u043d\\u044b\\u0439 \\u0448\\u0430\\u043d\\u0441 \\u043f\\u043e\\u043b\\u044e\\u0431\\u043e\\u0432\\u0430\\u0442\\u044c\\u0441\\u044f \\u0432\\u0435\\u0441\\u0435\\u043d\\u043d\\u0438\\u043c\\u0438 \\u0446\\u0432\\u0435\\u0442\\u0430\\u043c\\u0438 \\u0441\\u0440\\u0435\\u0434\\u0438 \\u044d\\u043a\\u0437\\u043e\\u0442\\u0438\\u0447\\u0435\\u0441\\u043a\\u0438\\u0445 \\u0440\\u0430\\u0441\\u0442\\u0435\\u043d\\u0438\\u0439, \\u043d\\u0430\\u0441\\u043b\\u0430\\u0434\\u0438\\u0442\\u044c\\u0441\\u044f \\u043f\\u043e\\u0442\\u0440\\u044f\\u0441\\u0430\\u044e\\u0449\\u0438\\u043c\\u0438 \\u0430\\u0440\\u043e\\u043c\\u0430\\u0442\\u0430\\u043c\\u0438 \\u0438 \\u043f\\u043e\\u043b\\u0443\\u0447\\u0438\\u0442\\u044c \\u043c\\u043e\\u0440\\u0435 \\u0443\\u0434\\u043e\\u0432\\u043e\\u043b\\u044c\\u0441\\u0442\\u0432\\u0438\\u044f. \\u0422\\u0430\\u043a\\u0436\\u0435 \\u0432 \\u0421\\u0443\\u0431\\u0442\\u0440\\u043e\\u043f\\u0438\\u0447\\u0435\\u0441\\u043a\\u043e\\u0439 \\u043e\\u0440\\u0430\\u043d\\u0436\\u0435\\u0440\\u0435\\u0435 \\u0441\\u0435\\u0439\\u0447\\u0430\\u0441 \\u0446\\u0432\\u0435\\u0442\\u0443\\u0442 \\u043e\\u0440\\u0445\\u0438\\u0434\\u0435\\u0438, \\u0430\\u0437\\u0430\\u043b\\u0438\\u0438, \\u043a\\u043b\\u0438\\u0432\\u0438\\u0438 \\u0438 \\u0444\\u0430\\u043d\\u0442\\u0430\\u0441\\u0442\\u0438\\u0447\\u0435\\u0441\\u043a\\u0438 \\u0430\\u0440\\u043e\\u043c\\u0430\\u0442\\u043d\\u043e\\u0435 \\u043f\\u043e\\u043c\\u0435\\u043b\\u043e.\",\n          \"\\u041a\\u0430\\u0442\\u0430\\u043d\\u0438\\u0435 \\u0434\\u043b\\u044f \\u0434\\u0435\\u0442\\u0435\\u0439 \\u0438 \\u0432\\u0437\\u0440\\u043e\\u0441\\u043b\\u044b\\u0445 \\u043e\\u0441\\u0443\\u0449\\u0435\\u0441\\u0442\\u0432\\u043b\\u044f\\u0435\\u0442\\u0441\\u044f \\u043f\\u043e \\u0442\\u0435\\u0440\\u0440\\u0438\\u0442\\u043e\\u0440\\u0438\\u0438 \\u0426\\u0435\\u043d\\u0442\\u0440\\u0430\\u00a0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0414\\u0430\\u0442\\u044b: \\u0415\\u0436\\u0435\\u0434\\u043d\\u0435\\u0432\\u043d\\u043e 10:00 \\u2014 21:00\",\n          \"\\u0414\\u0430\\u0442\\u044b: 19 \\u043c\\u0430\\u0440\\u0442\\u0430 - 15 \\u043c\\u0430\\u044f\",\n          \"\\u0414\\u0430\\u0442\\u044b: \\u0421 1 \\u043c\\u0430\\u044f, \\u0435\\u0436\\u0435\\u0434\\u043d\\u0435\\u0432\\u043d\\u043e \\u0441 10:00 \\u0434\\u043e 16:15\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"loc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u0412\\u0414\\u041d\\u0425, \\u041f\\u0430\\u0432\\u0438\\u043b\\u044c\\u043e\\u043d \\u21167\",\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041c\\u043e\\u0441\\u043a\\u0432\\u0430, \\u041f\\u0440\\u043e\\u0441\\u043f\\u0435\\u043a\\u0442 \\u041c\\u0438\\u0440\\u0430, 26/1 (\\u0433\\u043e\\u0440\\u043e\\u0434)\",\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u0424\\u0438\\u043b\\u0438\\u0430\\u043b \\u041c\\u043e\\u0441\\u043a\\u043e\\u0432\\u0441\\u043a\\u043e\\u0433\\u043e \\u0437\\u043e\\u043e\\u043f\\u0430\\u0440\\u043a\\u0430 \\u0432 \\u0421\\u044b\\u0447\\u0435\\u0432\\u043e, \\u0412\\u043e\\u043b\\u043e\\u043a\\u043e\\u043b\\u0430\\u043c\\u0441\\u043a\\u0438\\u0439 \\u0440\\u0430\\u0439\\u043e\\u043d 55.939685, 36.210234 (\\u0434\\u0430\\u043b\\u0435\\u043a\\u043e)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: 550 - 1500\\u0440\",\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c:\\u00a0 \\u043e\\u0442 200 \\u0440\\u0443\\u0431\\u043b\\u0435\\u0439, \\u0434\\u0435\\u0442\\u0438 \\u0434\\u043e 7 \\u043b\\u0435\\u0442 \\u0438 \\u043c\\u043d\\u043e\\u0433\\u043e\\u0434\\u0435\\u0442\\u043d\\u044b\\u0435 \\u0441\\u0435\\u043c\\u044c\\u0438 \\u2013 \\u0431\\u0435\\u0441\\u043f\\u043b\\u0430\\u0442\\u043d\\u043e\\u00a0\",\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: \\u043e\\u0442 300\\u0440\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"link\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: https://vdnh.ru/events/ekspozitsiya-multimediynogo-tsentra-soyuzmultpark/\",\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: \\u041f\\u043e\\u0434\\u0440\\u043e\\u0431\\u043d\\u0435\\u0435\",\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: -\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "      id               cat_1                     cat_2  \\\n",
              "171  173  Кинопоказ, Лекция   Кино, Личности, Классика   \n",
              "\n",
              "                                 name  \\\n",
              "171  Киноклуб в Антипе «Крупная рыба»   \n",
              "\n",
              "                                                  desc  \\\n",
              "171  Фильм Тима Бертона, который слегка отличается ...   \n",
              "\n",
              "                       date                                               loc  \\\n",
              "171  Даты: 27 ноября, 20:00  Место: Дом Антипа (Малый Знаменский переулок, 9)   \n",
              "\n",
              "                    price       link  \n",
              "171  Стоимость: бесплатно  Ссылка: -  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-55df2817-f04f-40e9-804f-a6b90afee8fb\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>cat_1</th>\n",
              "      <th>cat_2</th>\n",
              "      <th>name</th>\n",
              "      <th>desc</th>\n",
              "      <th>date</th>\n",
              "      <th>loc</th>\n",
              "      <th>price</th>\n",
              "      <th>link</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>171</th>\n",
              "      <td>173</td>\n",
              "      <td>Кинопоказ, Лекция</td>\n",
              "      <td>Кино, Личности, Классика</td>\n",
              "      <td>Киноклуб в Антипе «Крупная рыба»</td>\n",
              "      <td>Фильм Тима Бертона, который слегка отличается ...</td>\n",
              "      <td>Даты: 27 ноября, 20:00</td>\n",
              "      <td>Место: Дом Антипа (Малый Знаменский переулок, 9)</td>\n",
              "      <td>Стоимость: бесплатно</td>\n",
              "      <td>Ссылка: -</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-55df2817-f04f-40e9-804f-a6b90afee8fb')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-55df2817-f04f-40e9-804f-a6b90afee8fb button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-55df2817-f04f-40e9-804f-a6b90afee8fb');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \")\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"173\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u041a\\u0438\\u043d\\u043e\\u043f\\u043e\\u043a\\u0430\\u0437, \\u041b\\u0435\\u043a\\u0446\\u0438\\u044f\\u00a0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u041a\\u0438\\u043d\\u043e, \\u041b\\u0438\\u0447\\u043d\\u043e\\u0441\\u0442\\u0438, \\u041a\\u043b\\u0430\\u0441\\u0441\\u0438\\u043a\\u0430\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u041a\\u0438\\u043d\\u043e\\u043a\\u043b\\u0443\\u0431 \\u0432 \\u0410\\u043d\\u0442\\u0438\\u043f\\u0435 \\u00ab\\u041a\\u0440\\u0443\\u043f\\u043d\\u0430\\u044f \\u0440\\u044b\\u0431\\u0430\\u00bb\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"desc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0424\\u0438\\u043b\\u044c\\u043c \\u0422\\u0438\\u043c\\u0430 \\u0411\\u0435\\u0440\\u0442\\u043e\\u043d\\u0430, \\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0439 \\u0441\\u043b\\u0435\\u0433\\u043a\\u0430 \\u043e\\u0442\\u043b\\u0438\\u0447\\u0430\\u0435\\u0442\\u0441\\u044f \\u043e\\u0442 \\u043f\\u0440\\u0438\\u0432\\u044b\\u0447\\u043d\\u044b\\u0445 \\u0440\\u0430\\u0431\\u043e\\u0442 \\u0430\\u0432\\u0442\\u043e\\u0440\\u0430. \\u0412 \\u0447\\u0435\\u043c \\u043e\\u0441\\u043e\\u0431\\u0435\\u043d\\u043d\\u043e\\u0441\\u0442\\u044c \\u043a\\u0430\\u0440\\u0442\\u0438\\u043d\\u044b \\u0438 \\u043f\\u043e\\u0447\\u0435\\u043c\\u0443 \\u0432 \\u043a\\u0438\\u043d\\u043e \\u0442\\u0430\\u043a \\u0447\\u0430\\u0441\\u0442\\u043e \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u0443\\u0435\\u0442\\u0441\\u044f \\u043e\\u0431\\u0440\\u0430\\u0437 \\u0440\\u044b\\u0431\\u0430\\u043b\\u043a\\u0438, \\u043c\\u044b \\u043e\\u0431\\u0441\\u0443\\u0434\\u0438\\u043c \\u043f\\u043e\\u0441\\u043b\\u0435 \\u043f\\u0440\\u043e\\u0441\\u043c\\u043e\\u0442\\u0440\\u0430 \\u0444\\u0438\\u043b\\u044c\\u043c\\u0430 \\u0441 \\u043d\\u0430\\u0448\\u0438\\u043c \\u043b\\u0435\\u043a\\u0442\\u043e\\u0440\\u043e\\u043c \\u0410\\u043d\\u0434\\u0440\\u0435\\u0435\\u043c \\u0429\\u0435\\u043d\\u043d\\u0438\\u043a\\u043e\\u0432\\u044b\\u043c \\u043c\\u043b.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0414\\u0430\\u0442\\u044b: 27 \\u043d\\u043e\\u044f\\u0431\\u0440\\u044f, 20:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"loc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u0414\\u043e\\u043c \\u0410\\u043d\\u0442\\u0438\\u043f\\u0430 (\\u041c\\u0430\\u043b\\u044b\\u0439 \\u0417\\u043d\\u0430\\u043c\\u0435\\u043d\\u0441\\u043a\\u0438\\u0439 \\u043f\\u0435\\u0440\\u0435\\u0443\\u043b\\u043e\\u043a, 9)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: \\u0431\\u0435\\u0441\\u043f\\u043b\\u0430\\u0442\\u043d\\u043e\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"link\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: -\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[1mStarting round 2!\u001b[0m\n",
            "\n",
            "Please upload new interactions:\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-31b46d15-5837-40bc-a604-9de6bcda33a7\" name=\"files[]\" multiple disabled\n",
              "        style=\"border:none\" />\n",
              "     <output id=\"result-31b46d15-5837-40bc-a604-9de6bcda33a7\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script>// Copyright 2017 Google LLC\n",
              "//\n",
              "// Licensed under the Apache License, Version 2.0 (the \"License\");\n",
              "// you may not use this file except in compliance with the License.\n",
              "// You may obtain a copy of the License at\n",
              "//\n",
              "//      http://www.apache.org/licenses/LICENSE-2.0\n",
              "//\n",
              "// Unless required by applicable law or agreed to in writing, software\n",
              "// distributed under the License is distributed on an \"AS IS\" BASIS,\n",
              "// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
              "// See the License for the specific language governing permissions and\n",
              "// limitations under the License.\n",
              "\n",
              "/**\n",
              " * @fileoverview Helpers for google.colab Python module.\n",
              " */\n",
              "(function(scope) {\n",
              "function span(text, styleAttributes = {}) {\n",
              "  const element = document.createElement('span');\n",
              "  element.textContent = text;\n",
              "  for (const key of Object.keys(styleAttributes)) {\n",
              "    element.style[key] = styleAttributes[key];\n",
              "  }\n",
              "  return element;\n",
              "}\n",
              "\n",
              "// Max number of bytes which will be uploaded at a time.\n",
              "const MAX_PAYLOAD_SIZE = 100 * 1024;\n",
              "\n",
              "function _uploadFiles(inputId, outputId) {\n",
              "  const steps = uploadFilesStep(inputId, outputId);\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  // Cache steps on the outputElement to make it available for the next call\n",
              "  // to uploadFilesContinue from Python.\n",
              "  outputElement.steps = steps;\n",
              "\n",
              "  return _uploadFilesContinue(outputId);\n",
              "}\n",
              "\n",
              "// This is roughly an async generator (not supported in the browser yet),\n",
              "// where there are multiple asynchronous steps and the Python side is going\n",
              "// to poll for completion of each step.\n",
              "// This uses a Promise to block the python side on completion of each step,\n",
              "// then passes the result of the previous step as the input to the next step.\n",
              "function _uploadFilesContinue(outputId) {\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  const steps = outputElement.steps;\n",
              "\n",
              "  const next = steps.next(outputElement.lastPromiseValue);\n",
              "  return Promise.resolve(next.value.promise).then((value) => {\n",
              "    // Cache the last promise value to make it available to the next\n",
              "    // step of the generator.\n",
              "    outputElement.lastPromiseValue = value;\n",
              "    return next.value.response;\n",
              "  });\n",
              "}\n",
              "\n",
              "/**\n",
              " * Generator function which is called between each async step of the upload\n",
              " * process.\n",
              " * @param {string} inputId Element ID of the input file picker element.\n",
              " * @param {string} outputId Element ID of the output display.\n",
              " * @return {!Iterable<!Object>} Iterable of next steps.\n",
              " */\n",
              "function* uploadFilesStep(inputId, outputId) {\n",
              "  const inputElement = document.getElementById(inputId);\n",
              "  inputElement.disabled = false;\n",
              "\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  outputElement.innerHTML = '';\n",
              "\n",
              "  const pickedPromise = new Promise((resolve) => {\n",
              "    inputElement.addEventListener('change', (e) => {\n",
              "      resolve(e.target.files);\n",
              "    });\n",
              "  });\n",
              "\n",
              "  const cancel = document.createElement('button');\n",
              "  inputElement.parentElement.appendChild(cancel);\n",
              "  cancel.textContent = 'Cancel upload';\n",
              "  const cancelPromise = new Promise((resolve) => {\n",
              "    cancel.onclick = () => {\n",
              "      resolve(null);\n",
              "    };\n",
              "  });\n",
              "\n",
              "  // Wait for the user to pick the files.\n",
              "  const files = yield {\n",
              "    promise: Promise.race([pickedPromise, cancelPromise]),\n",
              "    response: {\n",
              "      action: 'starting',\n",
              "    }\n",
              "  };\n",
              "\n",
              "  cancel.remove();\n",
              "\n",
              "  // Disable the input element since further picks are not allowed.\n",
              "  inputElement.disabled = true;\n",
              "\n",
              "  if (!files) {\n",
              "    return {\n",
              "      response: {\n",
              "        action: 'complete',\n",
              "      }\n",
              "    };\n",
              "  }\n",
              "\n",
              "  for (const file of files) {\n",
              "    const li = document.createElement('li');\n",
              "    li.append(span(file.name, {fontWeight: 'bold'}));\n",
              "    li.append(span(\n",
              "        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n",
              "        `last modified: ${\n",
              "            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n",
              "                                    'n/a'} - `));\n",
              "    const percent = span('0% done');\n",
              "    li.appendChild(percent);\n",
              "\n",
              "    outputElement.appendChild(li);\n",
              "\n",
              "    const fileDataPromise = new Promise((resolve) => {\n",
              "      const reader = new FileReader();\n",
              "      reader.onload = (e) => {\n",
              "        resolve(e.target.result);\n",
              "      };\n",
              "      reader.readAsArrayBuffer(file);\n",
              "    });\n",
              "    // Wait for the data to be ready.\n",
              "    let fileData = yield {\n",
              "      promise: fileDataPromise,\n",
              "      response: {\n",
              "        action: 'continue',\n",
              "      }\n",
              "    };\n",
              "\n",
              "    // Use a chunked sending to avoid message size limits. See b/62115660.\n",
              "    let position = 0;\n",
              "    do {\n",
              "      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n",
              "      const chunk = new Uint8Array(fileData, position, length);\n",
              "      position += length;\n",
              "\n",
              "      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n",
              "      yield {\n",
              "        response: {\n",
              "          action: 'append',\n",
              "          file: file.name,\n",
              "          data: base64,\n",
              "        },\n",
              "      };\n",
              "\n",
              "      let percentDone = fileData.byteLength === 0 ?\n",
              "          100 :\n",
              "          Math.round((position / fileData.byteLength) * 100);\n",
              "      percent.textContent = `${percentDone}% done`;\n",
              "\n",
              "    } while (position < fileData.byteLength);\n",
              "  }\n",
              "\n",
              "  // All done.\n",
              "  yield {\n",
              "    response: {\n",
              "      action: 'complete',\n",
              "    }\n",
              "  };\n",
              "}\n",
              "\n",
              "scope.google = scope.google || {};\n",
              "scope.google.colab = scope.google.colab || {};\n",
              "scope.google.colab._files = {\n",
              "  _uploadFiles,\n",
              "  _uploadFilesContinue,\n",
              "};\n",
              "})(self);\n",
              "</script> "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Saving intrc_it_22.xlsx to intrc_it_22 (1).xlsx\n",
            "File \"intrc_it_22 (1).xlsx\" uploaded successfully.\n",
            "TOP-10 rec indices:  ['86', '53', '18', '105', '157', '156', '104', '129', '74', '132']\n",
            "Showing TOP-3 recommendations and one random for now.\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "   id                 cat_1                               cat_2  \\\n",
              "0  86              Выставка  Мультимедиа, Современное Искусство   \n",
              "1  53  Фестиваль, Кинопоказ                 Еда, Кино, Классика   \n",
              "2  18             Кинопоказ               Мультфильмы, Классика   \n",
              "\n",
              "                                                name  \\\n",
              "0          Первое в мире уникальное иммерсивное шоу    \n",
              "1  До 12 мая в Москве идет фестиваль «Ешь! Смотри...   \n",
              "2  В мае в сети кинотеатров Москино продолжат пок...   \n",
              "\n",
              "                                                desc                     date  \\\n",
              "0  В столице есть первое иммерсивное арт-простран...  Даты: Пн-Вс 10:00-22:00   \n",
              "1  Уже третий по счету фестиваль собрал более 50 ...          Даты: до 12 мая   \n",
              "2  С 5 по 19 мая на большие экраны кинотеатров Мо...         Даты: по 19 мая.   \n",
              "\n",
              "                                              loc  \\\n",
              "0  Место: Москва, 2-я Останкинская ул., 3 (город)   \n",
              "1                             Место: в ресторанах   \n",
              "2                       Место: Кинотеатры Москино   \n",
              "\n",
              "                                               price                  link  \n",
              "0                                  Стоимость: 1500 ₽  Ссылка: Купить билет  \n",
              "1                               Стоимость: от 2000 р        Ссылка: ссылка  \n",
              "2  Стоимость: Бесплатно, по предварительной регис...     Ссылка: Подробнее  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c521b843-5337-45a6-bd35-c4d6316b7bdc\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>cat_1</th>\n",
              "      <th>cat_2</th>\n",
              "      <th>name</th>\n",
              "      <th>desc</th>\n",
              "      <th>date</th>\n",
              "      <th>loc</th>\n",
              "      <th>price</th>\n",
              "      <th>link</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>86</td>\n",
              "      <td>Выставка</td>\n",
              "      <td>Мультимедиа, Современное Искусство</td>\n",
              "      <td>Первое в мире уникальное иммерсивное шоу</td>\n",
              "      <td>В столице есть первое иммерсивное арт-простран...</td>\n",
              "      <td>Даты: Пн-Вс 10:00-22:00</td>\n",
              "      <td>Место: Москва, 2-я Останкинская ул., 3 (город)</td>\n",
              "      <td>Стоимость: 1500 ₽</td>\n",
              "      <td>Ссылка: Купить билет</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>53</td>\n",
              "      <td>Фестиваль, Кинопоказ</td>\n",
              "      <td>Еда, Кино, Классика</td>\n",
              "      <td>До 12 мая в Москве идет фестиваль «Ешь! Смотри...</td>\n",
              "      <td>Уже третий по счету фестиваль собрал более 50 ...</td>\n",
              "      <td>Даты: до 12 мая</td>\n",
              "      <td>Место: в ресторанах</td>\n",
              "      <td>Стоимость: от 2000 р</td>\n",
              "      <td>Ссылка: ссылка</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>18</td>\n",
              "      <td>Кинопоказ</td>\n",
              "      <td>Мультфильмы, Классика</td>\n",
              "      <td>В мае в сети кинотеатров Москино продолжат пок...</td>\n",
              "      <td>С 5 по 19 мая на большие экраны кинотеатров Мо...</td>\n",
              "      <td>Даты: по 19 мая.</td>\n",
              "      <td>Место: Кинотеатры Москино</td>\n",
              "      <td>Стоимость: Бесплатно, по предварительной регис...</td>\n",
              "      <td>Ссылка: Подробнее</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c521b843-5337-45a6-bd35-c4d6316b7bdc')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c521b843-5337-45a6-bd35-c4d6316b7bdc button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c521b843-5337-45a6-bd35-c4d6316b7bdc');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-1f59ba8b-41a0-45ec-bf8c-d6532d701951\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1f59ba8b-41a0-45ec-bf8c-d6532d701951')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-1f59ba8b-41a0-45ec-bf8c-d6532d701951 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \")\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"86\",\n          \"53\",\n          \"18\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0412\\u044b\\u0441\\u0442\\u0430\\u0432\\u043a\\u0430\",\n          \"\\u0424\\u0435\\u0441\\u0442\\u0438\\u0432\\u0430\\u043b\\u044c, \\u041a\\u0438\\u043d\\u043e\\u043f\\u043e\\u043a\\u0430\\u0437\",\n          \"\\u041a\\u0438\\u043d\\u043e\\u043f\\u043e\\u043a\\u0430\\u0437\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u041c\\u0443\\u043b\\u044c\\u0442\\u0438\\u043c\\u0435\\u0434\\u0438\\u0430, \\u0421\\u043e\\u0432\\u0440\\u0435\\u043c\\u0435\\u043d\\u043d\\u043e\\u0435 \\u0418\\u0441\\u043a\\u0443\\u0441\\u0441\\u0442\\u0432\\u043e\",\n          \"\\u0415\\u0434\\u0430, \\u041a\\u0438\\u043d\\u043e, \\u041a\\u043b\\u0430\\u0441\\u0441\\u0438\\u043a\\u0430\",\n          \"\\u041c\\u0443\\u043b\\u044c\\u0442\\u0444\\u0438\\u043b\\u044c\\u043c\\u044b, \\u041a\\u043b\\u0430\\u0441\\u0441\\u0438\\u043a\\u0430\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u041f\\u0435\\u0440\\u0432\\u043e\\u0435 \\u0432 \\u043c\\u0438\\u0440\\u0435 \\u0443\\u043d\\u0438\\u043a\\u0430\\u043b\\u044c\\u043d\\u043e\\u0435 \\u0438\\u043c\\u043c\\u0435\\u0440\\u0441\\u0438\\u0432\\u043d\\u043e\\u0435 \\u0448\\u043e\\u0443\\u00a0\",\n          \"\\u0414\\u043e 12 \\u043c\\u0430\\u044f \\u0432 \\u041c\\u043e\\u0441\\u043a\\u0432\\u0435 \\u0438\\u0434\\u0435\\u0442 \\u0444\\u0435\\u0441\\u0442\\u0438\\u0432\\u0430\\u043b\\u044c \\u00ab\\u0415\\u0448\\u044c! \\u0421\\u043c\\u043e\\u0442\\u0440\\u0438! \\u041b\\u044e\\u0431\\u0438!\\u00bb\",\n          \"\\u0412 \\u043c\\u0430\\u0435 \\u0432 \\u0441\\u0435\\u0442\\u0438 \\u043a\\u0438\\u043d\\u043e\\u0442\\u0435\\u0430\\u0442\\u0440\\u043e\\u0432 \\u041c\\u043e\\u0441\\u043a\\u0438\\u043d\\u043e \\u043f\\u0440\\u043e\\u0434\\u043e\\u043b\\u0436\\u0430\\u0442 \\u043f\\u043e\\u043a\\u0430\\u0437\\u044b\\u0432\\u0430\\u0442\\u044c \\u043a\\u043b\\u0430\\u0441\\u0441\\u0438\\u043a\\u0443 \\u0441\\u043e\\u0432\\u0435\\u0442\\u0441\\u043a\\u0438\\u0445 \\u043c\\u0443\\u043b\\u044c\\u0442\\u0438\\u043a\\u043e\\u0432\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"desc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0412 \\u0441\\u0442\\u043e\\u043b\\u0438\\u0446\\u0435 \\u0435\\u0441\\u0442\\u044c \\u043f\\u0435\\u0440\\u0432\\u043e\\u0435 \\u0438\\u043c\\u043c\\u0435\\u0440\\u0441\\u0438\\u0432\\u043d\\u043e\\u0435 \\u0430\\u0440\\u0442-\\u043f\\u0440\\u043e\\u0441\\u0442\\u0440\\u0430\\u043d\\u0441\\u0442\\u0432\\u043e Luminar, \\u043f\\u0440\\u0435\\u043e\\u0431\\u0440\\u0430\\u0436\\u0430\\u044e\\u0449\\u0435\\u0435 \\u0440\\u0435\\u0430\\u043b\\u044c\\u043d\\u043e\\u0441\\u0442\\u044c! \\u041f\\u0440\\u043e\\u0435\\u043a\\u0442 \\u043e\\u0441\\u043d\\u043e\\u0432\\u0430\\u043d \\u043d\\u0430 \\u0438\\u043d\\u0442\\u0435\\u0440\\u0430\\u043a\\u0442\\u0438\\u0432\\u043d\\u043e\\u0441\\u0442\\u0438, \\u043e\\u0431\\u044a\\u0435\\u043c\\u043d\\u044b\\u0445 3D-\\u0438\\u043b\\u043b\\u044e\\u0437\\u0438\\u044f\\u0445 \\u0438 \\u0441\\u043e\\u0432\\u0440\\u0435\\u043c\\u0435\\u043d\\u043d\\u044b\\u0445 \\u0446\\u0438\\u0444\\u0440\\u043e\\u0432\\u044b\\u0445 \\u0442\\u0435\\u0445\\u043d\\u043e\\u043b\\u043e\\u0433\\u0438\\u044f\\u0445. \\u041e\\u0431\\u0449\\u0430\\u044f \\u043f\\u043b\\u043e\\u0449\\u0430\\u0434\\u044c \\u043f\\u0440\\u043e\\u0441\\u0442\\u0440\\u0430\\u043d\\u0441\\u0442\\u0432\\u0430 \\u0441\\u043e\\u0441\\u0442\\u0430\\u0432\\u043b\\u044f\\u0435\\u0442 1000 \\u043a\\u0432. \\u043c. \\u0417\\u0434\\u0435\\u0441\\u044c \\u0442\\u0440\\u0438 \\u0437\\u0430\\u043b\\u0430 \\u0438 LED-\\u0442\\u043e\\u043d\\u043d\\u0435\\u043b\\u044c \\u0441\\u043e \\u0441\\u0432\\u0435\\u0442\\u043e\\u0432\\u044b\\u043c\\u0438 \\u0442\\u0435\\u043a\\u0441\\u0442\\u0443\\u0440\\u0430\\u043c\\u0438, \\u0441\\u043e\\u0437\\u0434\\u0430\\u044e\\u0449\\u0438\\u043c\\u0438 \\u0438\\u043b\\u043b\\u044e\\u0437\\u0438\\u044e \\u0431\\u0435\\u0441\\u043a\\u043e\\u043d\\u0435\\u0447\\u043d\\u043e\\u0441\\u0442\\u0438.\",\n          \"\\u0423\\u0436\\u0435 \\u0442\\u0440\\u0435\\u0442\\u0438\\u0439 \\u043f\\u043e \\u0441\\u0447\\u0435\\u0442\\u0443 \\u0444\\u0435\\u0441\\u0442\\u0438\\u0432\\u0430\\u043b\\u044c \\u0441\\u043e\\u0431\\u0440\\u0430\\u043b \\u0431\\u043e\\u043b\\u0435\\u0435 50 \\u043c\\u043e\\u0441\\u043a\\u043e\\u0432\\u0441\\u043a\\u0438\\u0445 \\u0440\\u0435\\u0441\\u0442\\u043e\\u0440\\u0430\\u043d\\u043e\\u0432, \\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0435 \\u0441\\u043e\\u0437\\u0434\\u0430\\u043b\\u0438 \\u0444\\u0435\\u0441\\u0442\\u0438\\u0432\\u0430\\u043b\\u044c\\u043d\\u044b\\u0435 \\u0441\\u0435\\u0442\\u044b \\u0441 \\u0432\\u0430\\u0440\\u0438\\u0430\\u0446\\u0438\\u0435\\u0439 \\u0431\\u043b\\u044e\\u0434 \\u043f\\u043e \\u043c\\u043e\\u0442\\u0438\\u0432\\u0430\\u043c \\u043b\\u044e\\u0431\\u0438\\u043c\\u044b\\u0445 \\u043a\\u0438\\u043d\\u043e\\u043a\\u0430\\u0440\\u0442\\u0438\\u043d. \\u041d\\u0430\\u043f\\u0440\\u0438\\u043c\\u0435\\u0440, \\u00ab\\u0420\\u044b\\u0431\\u0430 \\u041c\\u0435\\u0447\\u0442\\u044b\\u00bb \\u043f\\u0440\\u0435\\u0434\\u0441\\u0442\\u0430\\u0432\\u043b\\u044f\\u0435\\u0442 \\u0442\\u0435\\u043c\\u0430\\u0442\\u0438\\u0447\\u0435\\u0441\\u043a\\u0438\\u0439 \\u0441\\u0435\\u0442 \\u0432 \\u0434\\u0443\\u0445\\u0435 \\u0441\\u0430\\u0433\\u0438 \\u00ab\\u041f\\u0438\\u0440\\u0430\\u0442\\u044b \\u041a\\u0430\\u0440\\u0438\\u0431\\u0441\\u043a\\u043e\\u0433\\u043e \\u043c\\u043e\\u0440\\u044f\\u00bb, MIDSUMMER \\u043d\\u0430\\u043f\\u043e\\u043c\\u0438\\u043d\\u0430\\u0435\\u0442 \\u043f\\u043e\\u043b\\u043d\\u0443\\u044e \\u0432\\u043e\\u043b\\u0448\\u0435\\u0431\\u0441\\u0442\\u0432\\u0430 \\u0438\\u0441\\u0442\\u043e\\u0440\\u0438\\u044e \\u00ab\\u0413\\u0430\\u0440\\u0440\\u0438 \\u041f\\u043e\\u0442\\u0442\\u0435\\u0440\\u0430\\u00bb. \\u0412 \\u043f\\u0440\\u043e\\u0433\\u0440\\u0430\\u043c\\u043c\\u0435 \\u0444\\u0435\\u0441\\u0442\\u0438\\u0432\\u0430\\u043b\\u044f \\u2014 \\u043a\\u0438\\u043d\\u043e\\u043f\\u043e\\u043a\\u0430\\u0437\\u044b, \\u043a\\u0438\\u043d\\u043e\\u043a\\u043b\\u0443\\u0431 \\u0438 \\u0434\\u0440\\u0443\\u0433\\u0438\\u0435 \\u043c\\u0435\\u0440\\u043e\\u043f\\u0440\\u0438\\u044f\\u0442\\u0438\\u044f, \\u0441\\u043e\\u0435\\u0434\\u0438\\u043d\\u044f\\u044e\\u0449\\u0438\\u0435 \\u043c\\u0438\\u0440 \\u043a\\u0438\\u043d\\u043e \\u0438 \\u043c\\u0438\\u0440 \\u0433\\u0430\\u0441\\u0442\\u0440\\u043e\\u043d\\u043e\\u043c\\u0438\\u0438. \\u0410 \\u0435\\u0449\\u0435 \\u0432\\u0441\\u0435 \\u0433\\u043e\\u0441\\u0442\\u0438 \\u0444\\u0435\\u0441\\u0442\\u0438\\u0432\\u0430\\u043b\\u044f \\u043c\\u043e\\u0433\\u0443\\u0442 \\u043f\\u0440\\u0438\\u043d\\u044f\\u0442\\u044c \\u0443\\u0447\\u0430\\u0441\\u0442\\u0438\\u0435 \\u0432 \\u0440\\u043e\\u0437\\u044b\\u0433\\u0440\\u044b\\u0448\\u0435 \\u043f\\u0440\\u0438\\u0437\\u043e\\u0432 \\u043e\\u0442 VK: \\u0441\\u0435\\u0440\\u0442\\u0438\\u0444\\u0438\\u043a\\u0430\\u0442\\u044b \\u043d\\u0430 \\u043f\\u043e\\u0441\\u0435\\u0449\\u0435\\u043d\\u0438\\u0435 \\u0440\\u0435\\u0441\\u0442\\u043e\\u0440\\u0430\\u043d\\u043e\\u0432 \\u0441\\u043e \\u0437\\u0432\\u0435\\u0437\\u0434\\u0430\\u043c\\u0438 \\u00ab\\u041c\\u0438\\u0448\\u043b\\u0435\\u043d\\u00bb, \\u0438 \\u0440\\u0435\\u0441\\u0442\\u043e\\u0440\\u0430\\u043d\\u043e\\u0432-\\u0443\\u0447\\u0430\\u0441\\u0442\\u043d\\u0438\\u043a\\u043e\\u0432 \\u0424\\u0435\\u0441\\u0442\\u0438\\u0432\\u0430\\u043b\\u044f. \\u0412 \\u0444\\u0435\\u0441\\u0442\\u0438\\u0432\\u0430\\u043b\\u0435 \\u043f\\u0440\\u0438\\u043d\\u0438\\u043c\\u0430\\u044e\\u0442 \\u0443\\u0447\\u0430\\u0441\\u0442\\u0438\\u0435: \\u00ab\\u041f\\u0438\\u0444\\u0430\\u0433\\u043e\\u0440\\u00bb, \\u00ab\\u0420\\u044b\\u0431\\u0430 \\u041c\\u0435\\u0447\\u0442\\u044b\\u00bb, \\u00ab\\u0421\\u044b\\u0440\\u043e\\u0432\\u0430\\u0440\\u043d\\u044f\\u00bb, \\u00ab\\u0428\\u0430\\u043b\\u044f\\u043f\\u0438\\u043d\\u00bb, \\u00ab\\u0428\\u043c\\u0430\\u043a\\u00bb, \\u00ab\\u042d\\u043b\\u0430\\u0440\\u0434\\u0436\\u0438\\u00bb, ATLANTICA seafood, Balzi Rossi, De Torino, BURO. TSUM, Joi Izakaya, [KU:], LINBISTR\\u00d3, MIDSUMMER, Mor\\u00f3, Mr.Lee, Sapiens, SEPTA, Touch\\u00e9 \\u0438 \\u0434\\u0440\\u0443\\u0433\\u0438\\u0435.\",\n          \"\\u0421 5 \\u043f\\u043e 19 \\u043c\\u0430\\u044f \\u043d\\u0430 \\u0431\\u043e\\u043b\\u044c\\u0448\\u0438\\u0435 \\u044d\\u043a\\u0440\\u0430\\u043d\\u044b \\u043a\\u0438\\u043d\\u043e\\u0442\\u0435\\u0430\\u0442\\u0440\\u043e\\u0432 \\u041c\\u043e\\u0441\\u043a\\u0438\\u043d\\u043e \\u0432\\u043e\\u0437\\u0432\\u0440\\u0430\\u0449\\u0430\\u0435\\u0442\\u0441\\u044f \\u0432\\u0441\\u0435\\u043c\\u0438 \\u043b\\u044e\\u0431\\u0438\\u043c\\u044b\\u0439 \\u0441\\u043e\\u0432\\u043c\\u0435\\u0441\\u0442\\u043d\\u044b\\u0439 \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442 \\u0441\\u043e \\u0441\\u0442\\u0443\\u0434\\u0438\\u0435\\u0439 \\u00ab\\u0421\\u043e\\u044e\\u0437\\u043c\\u0443\\u043b\\u044c\\u0442\\u0444\\u0438\\u043b\\u044c\\u043c\\u00bb \\u2014 \\u0446\\u0438\\u043a\\u043b \\u0434\\u0435\\u0442\\u0441\\u043a\\u0438\\u0445 \\u0443\\u0442\\u0440\\u0435\\u043d\\u043d\\u0438\\u043a\\u043e\\u0432 \\u0434\\u043b\\u044f \\u0441\\u0430\\u043c\\u044b\\u0445 \\u043c\\u0430\\u043b\\u0435\\u043d\\u044c\\u043a\\u0438\\u0445 \\u043b\\u044e\\u0431\\u0438\\u0442\\u0435\\u043b\\u0435\\u0439 \\u043a\\u0438\\u043d\\u043e \\u0438 \\u0438\\u0445 \\u0440\\u043e\\u0434\\u0438\\u0442\\u0435\\u043b\\u0435\\u0439. \\u0412 \\u043d\\u043e\\u0432\\u043e\\u0439 \\u043f\\u0440\\u043e\\u0433\\u0440\\u0430\\u043c\\u043c\\u0435 \\u0437\\u0440\\u0438\\u0442\\u0435\\u043b\\u0435\\u0439 \\u0436\\u0434\\u0443\\u0442 \\u0437\\u043d\\u0430\\u043c\\u0435\\u043d\\u0438\\u0442\\u044b\\u0435 \\u0441\\u043e\\u0432\\u0435\\u0442\\u0441\\u043a\\u0438\\u0435 \\u043c\\u0443\\u043b\\u044c\\u0442\\u0438\\u043a\\u0438, \\u0430 \\u0442\\u0430\\u043a\\u0436\\u0435 \\u043f\\u0440\\u0438\\u043a\\u043b\\u044e\\u0447\\u0435\\u043d\\u0438\\u044f \\u043a\\u0443\\u043b\\u044c\\u0442\\u043e\\u0432\\u044b\\u0445 \\u0433\\u0435\\u0440\\u043e\\u0435\\u0432.\\u00a0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0414\\u0430\\u0442\\u044b: \\u041f\\u043d-\\u0412\\u0441 10:00-22:00\",\n          \"\\u0414\\u0430\\u0442\\u044b: \\u0434\\u043e 12 \\u043c\\u0430\\u044f\",\n          \"\\u0414\\u0430\\u0442\\u044b: \\u043f\\u043e 19 \\u043c\\u0430\\u044f.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"loc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041c\\u043e\\u0441\\u043a\\u0432\\u0430, 2-\\u044f \\u041e\\u0441\\u0442\\u0430\\u043d\\u043a\\u0438\\u043d\\u0441\\u043a\\u0430\\u044f \\u0443\\u043b., 3 (\\u0433\\u043e\\u0440\\u043e\\u0434)\",\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u0432 \\u0440\\u0435\\u0441\\u0442\\u043e\\u0440\\u0430\\u043d\\u0430\\u0445\",\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041a\\u0438\\u043d\\u043e\\u0442\\u0435\\u0430\\u0442\\u0440\\u044b \\u041c\\u043e\\u0441\\u043a\\u0438\\u043d\\u043e\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: 1500 \\u20bd\",\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: \\u043e\\u0442 2000 \\u0440\",\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: \\u0411\\u0435\\u0441\\u043f\\u043b\\u0430\\u0442\\u043d\\u043e, \\u043f\\u043e \\u043f\\u0440\\u0435\\u0434\\u0432\\u0430\\u0440\\u0438\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e\\u0439 \\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u0438\\u00a0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"link\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: \\u041a\\u0443\\u043f\\u0438\\u0442\\u044c \\u0431\\u0438\\u043b\\u0435\\u0442\",\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: \\u0441\\u0441\\u044b\\u043b\\u043a\\u0430\",\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: \\u041f\\u043e\\u0434\\u0440\\u043e\\u0431\\u043d\\u0435\\u0435\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "      id         cat_1     cat_2  \\\n",
              "195  197  Мастерклассы  Живопись   \n",
              "\n",
              "                                                  name  \\\n",
              "195  Мастер-класс по зарисовкам с натуры в особняке...   \n",
              "\n",
              "                                                  desc  \\\n",
              "195  Пока проект мастер-классов Your Hidden Talent ...   \n",
              "\n",
              "                           date                           loc  \\\n",
              "195  Даты: 05.05, с 18:30-20:30  Место: Новая Басманная, 19с1   \n",
              "\n",
              "                price                                            link  \n",
              "195  Стоимость: 4500р  Ссылка: Забронировать тут (количество мест 15)  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a8b0aef9-5f45-484a-b69c-04f7513c4ef7\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>cat_1</th>\n",
              "      <th>cat_2</th>\n",
              "      <th>name</th>\n",
              "      <th>desc</th>\n",
              "      <th>date</th>\n",
              "      <th>loc</th>\n",
              "      <th>price</th>\n",
              "      <th>link</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>195</th>\n",
              "      <td>197</td>\n",
              "      <td>Мастерклассы</td>\n",
              "      <td>Живопись</td>\n",
              "      <td>Мастер-класс по зарисовкам с натуры в особняке...</td>\n",
              "      <td>Пока проект мастер-классов Your Hidden Talent ...</td>\n",
              "      <td>Даты: 05.05, с 18:30-20:30</td>\n",
              "      <td>Место: Новая Басманная, 19с1</td>\n",
              "      <td>Стоимость: 4500р</td>\n",
              "      <td>Ссылка: Забронировать тут (количество мест 15)</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a8b0aef9-5f45-484a-b69c-04f7513c4ef7')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a8b0aef9-5f45-484a-b69c-04f7513c4ef7 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a8b0aef9-5f45-484a-b69c-04f7513c4ef7');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \")\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"197\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u041c\\u0430\\u0441\\u0442\\u0435\\u0440\\u043a\\u043b\\u0430\\u0441\\u0441\\u044b\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0416\\u0438\\u0432\\u043e\\u043f\\u0438\\u0441\\u044c\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u041c\\u0430\\u0441\\u0442\\u0435\\u0440-\\u043a\\u043b\\u0430\\u0441\\u0441 \\u043f\\u043e \\u0437\\u0430\\u0440\\u0438\\u0441\\u043e\\u0432\\u043a\\u0430\\u043c \\u0441 \\u043d\\u0430\\u0442\\u0443\\u0440\\u044b \\u0432 \\u043e\\u0441\\u043e\\u0431\\u043d\\u044f\\u043a\\u0435, \\u043d\\u043e\\u0432\\u0430\\u044f \\u0432\\u0441\\u0442\\u0440\\u0435\\u0447\\u0430\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"desc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u041f\\u043e\\u043a\\u0430 \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442 \\u043c\\u0430\\u0441\\u0442\\u0435\\u0440-\\u043a\\u043b\\u0430\\u0441\\u0441\\u043e\\u0432 Your Hidden Talent\\u00a0 \\u0432\\u0441\\u0435 \\u0435\\u0449\\u0451 \\u0432 \\u041c\\u043e\\u0441\\u043a\\u0432\\u0435, \\u044d\\u0442\\u043e \\u043d\\u0430\\u0434\\u043e \\u0443\\u0432\\u0438\\u0434\\u0435\\u0442\\u044c \\u0432\\u0436\\u0438\\u0432\\u0443\\u044e. \\u0427\\u0442\\u043e \\u0431\\u0443\\u0434\\u0435\\u0442 \\u043d\\u0430 \\u043c\\u0430\\u0441\\u0442\\u0435\\u0440-\\u043a\\u043b\\u0430\\u0441\\u0441\\u0435: \\u043e\\u0431\\u043d\\u0430\\u0436\\u0435\\u043d\\u043d\\u0430\\u044f \\u043d\\u0430\\u0442\\u0443\\u0440\\u0449\\u0438\\u0446\\u0430, \\u0432\\u0438\\u043d\\u043e, \\u043a\\u043b\\u0430\\u0441\\u0441\\u0438\\u0447\\u0435\\u0441\\u043a\\u0430\\u044f \\u043c\\u0443\\u0437\\u044b\\u043a\\u0430, \\u0441\\u0432\\u0435\\u0447\\u0438 \\u0438 12 \\u0442\\u0435\\u0445\\u043d\\u0438\\u043a \\u043e\\u0442 \\u0445\\u0443\\u0434\\u043e\\u0436\\u043d\\u0438\\u0446\\u044b. \\u041f\\u043e\\u0434\\u0445\\u043e\\u0434\\u0438\\u0442 \\u0434\\u0430\\u0436\\u0435 \\u0434\\u0430\\u0436\\u0435 \\u0434\\u043b\\u044f \\u0442\\u0435\\u0445, \\u043a\\u0442\\u043e \\u043d\\u0435 \\u0443\\u043c\\u0435\\u0435\\u0442 \\u0440\\u0438\\u0441\\u043e\\u0432\\u0430\\u0442\\u044c. \\u0412\\u0435\\u0434\\u044c \\u043d\\u0430 \\u043a\\u043b\\u0430\\u0441\\u0441\\u0435 \\u043e\\u0442\\u043a\\u043b\\u044e\\u0447\\u0430\\u0435\\u0442\\u0441\\u044f \\u0443\\u043c \\u0438 \\u0432\\u043a\\u043b\\u044e\\u0447\\u0430\\u044e\\u0442\\u0441\\u044f \\u0447\\u0443\\u0432\\u0441\\u0442\\u0432\\u0430. \\u0414\\u0440\\u0435\\u0441\\u0441-\\u043a\\u043e\\u0434: all black\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0414\\u0430\\u0442\\u044b: 05.05, \\u0441 18:30-20:30\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"loc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041d\\u043e\\u0432\\u0430\\u044f \\u0411\\u0430\\u0441\\u043c\\u0430\\u043d\\u043d\\u0430\\u044f, 19\\u04411\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: 4500\\u0440\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"link\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: \\u0417\\u0430\\u0431\\u0440\\u043e\\u043d\\u0438\\u0440\\u043e\\u0432\\u0430\\u0442\\u044c \\u0442\\u0443\\u0442 (\\u043a\\u043e\\u043b\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043e \\u043c\\u0435\\u0441\\u0442 15)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[1mStarting round 3!\u001b[0m\n",
            "\n",
            "Please upload new interactions:\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-e24712f0-2858-4434-9197-e441aaef16b2\" name=\"files[]\" multiple disabled\n",
              "        style=\"border:none\" />\n",
              "     <output id=\"result-e24712f0-2858-4434-9197-e441aaef16b2\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script>// Copyright 2017 Google LLC\n",
              "//\n",
              "// Licensed under the Apache License, Version 2.0 (the \"License\");\n",
              "// you may not use this file except in compliance with the License.\n",
              "// You may obtain a copy of the License at\n",
              "//\n",
              "//      http://www.apache.org/licenses/LICENSE-2.0\n",
              "//\n",
              "// Unless required by applicable law or agreed to in writing, software\n",
              "// distributed under the License is distributed on an \"AS IS\" BASIS,\n",
              "// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
              "// See the License for the specific language governing permissions and\n",
              "// limitations under the License.\n",
              "\n",
              "/**\n",
              " * @fileoverview Helpers for google.colab Python module.\n",
              " */\n",
              "(function(scope) {\n",
              "function span(text, styleAttributes = {}) {\n",
              "  const element = document.createElement('span');\n",
              "  element.textContent = text;\n",
              "  for (const key of Object.keys(styleAttributes)) {\n",
              "    element.style[key] = styleAttributes[key];\n",
              "  }\n",
              "  return element;\n",
              "}\n",
              "\n",
              "// Max number of bytes which will be uploaded at a time.\n",
              "const MAX_PAYLOAD_SIZE = 100 * 1024;\n",
              "\n",
              "function _uploadFiles(inputId, outputId) {\n",
              "  const steps = uploadFilesStep(inputId, outputId);\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  // Cache steps on the outputElement to make it available for the next call\n",
              "  // to uploadFilesContinue from Python.\n",
              "  outputElement.steps = steps;\n",
              "\n",
              "  return _uploadFilesContinue(outputId);\n",
              "}\n",
              "\n",
              "// This is roughly an async generator (not supported in the browser yet),\n",
              "// where there are multiple asynchronous steps and the Python side is going\n",
              "// to poll for completion of each step.\n",
              "// This uses a Promise to block the python side on completion of each step,\n",
              "// then passes the result of the previous step as the input to the next step.\n",
              "function _uploadFilesContinue(outputId) {\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  const steps = outputElement.steps;\n",
              "\n",
              "  const next = steps.next(outputElement.lastPromiseValue);\n",
              "  return Promise.resolve(next.value.promise).then((value) => {\n",
              "    // Cache the last promise value to make it available to the next\n",
              "    // step of the generator.\n",
              "    outputElement.lastPromiseValue = value;\n",
              "    return next.value.response;\n",
              "  });\n",
              "}\n",
              "\n",
              "/**\n",
              " * Generator function which is called between each async step of the upload\n",
              " * process.\n",
              " * @param {string} inputId Element ID of the input file picker element.\n",
              " * @param {string} outputId Element ID of the output display.\n",
              " * @return {!Iterable<!Object>} Iterable of next steps.\n",
              " */\n",
              "function* uploadFilesStep(inputId, outputId) {\n",
              "  const inputElement = document.getElementById(inputId);\n",
              "  inputElement.disabled = false;\n",
              "\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  outputElement.innerHTML = '';\n",
              "\n",
              "  const pickedPromise = new Promise((resolve) => {\n",
              "    inputElement.addEventListener('change', (e) => {\n",
              "      resolve(e.target.files);\n",
              "    });\n",
              "  });\n",
              "\n",
              "  const cancel = document.createElement('button');\n",
              "  inputElement.parentElement.appendChild(cancel);\n",
              "  cancel.textContent = 'Cancel upload';\n",
              "  const cancelPromise = new Promise((resolve) => {\n",
              "    cancel.onclick = () => {\n",
              "      resolve(null);\n",
              "    };\n",
              "  });\n",
              "\n",
              "  // Wait for the user to pick the files.\n",
              "  const files = yield {\n",
              "    promise: Promise.race([pickedPromise, cancelPromise]),\n",
              "    response: {\n",
              "      action: 'starting',\n",
              "    }\n",
              "  };\n",
              "\n",
              "  cancel.remove();\n",
              "\n",
              "  // Disable the input element since further picks are not allowed.\n",
              "  inputElement.disabled = true;\n",
              "\n",
              "  if (!files) {\n",
              "    return {\n",
              "      response: {\n",
              "        action: 'complete',\n",
              "      }\n",
              "    };\n",
              "  }\n",
              "\n",
              "  for (const file of files) {\n",
              "    const li = document.createElement('li');\n",
              "    li.append(span(file.name, {fontWeight: 'bold'}));\n",
              "    li.append(span(\n",
              "        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n",
              "        `last modified: ${\n",
              "            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n",
              "                                    'n/a'} - `));\n",
              "    const percent = span('0% done');\n",
              "    li.appendChild(percent);\n",
              "\n",
              "    outputElement.appendChild(li);\n",
              "\n",
              "    const fileDataPromise = new Promise((resolve) => {\n",
              "      const reader = new FileReader();\n",
              "      reader.onload = (e) => {\n",
              "        resolve(e.target.result);\n",
              "      };\n",
              "      reader.readAsArrayBuffer(file);\n",
              "    });\n",
              "    // Wait for the data to be ready.\n",
              "    let fileData = yield {\n",
              "      promise: fileDataPromise,\n",
              "      response: {\n",
              "        action: 'continue',\n",
              "      }\n",
              "    };\n",
              "\n",
              "    // Use a chunked sending to avoid message size limits. See b/62115660.\n",
              "    let position = 0;\n",
              "    do {\n",
              "      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n",
              "      const chunk = new Uint8Array(fileData, position, length);\n",
              "      position += length;\n",
              "\n",
              "      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n",
              "      yield {\n",
              "        response: {\n",
              "          action: 'append',\n",
              "          file: file.name,\n",
              "          data: base64,\n",
              "        },\n",
              "      };\n",
              "\n",
              "      let percentDone = fileData.byteLength === 0 ?\n",
              "          100 :\n",
              "          Math.round((position / fileData.byteLength) * 100);\n",
              "      percent.textContent = `${percentDone}% done`;\n",
              "\n",
              "    } while (position < fileData.byteLength);\n",
              "  }\n",
              "\n",
              "  // All done.\n",
              "  yield {\n",
              "    response: {\n",
              "      action: 'complete',\n",
              "    }\n",
              "  };\n",
              "}\n",
              "\n",
              "scope.google = scope.google || {};\n",
              "scope.google.colab = scope.google.colab || {};\n",
              "scope.google.colab._files = {\n",
              "  _uploadFiles,\n",
              "  _uploadFilesContinue,\n",
              "};\n",
              "})(self);\n",
              "</script> "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Saving intrc_it_33.xlsx to intrc_it_33 (1).xlsx\n",
            "File \"intrc_it_33 (1).xlsx\" uploaded successfully.\n",
            "TOP-10 rec indices:  ['28', '157', '68', '1', '132', '156', '74', '129', '104', '30']\n",
            "Showing TOP-3 recommendations and one random for now.\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "    id       cat_1                               cat_2  \\\n",
              "0   28    Выставка  Мультимедиа, Современное Искусство   \n",
              "1  157   Кинопоказ               Кино, Новое, Личности   \n",
              "2   68  Перформанс        Танцы, Современное Искусство   \n",
              "\n",
              "                                                name  \\\n",
              "0  ЦСИ М’АРС, контентная платформа Дзен и арт-гру...   \n",
              "1               СОФИ ЛОРЕН. ЖИТЬ, СНИМАТЬСЯ, ЛЮБИТЬ!   \n",
              "2                   Перформанс «Пустое пространство»   \n",
              "\n",
              "                                                desc  \\\n",
              "0  Проект посвящён алгоритмам и технологиям, кото...   \n",
              "1  Юбилейный Russia-Italia Film Festival (RIFF)  ...   \n",
              "2  Действие - загадка. Представление - тайна. Даж...   \n",
              "\n",
              "                                           date  \\\n",
              "0  Даты: каждый день с 12:00 до 22:00 до 31 мая   \n",
              "1                           Даты: 11 мая, 16:00   \n",
              "2                     Даты: 12 мая, 19:00-20:00   \n",
              "\n",
              "                                                 loc             price  \\\n",
              "0  Место: Москва, Пушкарёв пер., 5, ЦСИ М’АРС (го...   Стоимость: 600р   \n",
              "1                             Место: КАРО 11 Октябрь   Стоимость: 500р   \n",
              "2  Место: Москва, улица Сайкина, 9, строение 1 (г...  Стоимость: 1500р   \n",
              "\n",
              "                                                link  \n",
              "0                                     Ссылка: Билеты  \n",
              "1  Ссылка: https://2023.riff-russia.ru/filmy/451-...  \n",
              "2                                    Ссылка:  ссылка  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-597a5ef3-7843-4938-8bb3-e7a35130a669\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>cat_1</th>\n",
              "      <th>cat_2</th>\n",
              "      <th>name</th>\n",
              "      <th>desc</th>\n",
              "      <th>date</th>\n",
              "      <th>loc</th>\n",
              "      <th>price</th>\n",
              "      <th>link</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>28</td>\n",
              "      <td>Выставка</td>\n",
              "      <td>Мультимедиа, Современное Искусство</td>\n",
              "      <td>ЦСИ М’АРС, контентная платформа Дзен и арт-гру...</td>\n",
              "      <td>Проект посвящён алгоритмам и технологиям, кото...</td>\n",
              "      <td>Даты: каждый день с 12:00 до 22:00 до 31 мая</td>\n",
              "      <td>Место: Москва, Пушкарёв пер., 5, ЦСИ М’АРС (го...</td>\n",
              "      <td>Стоимость: 600р</td>\n",
              "      <td>Ссылка: Билеты</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>157</td>\n",
              "      <td>Кинопоказ</td>\n",
              "      <td>Кино, Новое, Личности</td>\n",
              "      <td>СОФИ ЛОРЕН. ЖИТЬ, СНИМАТЬСЯ, ЛЮБИТЬ!</td>\n",
              "      <td>Юбилейный Russia-Italia Film Festival (RIFF)  ...</td>\n",
              "      <td>Даты: 11 мая, 16:00</td>\n",
              "      <td>Место: КАРО 11 Октябрь</td>\n",
              "      <td>Стоимость: 500р</td>\n",
              "      <td>Ссылка: https://2023.riff-russia.ru/filmy/451-...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>68</td>\n",
              "      <td>Перформанс</td>\n",
              "      <td>Танцы, Современное Искусство</td>\n",
              "      <td>Перформанс «Пустое пространство»</td>\n",
              "      <td>Действие - загадка. Представление - тайна. Даж...</td>\n",
              "      <td>Даты: 12 мая, 19:00-20:00</td>\n",
              "      <td>Место: Москва, улица Сайкина, 9, строение 1 (г...</td>\n",
              "      <td>Стоимость: 1500р</td>\n",
              "      <td>Ссылка:  ссылка</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-597a5ef3-7843-4938-8bb3-e7a35130a669')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-597a5ef3-7843-4938-8bb3-e7a35130a669 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-597a5ef3-7843-4938-8bb3-e7a35130a669');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-41d268c1-20d6-44b4-8da7-dd9148814722\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-41d268c1-20d6-44b4-8da7-dd9148814722')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-41d268c1-20d6-44b4-8da7-dd9148814722 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \")\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"28\",\n          \"157\",\n          \"68\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0412\\u044b\\u0441\\u0442\\u0430\\u0432\\u043a\\u0430\",\n          \"\\u041a\\u0438\\u043d\\u043e\\u043f\\u043e\\u043a\\u0430\\u0437\",\n          \"\\u041f\\u0435\\u0440\\u0444\\u043e\\u0440\\u043c\\u0430\\u043d\\u0441\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u041c\\u0443\\u043b\\u044c\\u0442\\u0438\\u043c\\u0435\\u0434\\u0438\\u0430, \\u0421\\u043e\\u0432\\u0440\\u0435\\u043c\\u0435\\u043d\\u043d\\u043e\\u0435 \\u0418\\u0441\\u043a\\u0443\\u0441\\u0441\\u0442\\u0432\\u043e\",\n          \"\\u041a\\u0438\\u043d\\u043e, \\u041d\\u043e\\u0432\\u043e\\u0435, \\u041b\\u0438\\u0447\\u043d\\u043e\\u0441\\u0442\\u0438\",\n          \"\\u0422\\u0430\\u043d\\u0446\\u044b, \\u0421\\u043e\\u0432\\u0440\\u0435\\u043c\\u0435\\u043d\\u043d\\u043e\\u0435 \\u0418\\u0441\\u043a\\u0443\\u0441\\u0441\\u0442\\u0432\\u043e\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0426\\u0421\\u0418 \\u041c\\u2019\\u0410\\u0420\\u0421, \\u043a\\u043e\\u043d\\u0442\\u0435\\u043d\\u0442\\u043d\\u0430\\u044f \\u043f\\u043b\\u0430\\u0442\\u0444\\u043e\\u0440\\u043c\\u0430 \\u0414\\u0437\\u0435\\u043d \\u0438 \\u0430\\u0440\\u0442-\\u0433\\u0440\\u0443\\u043f\\u043f\\u0430 Synticate \\u043f\\u0440\\u0435\\u0434\\u0441\\u0442\\u0430\\u0432\\u0438\\u043b\\u0438 \\u0438\\u043d\\u0442\\u0435\\u0440\\u0430\\u043a\\u0442\\u0438\\u0432\\u043d\\u0443\\u044e \\u0432\\u044b\\u0441\\u0442\\u0430\\u0432\\u043a\\u0443 \\u00ab\\u041d\\u041e\\u0412\\u041e\\u0415 \\u0418\\u0421\\u041a\\u0423\\u0421\\u0421\\u0422\\u0412\\u041e: \\u0410\\u043b\\u0433\\u043e\\u0440\\u0438\\u0442\\u043c\\u044b. \\u041d\\u0435\\u0439\\u0440\\u043e\\u0441\\u0435\\u0442\\u0438. \\u0422\\u0435\\u0445\\u043d\\u043e\\u043b\\u043e\\u0433\\u0438\\u0438\\u00bb.\",\n          \"\\u0421\\u041e\\u0424\\u0418 \\u041b\\u041e\\u0420\\u0415\\u041d. \\u0416\\u0418\\u0422\\u042c, \\u0421\\u041d\\u0418\\u041c\\u0410\\u0422\\u042c\\u0421\\u042f, \\u041b\\u042e\\u0411\\u0418\\u0422\\u042c!\",\n          \"\\u041f\\u0435\\u0440\\u0444\\u043e\\u0440\\u043c\\u0430\\u043d\\u0441 \\u00ab\\u041f\\u0443\\u0441\\u0442\\u043e\\u0435 \\u043f\\u0440\\u043e\\u0441\\u0442\\u0440\\u0430\\u043d\\u0441\\u0442\\u0432\\u043e\\u00bb\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"desc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u041f\\u0440\\u043e\\u0435\\u043a\\u0442 \\u043f\\u043e\\u0441\\u0432\\u044f\\u0449\\u0451\\u043d \\u0430\\u043b\\u0433\\u043e\\u0440\\u0438\\u0442\\u043c\\u0430\\u043c \\u0438 \\u0442\\u0435\\u0445\\u043d\\u043e\\u043b\\u043e\\u0433\\u0438\\u044f\\u043c, \\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0435 \\u043d\\u0435 \\u0442\\u043e\\u043b\\u044c\\u043a\\u043e \\u0432\\u043d\\u0435\\u0434\\u0440\\u044f\\u044e\\u0442\\u0441\\u044f \\u0432 \\u043f\\u043e\\u0432\\u0441\\u0435\\u0434\\u043d\\u0435\\u0432\\u043d\\u043e\\u0441\\u0442\\u044c, \\u043d\\u043e \\u0438 \\u0430\\u043a\\u0442\\u0438\\u0432\\u043d\\u043e \\u0432\\u043b\\u0438\\u044f\\u044e\\u0442 \\u043d\\u0430 \\u0442\\u0432\\u043e\\u0440\\u0447\\u0435\\u0441\\u043a\\u0438\\u0439 \\u043f\\u0440\\u043e\\u0446\\u0435\\u0441\\u0441 \\u0441\\u043e\\u0432\\u0440\\u0435\\u043c\\u0435\\u043d\\u043d\\u044b\\u0445 \\u0445\\u0443\\u0434\\u043e\\u0436\\u043d\\u0438\\u043a\\u043e\\u0432, \\u0430 \\u0442\\u0430\\u043a\\u0436\\u0435 \\u043f\\u043e\\u0437\\u0432\\u043e\\u043b\\u044f\\u044e\\u0442 \\u0437\\u0440\\u0438\\u0442\\u0435\\u043b\\u044e \\u0441\\u0442\\u0430\\u0442\\u044c \\u0435\\u0433\\u043e \\u0447\\u0430\\u0441\\u0442\\u044c\\u044e. \\u0410\\u0440\\u0442-\\u043e\\u0431\\u044a\\u0435\\u043a\\u0442\\u044b \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442\\u0430 \\u2013 \\u044d\\u0442\\u043e \\u0441\\u043e\\u0432\\u0440\\u0435\\u043c\\u0435\\u043d\\u043d\\u044b\\u0435 \\u043f\\u0440\\u043e\\u0438\\u0437\\u0432\\u0435\\u0434\\u0435\\u043d\\u0438\\u044f \\u0438\\u0441\\u043a\\u0443\\u0441\\u0441\\u0442\\u0432\\u0430, \\u0441\\u043e\\u0437\\u0434\\u0430\\u043d\\u043d\\u044b\\u0435 \\u0441 \\u043f\\u043e\\u043c\\u043e\\u0449\\u044c\\u044e \\u043d\\u0435\\u0439\\u0440\\u043e\\u0441\\u0435\\u0442\\u0435\\u0439, \\u0432\\u0434\\u043e\\u0445\\u043d\\u043e\\u0432\\u043b\\u0435\\u043d\\u043d\\u044b\\u0435 \\u0444\\u0430\\u043d\\u0442\\u0430\\u0437\\u0438\\u044f\\u043c\\u0438 \\u043f\\u043e\\u0441\\u0442\\u0433\\u0443\\u043c\\u0430\\u043d\\u0438\\u0437\\u043c\\u0435.\\u00a0\",\n          \"\\u042e\\u0431\\u0438\\u043b\\u0435\\u0439\\u043d\\u044b\\u0439 Russia-Italia Film Festival (RIFF)\\u00a0 \\u2014 \\u044d\\u0442\\u043e \\u043c\\u0430\\u043d\\u0438\\u0444\\u0435\\u0441\\u0442\\u0430\\u0446\\u0438\\u044f \\u0440\\u0430\\u0434\\u043e\\u0441\\u0442\\u0438 \\u0436\\u0438\\u0437\\u043d\\u0438 \\u0438 \\u0438\\u0441\\u0446\\u0435\\u043b\\u044f\\u044e\\u0449\\u0435\\u0439 \\u0441\\u0438\\u043b\\u044b \\u0438\\u0441\\u043a\\u0443\\u0441\\u0441\\u0442\\u0432\\u0430, \\u0432\\u0435\\u0434\\u044c \\u0435\\u0436\\u0435\\u0433\\u043e\\u0434\\u043d\\u044b\\u0435 \\u043f\\u043e\\u043a\\u0430\\u0437\\u044b \\u0438\\u0442\\u0430\\u043b\\u044c\\u044f\\u043d\\u0441\\u043a\\u043e\\u0433\\u043e \\u043a\\u0438\\u043d\\u043e \\u043d\\u0435 \\u043f\\u0440\\u0435\\u043a\\u0440\\u0430\\u0449\\u0430\\u043b\\u0438\\u0441\\u044c \\u043d\\u0430 \\u043f\\u0440\\u043e\\u0442\\u044f\\u0436\\u0435\\u043d\\u0438\\u0438 10 \\u043b\\u0435\\u0442. \\u0412 \\u043d\\u043e\\u0432\\u043e\\u0439 \\u043f\\u0440\\u043e\\u0433\\u0440\\u0430\\u043c\\u043c\\u0435 20 \\u0444\\u0438\\u043b\\u044c\\u043c\\u043e\\u0432-\\u0443\\u0447\\u0430\\u0441\\u0442\\u043d\\u0438\\u043a\\u043e\\u0432 \\u0440\\u0430\\u0437\\u043b\\u0438\\u0447\\u043d\\u044b\\u0445 \\u043c\\u0435\\u0436\\u0434\\u0443\\u043d\\u0430\\u0440\\u043e\\u0434\\u043d\\u044b\\u0445 \\u0441\\u043c\\u043e\\u0442\\u0440\\u043e\\u0432, \\u0432\\u043a\\u043b\\u044e\\u0447\\u0430\\u044f \\u0412\\u0435\\u043d\\u0435\\u0446\\u0438\\u0430\\u043d\\u0441\\u043a\\u0438\\u0439 \\u043a\\u0438\\u043d\\u043e\\u0444\\u0435\\u0441\\u0442\\u0438\\u0432\\u0430\\u043b\\u044c. \\u041a\\u0430\\u0436\\u0434\\u044b\\u0439 \\u043f\\u043e\\u043a\\u0430\\u0437 \\u2014 \\u0440\\u043e\\u0441\\u0441\\u0438\\u0439\\u0441\\u043a\\u0430\\u044f \\u043f\\u0440\\u0435\\u043c\\u044c\\u0435\\u0440\\u0430. \\u0412\\u0441\\u0435 \\u043f\\u043e\\u043a\\u0430\\u0437\\u044b \\u043f\\u0440\\u043e\\u0439\\u0434\\u0443\\u0442 \\u043d\\u0430 \\u044f\\u0437\\u044b\\u043a\\u0435 \\u043e\\u0440\\u0438\\u0433\\u0438\\u043d\\u0430\\u043b\\u0430 \\u0441 \\u0440\\u0443\\u0441\\u0441\\u043a\\u0438\\u043c\\u0438 \\u0441\\u0443\\u0431\\u0442\\u0438\\u0442\\u0440\\u0430\\u043c\\u0438. \\u0416\\u0438\\u0437\\u043d\\u044c \\u0421\\u043e\\u0444\\u0438 \\u041b\\u043e\\u0440\\u0435\\u043d, \\u0440\\u0430\\u0441\\u0441\\u043a\\u0430\\u0437\\u0430\\u043d\\u043d\\u0430\\u044f \\u0435\\u044e \\u0441\\u0430\\u043c\\u043e\\u0439. \\u0421 \\u043a\\u043e\\u043c\\u043c\\u0435\\u043d\\u0442\\u0430\\u0440\\u0438\\u044f\\u043c\\u0438 \\u0448\\u0435\\u0441\\u0442\\u0438 \\u0437\\u043d\\u0430\\u043c\\u0435\\u043d\\u0438\\u0442\\u044b\\u0445 \\u0430\\u043a\\u0442\\u0440\\u0438\\u0441, \\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0435 \\u043b\\u0438\\u0447\\u043d\\u043e \\u0437\\u043d\\u0430\\u043a\\u043e\\u043c\\u044b \\u0441 \\u043b\\u0435\\u0433\\u0435\\u043d\\u0434\\u043e\\u0439 \\u043c\\u0438\\u0440\\u043e\\u0432\\u043e\\u0433\\u043e \\u043a\\u0438\\u043d\\u043e.\",\n          \"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435 - \\u0437\\u0430\\u0433\\u0430\\u0434\\u043a\\u0430. \\u041f\\u0440\\u0435\\u0434\\u0441\\u0442\\u0430\\u0432\\u043b\\u0435\\u043d\\u0438\\u0435 - \\u0442\\u0430\\u0439\\u043d\\u0430. \\u0414\\u0430\\u0436\\u0435 \\u0434\\u043b\\u044f \\u0435\\u0433\\u043e \\u0441\\u043e\\u0437\\u0434\\u0430\\u0442\\u0435\\u043b\\u0435\\u0439. \\u042d\\u0442\\u043e \\u043f\\u0440\\u043e\\u0441\\u0442\\u0440\\u0430\\u043d\\u0441\\u0442\\u0432\\u043e \\u043e\\u0431\\u0449\\u0435\\u043d\\u0438\\u044f \\u0430\\u043a\\u0442\\u0451\\u0440\\u043e\\u0432 \\u0441\\u043e \\u0437\\u0440\\u0438\\u0442\\u0435\\u043b\\u0435\\u043c \\u043f\\u043e\\u0441\\u0440\\u0435\\u0434\\u0441\\u0442\\u0432\\u043e\\u043c \\u043f\\u043b\\u0430\\u0441\\u0442\\u0438\\u043a\\u0438 \\u0438 \\u043d\\u0435\\u0432\\u0435\\u0440\\u0431\\u0430\\u043b\\u044c\\u043d\\u043e\\u0433\\u043e \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044f. \\u0422\\u0435\\u043c\\u0443 \\u043e\\u0431\\u0449\\u0435\\u043d\\u0438\\u044f \\u0432\\u044b\\u0431\\u0438\\u0440\\u0430\\u0435\\u0442 \\u0437\\u0440\\u0438\\u0442\\u0435\\u043b\\u044c. \\u041f\\u043e\\u044d\\u0442\\u043e\\u043c\\u0443 \\u0434\\u043e \\u043f\\u0440\\u0438\\u0445\\u043e\\u0434\\u0430 \\u0433\\u043e\\u0441\\u0442\\u0435\\u0439 \\u0432 \\u0437\\u0430\\u043b \\u041b\\u0430\\u0431\\u043e\\u0440\\u0430\\u0442\\u043e\\u0440\\u0438\\u0438, \\u0430\\u043a\\u0442\\u0451\\u0440\\u044b \\u043d\\u0435 \\u0437\\u043d\\u0430\\u044e\\u0442, \\u0447\\u0442\\u043e \\u0431\\u0443\\u0434\\u0435\\u0442 \\u043d\\u0430 \\u0441\\u0446\\u0435\\u043d\\u0435 \\u043f\\u0440\\u043e\\u0438\\u0441\\u0445\\u043e\\u0434\\u0438\\u0442\\u044c. \\u0412 \\u0441\\u0432\\u044f\\u0437\\u0438 \\u0441 \\u044d\\u0442\\u0438\\u043c, \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435 \\u043d\\u0438\\u043a\\u043e\\u0433\\u0434\\u0430 \\u043d\\u0435 \\u043f\\u043e\\u0432\\u0442\\u043e\\u0440\\u0438\\u0442\\u0441\\u044f. \\u041e\\u0441\\u0442\\u0430\\u043d\\u0435\\u0442\\u0441\\u044f \\u0442\\u043e\\u043b\\u044c\\u043a\\u043e \\u043c\\u0438\\u0444. \\u0418 \\u0432\\u0438\\u0434\\u0435\\u043e \\u0438\\u043b\\u0438 \\u0444\\u043e\\u0442\\u043e, \\u0435\\u0441\\u043b\\u0438 \\u043a\\u0442\\u043e-\\u0442\\u043e \\u0438\\u0437 \\u0437\\u0440\\u0438\\u0442\\u0435\\u043b\\u0435\\u0439 \\u0441\\u043c\\u043e\\u0436\\u0435\\u0442 \\u043f\\u0440\\u0435\\u043e\\u0434\\u043e\\u043b\\u0435\\u0442\\u044c \\u043e\\u0447\\u0430\\u0440\\u043e\\u0432\\u0430\\u043d\\u0438\\u0435 \\u0436\\u0435\\u0441\\u0442\\u043e\\u043c \\u0438 \\u0443\\u0441\\u043f\\u0435\\u0435\\u0442 \\u0437\\u0430\\u0441\\u043d\\u044f\\u0442\\u044c \\u044d\\u0442\\u043e. \\u0412\\u0435\\u0434\\u044c \\u044d\\u0442\\u043e \\u0435\\u0434\\u0438\\u043d\\u0441\\u0442\\u0432\\u0435\\u043d\\u043d\\u043e\\u0435 \\u043f\\u0440\\u0435\\u0434\\u0441\\u0442\\u0430\\u0432\\u043b\\u0435\\u043d\\u0438\\u0435 \\u041b\\u0430\\u0431\\u043e\\u0440\\u0430\\u0442\\u043e\\u0440\\u0438\\u0438, \\u043d\\u0430 \\u043a\\u043e\\u0442\\u043e\\u0440\\u043e\\u043c \\u0440\\u0430\\u0437\\u0440\\u0435\\u0448\\u0435\\u043d\\u0430 \\u0432\\u0438\\u0434\\u0435\\u043e \\u0438 \\u0444\\u043e\\u0442\\u043e\\u0441\\u044a\\u0451\\u043c\\u043a\\u0430.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0414\\u0430\\u0442\\u044b: \\u043a\\u0430\\u0436\\u0434\\u044b\\u0439 \\u0434\\u0435\\u043d\\u044c \\u0441 12:00 \\u0434\\u043e 22:00 \\u0434\\u043e 31 \\u043c\\u0430\\u044f\",\n          \"\\u0414\\u0430\\u0442\\u044b: 11 \\u043c\\u0430\\u044f, 16:00\",\n          \"\\u0414\\u0430\\u0442\\u044b: 12 \\u043c\\u0430\\u044f, 19:00-20:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"loc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041c\\u043e\\u0441\\u043a\\u0432\\u0430, \\u041f\\u0443\\u0448\\u043a\\u0430\\u0440\\u0451\\u0432 \\u043f\\u0435\\u0440., 5, \\u0426\\u0421\\u0418 \\u041c\\u2019\\u0410\\u0420\\u0421 (\\u0433\\u043e\\u0440\\u043e\\u0434)\",\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041a\\u0410\\u0420\\u041e 11 \\u041e\\u043a\\u0442\\u044f\\u0431\\u0440\\u044c\",\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041c\\u043e\\u0441\\u043a\\u0432\\u0430, \\u0443\\u043b\\u0438\\u0446\\u0430 \\u0421\\u0430\\u0439\\u043a\\u0438\\u043d\\u0430, 9, \\u0441\\u0442\\u0440\\u043e\\u0435\\u043d\\u0438\\u0435 1 (\\u0433\\u043e\\u0440\\u043e\\u0434)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: 600\\u0440\",\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: 500\\u0440\",\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: 1500\\u0440\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"link\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: \\u0411\\u0438\\u043b\\u0435\\u0442\\u044b\",\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: https://2023.riff-russia.ru/filmy/451-sofia1\",\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430:\\u00a0 \\u0441\\u0441\\u044b\\u043b\\u043a\\u0430\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "    id     cat_1                                         cat_2  \\\n",
              "77  78  Выставка  Мультимедиа, Живопись, Современное Искусство   \n",
              "\n",
              "                            name  \\\n",
              "77  Матисс, Пикассо или Ван Гог?   \n",
              "\n",
              "                                                 desc  \\\n",
              "77  Выбирать не нужно — в Artplay Media сейчас про...   \n",
              "\n",
              "                                  date  \\\n",
              "77  Даты: Пн–Вс: 08:00-23:00 до 19 мая   \n",
              "\n",
              "                                                  loc             price  \\\n",
              "77  Место: Москва, ул. Нижняя Сыромятническая, д. ...  Стоимость: 800 ₽   \n",
              "\n",
              "                    link  \n",
              "77  Ссылка: Купить билет  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-fb4b862d-8cba-46b8-97ca-5e7ba7328916\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>cat_1</th>\n",
              "      <th>cat_2</th>\n",
              "      <th>name</th>\n",
              "      <th>desc</th>\n",
              "      <th>date</th>\n",
              "      <th>loc</th>\n",
              "      <th>price</th>\n",
              "      <th>link</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>77</th>\n",
              "      <td>78</td>\n",
              "      <td>Выставка</td>\n",
              "      <td>Мультимедиа, Живопись, Современное Искусство</td>\n",
              "      <td>Матисс, Пикассо или Ван Гог?</td>\n",
              "      <td>Выбирать не нужно — в Artplay Media сейчас про...</td>\n",
              "      <td>Даты: Пн–Вс: 08:00-23:00 до 19 мая</td>\n",
              "      <td>Место: Москва, ул. Нижняя Сыромятническая, д. ...</td>\n",
              "      <td>Стоимость: 800 ₽</td>\n",
              "      <td>Ссылка: Купить билет</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fb4b862d-8cba-46b8-97ca-5e7ba7328916')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-fb4b862d-8cba-46b8-97ca-5e7ba7328916 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-fb4b862d-8cba-46b8-97ca-5e7ba7328916');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \")\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"78\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0412\\u044b\\u0441\\u0442\\u0430\\u0432\\u043a\\u0430\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u041c\\u0443\\u043b\\u044c\\u0442\\u0438\\u043c\\u0435\\u0434\\u0438\\u0430, \\u0416\\u0438\\u0432\\u043e\\u043f\\u0438\\u0441\\u044c, \\u0421\\u043e\\u0432\\u0440\\u0435\\u043c\\u0435\\u043d\\u043d\\u043e\\u0435 \\u0418\\u0441\\u043a\\u0443\\u0441\\u0441\\u0442\\u0432\\u043e\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u041c\\u0430\\u0442\\u0438\\u0441\\u0441, \\u041f\\u0438\\u043a\\u0430\\u0441\\u0441\\u043e \\u0438\\u043b\\u0438 \\u0412\\u0430\\u043d \\u0413\\u043e\\u0433?\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"desc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0412\\u044b\\u0431\\u0438\\u0440\\u0430\\u0442\\u044c \\u043d\\u0435 \\u043d\\u0443\\u0436\\u043d\\u043e \\u2014 \\u0432 Artplay Media \\u0441\\u0435\\u0439\\u0447\\u0430\\u0441 \\u043f\\u0440\\u043e\\u0445\\u043e\\u0434\\u044f\\u0442 \\u0434\\u0432\\u0435 \\u043c\\u0443\\u043b\\u044c\\u0442\\u0438\\u043c\\u0435\\u0434\\u0438\\u0439\\u043d\\u044b\\u0435 \\u0432\\u044b\\u0441\\u0442\\u0430\\u0432\\u043a\\u0438, \\u043f\\u043e\\u0441\\u0432\\u044f\\u0449\\u0435\\u043d\\u043d\\u044b\\u0435 \\u0432\\u0435\\u043b\\u0438\\u043a\\u0438\\u043c \\u0445\\u0443\\u0434\\u043e\\u0436\\u043d\\u0438\\u043a\\u0430\\u043c. \\u0411\\u043e\\u043b\\u0435\\u0435 \\u0441\\u043e\\u0442\\u043d\\u0438 \\u0437\\u043d\\u0430\\u043c\\u0435\\u043d\\u0438\\u0442\\u044b\\u0445 \\u043f\\u0440\\u043e\\u0438\\u0437\\u0432\\u0435\\u0434\\u0435\\u043d\\u0438\\u0439 \\u043e\\u0436\\u0438\\u0432\\u0443\\u0442 \\u0438 \\u043e\\u043a\\u0440\\u0443\\u0436\\u0430\\u0442 \\u0432\\u0430\\u0441 \\u0441\\u043e \\u0432\\u0441\\u0435\\u0445 \\u0441\\u0442\\u043e\\u0440\\u043e\\u043d \\u0431\\u043b\\u0430\\u0433\\u043e\\u0434\\u0430\\u0440\\u044f \\u0441\\u043e\\u0432\\u0440\\u0435\\u043c\\u0435\\u043d\\u043d\\u044b\\u043c \\u0442\\u0435\\u0445\\u043d\\u043e\\u043b\\u043e\\u0433\\u0438\\u044f\\u043c.\\u00a0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0414\\u0430\\u0442\\u044b: \\u041f\\u043d\\u2013\\u0412\\u0441: 08:00-23:00 \\u0434\\u043e 19 \\u043c\\u0430\\u044f\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"loc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041c\\u043e\\u0441\\u043a\\u0432\\u0430, \\u0443\\u043b. \\u041d\\u0438\\u0436\\u043d\\u044f\\u044f \\u0421\\u044b\\u0440\\u043e\\u043c\\u044f\\u0442\\u043d\\u0438\\u0447\\u0435\\u0441\\u043a\\u0430\\u044f, \\u0434. 10, \\u0441\\u0442\\u0440. 2 (\\u0433\\u043e\\u0440\\u043e\\u0434)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: 800 \\u20bd\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"link\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: \\u041a\\u0443\\u043f\\u0438\\u0442\\u044c \\u0431\\u0438\\u043b\\u0435\\u0442\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[1mStarting round 4!\u001b[0m\n",
            "\n",
            "Please upload new interactions:\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-0dc090c6-ed30-4057-80d4-72b16fccaf75\" name=\"files[]\" multiple disabled\n",
              "        style=\"border:none\" />\n",
              "     <output id=\"result-0dc090c6-ed30-4057-80d4-72b16fccaf75\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script>// Copyright 2017 Google LLC\n",
              "//\n",
              "// Licensed under the Apache License, Version 2.0 (the \"License\");\n",
              "// you may not use this file except in compliance with the License.\n",
              "// You may obtain a copy of the License at\n",
              "//\n",
              "//      http://www.apache.org/licenses/LICENSE-2.0\n",
              "//\n",
              "// Unless required by applicable law or agreed to in writing, software\n",
              "// distributed under the License is distributed on an \"AS IS\" BASIS,\n",
              "// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
              "// See the License for the specific language governing permissions and\n",
              "// limitations under the License.\n",
              "\n",
              "/**\n",
              " * @fileoverview Helpers for google.colab Python module.\n",
              " */\n",
              "(function(scope) {\n",
              "function span(text, styleAttributes = {}) {\n",
              "  const element = document.createElement('span');\n",
              "  element.textContent = text;\n",
              "  for (const key of Object.keys(styleAttributes)) {\n",
              "    element.style[key] = styleAttributes[key];\n",
              "  }\n",
              "  return element;\n",
              "}\n",
              "\n",
              "// Max number of bytes which will be uploaded at a time.\n",
              "const MAX_PAYLOAD_SIZE = 100 * 1024;\n",
              "\n",
              "function _uploadFiles(inputId, outputId) {\n",
              "  const steps = uploadFilesStep(inputId, outputId);\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  // Cache steps on the outputElement to make it available for the next call\n",
              "  // to uploadFilesContinue from Python.\n",
              "  outputElement.steps = steps;\n",
              "\n",
              "  return _uploadFilesContinue(outputId);\n",
              "}\n",
              "\n",
              "// This is roughly an async generator (not supported in the browser yet),\n",
              "// where there are multiple asynchronous steps and the Python side is going\n",
              "// to poll for completion of each step.\n",
              "// This uses a Promise to block the python side on completion of each step,\n",
              "// then passes the result of the previous step as the input to the next step.\n",
              "function _uploadFilesContinue(outputId) {\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  const steps = outputElement.steps;\n",
              "\n",
              "  const next = steps.next(outputElement.lastPromiseValue);\n",
              "  return Promise.resolve(next.value.promise).then((value) => {\n",
              "    // Cache the last promise value to make it available to the next\n",
              "    // step of the generator.\n",
              "    outputElement.lastPromiseValue = value;\n",
              "    return next.value.response;\n",
              "  });\n",
              "}\n",
              "\n",
              "/**\n",
              " * Generator function which is called between each async step of the upload\n",
              " * process.\n",
              " * @param {string} inputId Element ID of the input file picker element.\n",
              " * @param {string} outputId Element ID of the output display.\n",
              " * @return {!Iterable<!Object>} Iterable of next steps.\n",
              " */\n",
              "function* uploadFilesStep(inputId, outputId) {\n",
              "  const inputElement = document.getElementById(inputId);\n",
              "  inputElement.disabled = false;\n",
              "\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  outputElement.innerHTML = '';\n",
              "\n",
              "  const pickedPromise = new Promise((resolve) => {\n",
              "    inputElement.addEventListener('change', (e) => {\n",
              "      resolve(e.target.files);\n",
              "    });\n",
              "  });\n",
              "\n",
              "  const cancel = document.createElement('button');\n",
              "  inputElement.parentElement.appendChild(cancel);\n",
              "  cancel.textContent = 'Cancel upload';\n",
              "  const cancelPromise = new Promise((resolve) => {\n",
              "    cancel.onclick = () => {\n",
              "      resolve(null);\n",
              "    };\n",
              "  });\n",
              "\n",
              "  // Wait for the user to pick the files.\n",
              "  const files = yield {\n",
              "    promise: Promise.race([pickedPromise, cancelPromise]),\n",
              "    response: {\n",
              "      action: 'starting',\n",
              "    }\n",
              "  };\n",
              "\n",
              "  cancel.remove();\n",
              "\n",
              "  // Disable the input element since further picks are not allowed.\n",
              "  inputElement.disabled = true;\n",
              "\n",
              "  if (!files) {\n",
              "    return {\n",
              "      response: {\n",
              "        action: 'complete',\n",
              "      }\n",
              "    };\n",
              "  }\n",
              "\n",
              "  for (const file of files) {\n",
              "    const li = document.createElement('li');\n",
              "    li.append(span(file.name, {fontWeight: 'bold'}));\n",
              "    li.append(span(\n",
              "        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n",
              "        `last modified: ${\n",
              "            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n",
              "                                    'n/a'} - `));\n",
              "    const percent = span('0% done');\n",
              "    li.appendChild(percent);\n",
              "\n",
              "    outputElement.appendChild(li);\n",
              "\n",
              "    const fileDataPromise = new Promise((resolve) => {\n",
              "      const reader = new FileReader();\n",
              "      reader.onload = (e) => {\n",
              "        resolve(e.target.result);\n",
              "      };\n",
              "      reader.readAsArrayBuffer(file);\n",
              "    });\n",
              "    // Wait for the data to be ready.\n",
              "    let fileData = yield {\n",
              "      promise: fileDataPromise,\n",
              "      response: {\n",
              "        action: 'continue',\n",
              "      }\n",
              "    };\n",
              "\n",
              "    // Use a chunked sending to avoid message size limits. See b/62115660.\n",
              "    let position = 0;\n",
              "    do {\n",
              "      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n",
              "      const chunk = new Uint8Array(fileData, position, length);\n",
              "      position += length;\n",
              "\n",
              "      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n",
              "      yield {\n",
              "        response: {\n",
              "          action: 'append',\n",
              "          file: file.name,\n",
              "          data: base64,\n",
              "        },\n",
              "      };\n",
              "\n",
              "      let percentDone = fileData.byteLength === 0 ?\n",
              "          100 :\n",
              "          Math.round((position / fileData.byteLength) * 100);\n",
              "      percent.textContent = `${percentDone}% done`;\n",
              "\n",
              "    } while (position < fileData.byteLength);\n",
              "  }\n",
              "\n",
              "  // All done.\n",
              "  yield {\n",
              "    response: {\n",
              "      action: 'complete',\n",
              "    }\n",
              "  };\n",
              "}\n",
              "\n",
              "scope.google = scope.google || {};\n",
              "scope.google.colab = scope.google.colab || {};\n",
              "scope.google.colab._files = {\n",
              "  _uploadFiles,\n",
              "  _uploadFilesContinue,\n",
              "};\n",
              "})(self);\n",
              "</script> "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Saving intrc_it_44.xlsx to intrc_it_44 (1).xlsx\n",
            "File \"intrc_it_44 (1).xlsx\" uploaded successfully.\n",
            "TOP-10 rec indices:  ['156', '1', '132', '3', '74', '129', '30', '114', '155', '109']\n",
            "Showing TOP-3 recommendations and one random for now.\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "    id      cat_1                                      cat_2  \\\n",
              "0  156  Кинопоказ                      Кино, Новое, Личности   \n",
              "1    1   Выставка  Спорт, Современное Искусство, Мультимедиа   \n",
              "2  132   Погулять                 Еда, Животные, Развлечения   \n",
              "\n",
              "                    name                                               desc  \\\n",
              "0  ДАНТЕ. ВЕЧНОСТЬ ГЕНИЯ  В рамках 10 юбилейного Russia-Italia Film Fest...   \n",
              "1          ТЕОРЕМА ДОЖДЯ  Мультимедиа Арт Музей, Москва представляет инс...   \n",
              "2                Зайкафе  Можно поиграть с кроликами, покормить их, сфот...   \n",
              "\n",
              "                            date  \\\n",
              "0            Даты: 10 мая, 12:00   \n",
              "1  Даты: с 13 апреля по 15 июля.   \n",
              "2    Даты: Ежедневно 10:00-22:00   \n",
              "\n",
              "                                               loc  \\\n",
              "0                           Место: КАРО 11 Октябрь   \n",
              "1  Место: Москва, ул. Остоженка, 16. МАММ. (город)   \n",
              "2                        Место: Ул. Селезневская 4   \n",
              "\n",
              "                                               price  \\\n",
              "0                                    Стоимость: 500р   \n",
              "1  Стоимость: студенты 350, взрослые 700 ₽. Билет...   \n",
              "2                         Стоимость: 400₽ + 12₽/мин    \n",
              "\n",
              "                                                link  \n",
              "0  Ссылка: https://2023.riff-russia.ru/filmy/455-...  \n",
              "1                        Ссылка: https://mamm-mdf.ru  \n",
              "2                                          Ссылка: -  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9728a587-705d-48fd-83ff-fd72d09ec8ec\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>cat_1</th>\n",
              "      <th>cat_2</th>\n",
              "      <th>name</th>\n",
              "      <th>desc</th>\n",
              "      <th>date</th>\n",
              "      <th>loc</th>\n",
              "      <th>price</th>\n",
              "      <th>link</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>156</td>\n",
              "      <td>Кинопоказ</td>\n",
              "      <td>Кино, Новое, Личности</td>\n",
              "      <td>ДАНТЕ. ВЕЧНОСТЬ ГЕНИЯ</td>\n",
              "      <td>В рамках 10 юбилейного Russia-Italia Film Fest...</td>\n",
              "      <td>Даты: 10 мая, 12:00</td>\n",
              "      <td>Место: КАРО 11 Октябрь</td>\n",
              "      <td>Стоимость: 500р</td>\n",
              "      <td>Ссылка: https://2023.riff-russia.ru/filmy/455-...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>Выставка</td>\n",
              "      <td>Спорт, Современное Искусство, Мультимедиа</td>\n",
              "      <td>ТЕОРЕМА ДОЖДЯ</td>\n",
              "      <td>Мультимедиа Арт Музей, Москва представляет инс...</td>\n",
              "      <td>Даты: с 13 апреля по 15 июля.</td>\n",
              "      <td>Место: Москва, ул. Остоженка, 16. МАММ. (город)</td>\n",
              "      <td>Стоимость: студенты 350, взрослые 700 ₽. Билет...</td>\n",
              "      <td>Ссылка: https://mamm-mdf.ru</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>132</td>\n",
              "      <td>Погулять</td>\n",
              "      <td>Еда, Животные, Развлечения</td>\n",
              "      <td>Зайкафе</td>\n",
              "      <td>Можно поиграть с кроликами, покормить их, сфот...</td>\n",
              "      <td>Даты: Ежедневно 10:00-22:00</td>\n",
              "      <td>Место: Ул. Селезневская 4</td>\n",
              "      <td>Стоимость: 400₽ + 12₽/мин</td>\n",
              "      <td>Ссылка: -</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9728a587-705d-48fd-83ff-fd72d09ec8ec')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9728a587-705d-48fd-83ff-fd72d09ec8ec button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9728a587-705d-48fd-83ff-fd72d09ec8ec');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-ad21cec0-4ca5-4b27-b851-6999f5bfa01c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ad21cec0-4ca5-4b27-b851-6999f5bfa01c')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-ad21cec0-4ca5-4b27-b851-6999f5bfa01c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \")\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"156\",\n          \"1\",\n          \"132\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u041a\\u0438\\u043d\\u043e\\u043f\\u043e\\u043a\\u0430\\u0437\",\n          \"\\u0412\\u044b\\u0441\\u0442\\u0430\\u0432\\u043a\\u0430\",\n          \"\\u041f\\u043e\\u0433\\u0443\\u043b\\u044f\\u0442\\u044c\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u041a\\u0438\\u043d\\u043e, \\u041d\\u043e\\u0432\\u043e\\u0435, \\u041b\\u0438\\u0447\\u043d\\u043e\\u0441\\u0442\\u0438\",\n          \"\\u0421\\u043f\\u043e\\u0440\\u0442, \\u0421\\u043e\\u0432\\u0440\\u0435\\u043c\\u0435\\u043d\\u043d\\u043e\\u0435 \\u0418\\u0441\\u043a\\u0443\\u0441\\u0441\\u0442\\u0432\\u043e, \\u041c\\u0443\\u043b\\u044c\\u0442\\u0438\\u043c\\u0435\\u0434\\u0438\\u0430\",\n          \"\\u0415\\u0434\\u0430, \\u0416\\u0438\\u0432\\u043e\\u0442\\u043d\\u044b\\u0435, \\u0420\\u0430\\u0437\\u0432\\u043b\\u0435\\u0447\\u0435\\u043d\\u0438\\u044f\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0414\\u0410\\u041d\\u0422\\u0415. \\u0412\\u0415\\u0427\\u041d\\u041e\\u0421\\u0422\\u042c \\u0413\\u0415\\u041d\\u0418\\u042f\",\n          \"\\u0422\\u0415\\u041e\\u0420\\u0415\\u041c\\u0410 \\u0414\\u041e\\u0416\\u0414\\u042f\",\n          \"\\u0417\\u0430\\u0439\\u043a\\u0430\\u0444\\u0435\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"desc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0412 \\u0440\\u0430\\u043c\\u043a\\u0430\\u0445 10 \\u044e\\u0431\\u0438\\u043b\\u0435\\u0439\\u043d\\u043e\\u0433\\u043e Russia-Italia Film Festival. \\u0412\\u0441\\u0435 \\u043f\\u043e\\u043a\\u0430\\u0437\\u044b \\u043f\\u0440\\u043e\\u0439\\u0434\\u0443\\u0442 \\u043d\\u0430 \\u044f\\u0437\\u044b\\u043a\\u0435 \\u043e\\u0440\\u0438\\u0433\\u0438\\u043d\\u0430\\u043b\\u0430 \\u0441 \\u0440\\u0443\\u0441\\u0441\\u043a\\u0438\\u043c\\u0438 \\u0441\\u0443\\u0431\\u0442\\u0438\\u0442\\u0440\\u0430\\u043c\\u0438. \\u0418\\u0442\\u0430\\u043b\\u0438\\u044f, 1330 \\u0433\\u043e\\u0434. \\u0414\\u0436\\u043e\\u0432\\u0430\\u043d\\u043d\\u0438 \\u0411\\u043e\\u043a\\u043a\\u0430\\u0447\\u0447\\u043e \\u043e\\u0442\\u043f\\u0440\\u0430\\u0432\\u043b\\u044f\\u0435\\u0442\\u0441\\u044f \\u0432 \\u0420\\u0430\\u0432\\u0435\\u043d\\u043d\\u0443, \\u0433\\u0434\\u0435 \\u0434\\u0435\\u0441\\u044f\\u0442\\u044c \\u043b\\u0435\\u0442 \\u043d\\u0430\\u0437\\u0430\\u0434 \\u0432 \\u0438\\u0437\\u0433\\u043d\\u0430\\u043d\\u0438\\u0438 \\u0443\\u043c\\u0435\\u0440 \\u0432\\u0435\\u043b\\u0438\\u043a\\u0438\\u0439 \\u0414\\u0430\\u043d\\u0442\\u0435 \\u0410\\u043b\\u0438\\u0433\\u044c\\u0435\\u0440\\u0438. \\u041e\\u043d \\u0434\\u043e\\u043b\\u0436\\u0435\\u043d \\u0440\\u0430\\u0437\\u044b\\u0441\\u043a\\u0430\\u0442\\u044c \\u0435\\u0433\\u043e \\u0434\\u043e\\u0447\\u044c \\u0411\\u0435\\u0430\\u0442\\u0440\\u0438\\u0447\\u0435 \\u0438 \\u043f\\u0435\\u0440\\u0435\\u0434\\u0430\\u0442\\u044c \\u0434\\u0435\\u0441\\u044f\\u0442\\u044c \\u0437\\u043e\\u043b\\u043e\\u0442\\u044b\\u0445 \\u0444\\u043b\\u043e\\u0440\\u0438\\u043d\\u043e\\u0432 \\u2014 \\u0447\\u0442\\u043e\\u0431\\u044b \\u043a\\u043e\\u043c\\u043f\\u0435\\u043d\\u0441\\u0438\\u0440\\u043e\\u0432\\u0430\\u0442\\u044c \\u043d\\u0435\\u0441\\u043f\\u0440\\u0430\\u0432\\u0435\\u0434\\u043b\\u0438\\u0432\\u043e\\u0435 \\u0438\\u0437\\u0433\\u043d\\u0430\\u043d\\u0438\\u0435 \\u0435\\u0435 \\u043e\\u0442\\u0446\\u0430 \\u0438\\u0437 \\u0424\\u043b\\u043e\\u0440\\u0435\\u043d\\u0446\\u0438\\u0438. \\u0422\\u043e\\u0433\\u0434\\u0430 \\u0414\\u0430\\u043d\\u0442\\u0435 \\u0433\\u043d\\u0430\\u043b\\u0438, \\u043f\\u0440\\u0438\\u0433\\u043e\\u0432\\u0430\\u0440\\u0438\\u0432\\u0430\\u043b\\u0438 \\u043a \\u0441\\u043e\\u0436\\u0436\\u0435\\u043d\\u0438\\u044e \\u0437\\u0430\\u0436\\u0438\\u0432\\u043e, \\u0430 \\u00ab\\u0411\\u043e\\u0436\\u0435\\u0441\\u0442\\u0432\\u0435\\u043d\\u043d\\u0443\\u044e \\u043a\\u043e\\u043c\\u0435\\u0434\\u0438\\u044e\\u00bb \\u0441\\u0447\\u0438\\u0442\\u0430\\u043b\\u0438 \\u0434\\u044c\\u044f\\u0432\\u043e\\u043b\\u044c\\u0441\\u043a\\u0438\\u043c \\u043f\\u0440\\u043e\\u0438\\u0437\\u0432\\u0435\\u0434\\u0435\\u043d\\u0438\\u0435\\u043c. \\u0421\\u0435\\u0439\\u0447\\u0430\\u0441 \\u043e\\u043d \\u0440\\u0435\\u0430\\u0431\\u0438\\u043b\\u0438\\u0442\\u0438\\u0440\\u043e\\u0432\\u0430\\u043d \\u0438 \\u0411\\u043e\\u043a\\u043a\\u0430\\u0447\\u0447\\u043e \\u043f\\u043e\\u0432\\u0442\\u043e\\u0440\\u044f\\u0435\\u0442 \\u0435\\u0433\\u043e \\u043f\\u0443\\u0442\\u044c, \\u0447\\u0442\\u043e\\u0431\\u044b \\u0440\\u0430\\u0441\\u0441\\u043a\\u0430\\u0437\\u0430\\u0442\\u044c \\u0438\\u0441\\u0442\\u0438\\u043d\\u043d\\u0443\\u044e \\u0438\\u0441\\u0442\\u043e\\u0440\\u0438\\u044e \\u043e\\u0434\\u043d\\u043e\\u0433\\u043e \\u0438\\u0437 \\u0432\\u0435\\u043b\\u0438\\u0447\\u0430\\u0439\\u0448\\u0438\\u0445 \\u0433\\u0435\\u043d\\u0438\\u0435\\u0432 \\u0432 \\u0438\\u0441\\u0442\\u043e\\u0440\\u0438\\u0438 \\u0447\\u0435\\u043b\\u043e\\u0432\\u0435\\u0447\\u0435\\u0441\\u0442\\u0432\\u0430. \\u042d\\u0442\\u043e \\u0432\\u043f\\u0435\\u0447\\u0430\\u0442\\u043b\\u044f\\u044e\\u0449\\u0438\\u0439 \\u0442\\u0430\\u043d\\u0434\\u0435\\u043c \\u0434\\u0432\\u0443\\u0445 \\u043c\\u044d\\u0442\\u0440\\u043e\\u0432 \\u0438\\u0442\\u0430\\u043b\\u044c\\u044f\\u043d\\u0441\\u043a\\u043e\\u0433\\u043e \\u043a\\u0438\\u043d\\u043e: \\u0432 \\u0440\\u0435\\u0436\\u0438\\u0441\\u0441\\u0435\\u0440\\u0441\\u043a\\u043e\\u043c \\u043a\\u0440\\u0435\\u0441\\u043b\\u0435 \\u2014 \\u041f\\u0443\\u043f\\u0438 \\u0410\\u0432\\u0430\\u0442\\u0438, \\u043b\\u0430\\u0443\\u0440\\u0435\\u0430\\u0442 \\u0412\\u0435\\u043d\\u0435\\u0446\\u0438\\u0430\\u043d\\u0441\\u043a\\u043e\\u0433\\u043e \\u043a\\u0438\\u043d\\u043e\\u0444\\u0435\\u0441\\u0442\\u0438\\u0432\\u0430\\u043b\\u044f, \\u0432 \\u0433\\u043b\\u0430\\u0432\\u043d\\u043e\\u0439 \\u0440\\u043e\\u043b\\u0438 \\u2014 \\u0421\\u0435\\u0440\\u0434\\u0436\\u043e \\u041a\\u0430\\u0441\\u0442\\u0435\\u043b\\u043b\\u0438\\u0442\\u0442\\u043e, \\u0440\\u0435\\u0436\\u0438\\u0441\\u0441\\u0435\\u0440 \\u0438 \\u0430\\u043a\\u0442\\u0435\\u0440, \\u043d\\u043e\\u043c\\u0438\\u043d\\u0430\\u043d\\u0442 \\u041a\\u0430\\u043d\\u043d\\u0441\\u043a\\u043e\\u0433\\u043e \\u043a\\u0438\\u043d\\u043e\\u0444\\u0435\\u0441\\u0442\\u0438\\u0432\\u0430\\u043b\\u044f.\",\n          \"\\u041c\\u0443\\u043b\\u044c\\u0442\\u0438\\u043c\\u0435\\u0434\\u0438\\u0430 \\u0410\\u0440\\u0442 \\u041c\\u0443\\u0437\\u0435\\u0439, \\u041c\\u043e\\u0441\\u043a\\u0432\\u0430 \\u043f\\u0440\\u0435\\u0434\\u0441\\u0442\\u0430\\u0432\\u043b\\u044f\\u0435\\u0442 \\u0438\\u043d\\u0441\\u0442\\u0430\\u043b\\u043b\\u044f\\u0446\\u0438\\u044e \\u0410\\u043b\\u0435\\u043a\\u0441\\u0435\\u044f \\u041a\\u0430\\u043b\\u043b\\u0438\\u043c\\u044b \\u00ab\\u0422\\u0435\\u043e\\u0440\\u0435\\u043c\\u0430 \\u0434\\u043e\\u0436\\u0434\\u044f\\u00bb, \\u0432\\u043f\\u0435\\u0440\\u0432\\u044b\\u0435 \\u043f\\u043e\\u043a\\u0430\\u0437\\u0430\\u043d\\u043d\\u0443\\u044e \\u0432 2009 \\u0433\\u043e\\u0434\\u0443 \\u0432 \\u0420\\u043e\\u0441\\u0441\\u0438\\u0439\\u0441\\u043a\\u043e\\u043c \\u043f\\u0430\\u0432\\u0438\\u043b\\u044c\\u043e\\u043d\\u0435 \\u043d\\u0430 53-\\u0439 \\u0412\\u0435\\u043d\\u0435\\u0446\\u0438\\u0430\\u043d\\u0441\\u043a\\u043e\\u0439 \\u0431\\u0438\\u0435\\u043d\\u043d\\u0430\\u043b\\u0435. \\u0418\\u043d\\u0441\\u0442\\u0430\\u043b\\u043b\\u044f\\u0446\\u0438\\u044f \\u0410\\u043b\\u0435\\u043a\\u0441\\u0435\\u044f \\u041a\\u0430\\u043b\\u043b\\u0438\\u043c\\u044b \\u043f\\u043e\\u0441\\u0432\\u044f\\u0449\\u0435\\u043d\\u0430 \\u0444\\u0443\\u0442\\u0431\\u043e\\u043b\\u0443 \\u2014 \\u0435\\u0434\\u0438\\u043d\\u0441\\u0442\\u0432\\u0435\\u043d\\u043d\\u043e\\u043c\\u0443 \\u0432\\u0438\\u0434\\u0443 \\u0441\\u043f\\u043e\\u0440\\u0442\\u0430, \\u0441\\u043f\\u043e\\u0441\\u043e\\u0431\\u043d\\u043e\\u043c\\u0443 \\u0441\\u043e\\u0431\\u0440\\u0430\\u0442\\u044c \\u043d\\u0430 \\u0441\\u0442\\u0430\\u0434\\u0438\\u043e\\u043d\\u0430\\u0445 \\u0434\\u0435\\u0441\\u044f\\u0442\\u043a\\u0438 \\u0442\\u044b\\u0441\\u044f\\u0447 \\u0431\\u043e\\u043b\\u0435\\u043b\\u044c\\u0449\\u0438\\u043a\\u043e\\u0432 \\u0438 \\u043e\\u0431\\u044a\\u0435\\u0434\\u0438\\u043d\\u0438\\u0442\\u044c \\u043c\\u0438\\u043b\\u043b\\u0438\\u043e\\u043d\\u044b \\u0437\\u0440\\u0438\\u0442\\u0435\\u043b\\u0435\\u0439 \\u0432\\u043e \\u0432\\u0440\\u0435\\u043c\\u044f \\u0442\\u0440\\u0430\\u043d\\u0441\\u043b\\u044f\\u0446\\u0438\\u0439 \\u0444\\u0443\\u0442\\u0431\\u043e\\u043b\\u044c\\u043d\\u044b\\u0445 \\u043c\\u0430\\u0442\\u0447\\u0435\\u0439. \\u0424\\u0443\\u0442\\u0431\\u043e\\u043b \\u0432\\u044b\\u0437\\u044b\\u0432\\u0430\\u0435\\u0442 \\u0432\\u043e\\u0437\\u0433\\u043e\\u043d\\u043a\\u0443 \\u043a\\u043e\\u043b\\u043b\\u0435\\u043a\\u0442\\u0438\\u0432\\u043d\\u044b\\u0445 \\u044d\\u043c\\u043e\\u0446\\u0438\\u0439, \\u043a\\u043e\\u0433\\u0434\\u0430 \\u043a\\u0430\\u0436\\u0434\\u044b\\u0439 \\u0447\\u0443\\u0432\\u0441\\u0442\\u0432\\u0443\\u0435\\u0442 \\u0441\\u0432\\u043e\\u044e \\u0441\\u043e\\u043f\\u0440\\u0438\\u0447\\u0430\\u0441\\u0442\\u043d\\u043e\\u0441\\u0442\\u044c \\u043a \\u043f\\u043e\\u0431\\u0435\\u0434\\u0430\\u043c \\u0438\\u043b\\u0438 \\u043f\\u043e\\u0440\\u0430\\u0436\\u0435\\u043d\\u0438\\u044f\\u043c, \\u0432\\u043e\\u0441\\u043f\\u0440\\u0438\\u043d\\u0438\\u043c\\u0430\\u0435\\u043c\\u044b\\u043c, \\u043a\\u0430\\u043a \\u00ab\\u043d\\u0430\\u0448\\u0435\\u00bb, \\u0430 \\u043d\\u0435 \\u00ab\\u043c\\u043e\\u0435\\u00bb.\",\n          \"\\u041c\\u043e\\u0436\\u043d\\u043e \\u043f\\u043e\\u0438\\u0433\\u0440\\u0430\\u0442\\u044c \\u0441 \\u043a\\u0440\\u043e\\u043b\\u0438\\u043a\\u0430\\u043c\\u0438, \\u043f\\u043e\\u043a\\u043e\\u0440\\u043c\\u0438\\u0442\\u044c \\u0438\\u0445, \\u0441\\u0444\\u043e\\u0442\\u043e\\u0433\\u0440\\u0430\\u0444\\u0438\\u0440\\u043e\\u0432\\u0430\\u0442\\u044c\\u0441\\u044f, \\u043f\\u043e\\u0438\\u0433\\u0440\\u0430\\u0442\\u044c \\u0432 \\u043d\\u0430\\u0441\\u0442\\u043e\\u043b\\u043a\\u0438 \\u0438 \\u0432\\u0438\\u0434\\u0435\\u043e\\u0438\\u0433\\u0440\\u044b\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0414\\u0430\\u0442\\u044b: 10 \\u043c\\u0430\\u044f, 12:00\",\n          \"\\u0414\\u0430\\u0442\\u044b: \\u0441 13 \\u0430\\u043f\\u0440\\u0435\\u043b\\u044f \\u043f\\u043e 15 \\u0438\\u044e\\u043b\\u044f.\",\n          \"\\u0414\\u0430\\u0442\\u044b: \\u0415\\u0436\\u0435\\u0434\\u043d\\u0435\\u0432\\u043d\\u043e 10:00-22:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"loc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041a\\u0410\\u0420\\u041e 11 \\u041e\\u043a\\u0442\\u044f\\u0431\\u0440\\u044c\",\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041c\\u043e\\u0441\\u043a\\u0432\\u0430, \\u0443\\u043b. \\u041e\\u0441\\u0442\\u043e\\u0436\\u0435\\u043d\\u043a\\u0430, 16. \\u041c\\u0410\\u041c\\u041c. (\\u0433\\u043e\\u0440\\u043e\\u0434)\",\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u0423\\u043b. \\u0421\\u0435\\u043b\\u0435\\u0437\\u043d\\u0435\\u0432\\u0441\\u043a\\u0430\\u044f 4\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: 500\\u0440\",\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: \\u0441\\u0442\\u0443\\u0434\\u0435\\u043d\\u0442\\u044b 350, \\u0432\\u0437\\u0440\\u043e\\u0441\\u043b\\u044b\\u0435 700 \\u20bd. \\u0411\\u0438\\u043b\\u0435\\u0442\\u044b \\u043f\\u043e \\u0441\\u0441\\u044b\\u043b\\u043a\\u0435.\",\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: 400\\u20bd + 12\\u20bd/\\u043c\\u0438\\u043d\\u00a0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"link\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: https://2023.riff-russia.ru/filmy/455-dante\",\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: https://mamm-mdf.ru\",\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: -\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "      id      cat_1             cat_2  \\\n",
              "117  118  Экскурсия  Уличная, История   \n",
              "\n",
              "                                                  name  \\\n",
              "117  Идем на пешеходную экскурсию по Крутицкому под...   \n",
              "\n",
              "                                                  desc                 date  \\\n",
              "117  Вы узнаете много интересного о чудом сохранивш...  Даты: 4 мая в 13:00   \n",
              "\n",
              "                                 loc  \\\n",
              "117  Место: М. Пролетарская, выход 9   \n",
              "\n",
              "                                                 price           link  \n",
              "117  Стоимость: Сумма благодарности на ваше усмотре...  Ссылка: ЗДЕСЬ  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0c784e4e-09a6-46c1-babd-7aebb7ee8e15\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>cat_1</th>\n",
              "      <th>cat_2</th>\n",
              "      <th>name</th>\n",
              "      <th>desc</th>\n",
              "      <th>date</th>\n",
              "      <th>loc</th>\n",
              "      <th>price</th>\n",
              "      <th>link</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>117</th>\n",
              "      <td>118</td>\n",
              "      <td>Экскурсия</td>\n",
              "      <td>Уличная, История</td>\n",
              "      <td>Идем на пешеходную экскурсию по Крутицкому под...</td>\n",
              "      <td>Вы узнаете много интересного о чудом сохранивш...</td>\n",
              "      <td>Даты: 4 мая в 13:00</td>\n",
              "      <td>Место: М. Пролетарская, выход 9</td>\n",
              "      <td>Стоимость: Сумма благодарности на ваше усмотре...</td>\n",
              "      <td>Ссылка: ЗДЕСЬ</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0c784e4e-09a6-46c1-babd-7aebb7ee8e15')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0c784e4e-09a6-46c1-babd-7aebb7ee8e15 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0c784e4e-09a6-46c1-babd-7aebb7ee8e15');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \")\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"118\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u042d\\u043a\\u0441\\u043a\\u0443\\u0440\\u0441\\u0438\\u044f\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0423\\u043b\\u0438\\u0447\\u043d\\u0430\\u044f, \\u0418\\u0441\\u0442\\u043e\\u0440\\u0438\\u044f\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0418\\u0434\\u0435\\u043c \\u043d\\u0430 \\u043f\\u0435\\u0448\\u0435\\u0445\\u043e\\u0434\\u043d\\u0443\\u044e \\u044d\\u043a\\u0441\\u043a\\u0443\\u0440\\u0441\\u0438\\u044e \\u043f\\u043e \\u041a\\u0440\\u0443\\u0442\\u0438\\u0446\\u043a\\u043e\\u043c\\u0443 \\u043f\\u043e\\u0434\\u0432\\u043e\\u0440\\u044c\\u044e 4 \\u043c\\u0430\\u044f\\u00a0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"desc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0412\\u044b \\u0443\\u0437\\u043d\\u0430\\u0435\\u0442\\u0435 \\u043c\\u043d\\u043e\\u0433\\u043e \\u0438\\u043d\\u0442\\u0435\\u0440\\u0435\\u0441\\u043d\\u043e\\u0433\\u043e \\u043e \\u0447\\u0443\\u0434\\u043e\\u043c \\u0441\\u043e\\u0445\\u0440\\u0430\\u043d\\u0438\\u0432\\u0448\\u0435\\u043c\\u0441\\u044f \\u0441\\u0442\\u0430\\u0440\\u0438\\u043d\\u043d\\u043e\\u043c \\u0443\\u0433\\u043e\\u043b\\u043a\\u0435 \\u0441\\u0442\\u0440\\u0430\\u043d\\u044b: \\u043f\\u043e\\u0442\\u0435\\u043c\\u043d\\u0435\\u0432\\u0448\\u0438\\u0439 \\u043e\\u0442 \\u0432\\u0440\\u0435\\u043c\\u0435\\u043d\\u0438 \\u043a\\u0438\\u0440\\u043f\\u0438\\u0447 \\u043f\\u043e\\u0441\\u0442\\u0440\\u043e\\u0435\\u043a, \\u043f\\u043b\\u043e\\u0449\\u0430\\u0434\\u044c, \\u043c\\u043e\\u0449\\u0435\\u043d\\u0430\\u044f \\u0431\\u0443\\u043b\\u044b\\u0436\\u043d\\u0438\\u043a\\u0430\\u043c\\u0438, \\u043f\\u043e\\u043b\\u0438\\u0432\\u043d\\u044b\\u0435 \\u0438\\u0437\\u0440\\u0430\\u0437\\u0446\\u044b \\u0438 \\u0434\\u0435\\u0440\\u0435\\u0432\\u044f\\u043d\\u043d\\u044b\\u0435 \\u0436\\u0438\\u043b\\u044b\\u0435 \\u0434\\u043e\\u043c\\u0430 \\u2013 \\u0432\\u0441\\u0435 \\u0437\\u0434\\u0435\\u0441\\u044c \\u0434\\u044b\\u0448\\u0438\\u0442 \\u0434\\u0440\\u0435\\u0432\\u043d\\u0435\\u0439 \\u0438\\u0441\\u0442\\u043e\\u0440\\u0438\\u0435\\u0439\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0414\\u0430\\u0442\\u044b: 4 \\u043c\\u0430\\u044f \\u0432 13:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"loc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041c. \\u041f\\u0440\\u043e\\u043b\\u0435\\u0442\\u0430\\u0440\\u0441\\u043a\\u0430\\u044f, \\u0432\\u044b\\u0445\\u043e\\u0434 9\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: \\u0421\\u0443\\u043c\\u043c\\u0430 \\u0431\\u043b\\u0430\\u0433\\u043e\\u0434\\u0430\\u0440\\u043d\\u043e\\u0441\\u0442\\u0438 \\u043d\\u0430 \\u0432\\u0430\\u0448\\u0435 \\u0443\\u0441\\u043c\\u043e\\u0442\\u0440\\u0435\\u043d\\u0438\\u0435\\u00a0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"link\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: \\u0417\\u0414\\u0415\\u0421\\u042c\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[1mStarting round 5!\u001b[0m\n",
            "\n",
            "Please upload new interactions:\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-eccb8f68-3c6b-4d9a-8e97-cce0ffbe88fc\" name=\"files[]\" multiple disabled\n",
              "        style=\"border:none\" />\n",
              "     <output id=\"result-eccb8f68-3c6b-4d9a-8e97-cce0ffbe88fc\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script>// Copyright 2017 Google LLC\n",
              "//\n",
              "// Licensed under the Apache License, Version 2.0 (the \"License\");\n",
              "// you may not use this file except in compliance with the License.\n",
              "// You may obtain a copy of the License at\n",
              "//\n",
              "//      http://www.apache.org/licenses/LICENSE-2.0\n",
              "//\n",
              "// Unless required by applicable law or agreed to in writing, software\n",
              "// distributed under the License is distributed on an \"AS IS\" BASIS,\n",
              "// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
              "// See the License for the specific language governing permissions and\n",
              "// limitations under the License.\n",
              "\n",
              "/**\n",
              " * @fileoverview Helpers for google.colab Python module.\n",
              " */\n",
              "(function(scope) {\n",
              "function span(text, styleAttributes = {}) {\n",
              "  const element = document.createElement('span');\n",
              "  element.textContent = text;\n",
              "  for (const key of Object.keys(styleAttributes)) {\n",
              "    element.style[key] = styleAttributes[key];\n",
              "  }\n",
              "  return element;\n",
              "}\n",
              "\n",
              "// Max number of bytes which will be uploaded at a time.\n",
              "const MAX_PAYLOAD_SIZE = 100 * 1024;\n",
              "\n",
              "function _uploadFiles(inputId, outputId) {\n",
              "  const steps = uploadFilesStep(inputId, outputId);\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  // Cache steps on the outputElement to make it available for the next call\n",
              "  // to uploadFilesContinue from Python.\n",
              "  outputElement.steps = steps;\n",
              "\n",
              "  return _uploadFilesContinue(outputId);\n",
              "}\n",
              "\n",
              "// This is roughly an async generator (not supported in the browser yet),\n",
              "// where there are multiple asynchronous steps and the Python side is going\n",
              "// to poll for completion of each step.\n",
              "// This uses a Promise to block the python side on completion of each step,\n",
              "// then passes the result of the previous step as the input to the next step.\n",
              "function _uploadFilesContinue(outputId) {\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  const steps = outputElement.steps;\n",
              "\n",
              "  const next = steps.next(outputElement.lastPromiseValue);\n",
              "  return Promise.resolve(next.value.promise).then((value) => {\n",
              "    // Cache the last promise value to make it available to the next\n",
              "    // step of the generator.\n",
              "    outputElement.lastPromiseValue = value;\n",
              "    return next.value.response;\n",
              "  });\n",
              "}\n",
              "\n",
              "/**\n",
              " * Generator function which is called between each async step of the upload\n",
              " * process.\n",
              " * @param {string} inputId Element ID of the input file picker element.\n",
              " * @param {string} outputId Element ID of the output display.\n",
              " * @return {!Iterable<!Object>} Iterable of next steps.\n",
              " */\n",
              "function* uploadFilesStep(inputId, outputId) {\n",
              "  const inputElement = document.getElementById(inputId);\n",
              "  inputElement.disabled = false;\n",
              "\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  outputElement.innerHTML = '';\n",
              "\n",
              "  const pickedPromise = new Promise((resolve) => {\n",
              "    inputElement.addEventListener('change', (e) => {\n",
              "      resolve(e.target.files);\n",
              "    });\n",
              "  });\n",
              "\n",
              "  const cancel = document.createElement('button');\n",
              "  inputElement.parentElement.appendChild(cancel);\n",
              "  cancel.textContent = 'Cancel upload';\n",
              "  const cancelPromise = new Promise((resolve) => {\n",
              "    cancel.onclick = () => {\n",
              "      resolve(null);\n",
              "    };\n",
              "  });\n",
              "\n",
              "  // Wait for the user to pick the files.\n",
              "  const files = yield {\n",
              "    promise: Promise.race([pickedPromise, cancelPromise]),\n",
              "    response: {\n",
              "      action: 'starting',\n",
              "    }\n",
              "  };\n",
              "\n",
              "  cancel.remove();\n",
              "\n",
              "  // Disable the input element since further picks are not allowed.\n",
              "  inputElement.disabled = true;\n",
              "\n",
              "  if (!files) {\n",
              "    return {\n",
              "      response: {\n",
              "        action: 'complete',\n",
              "      }\n",
              "    };\n",
              "  }\n",
              "\n",
              "  for (const file of files) {\n",
              "    const li = document.createElement('li');\n",
              "    li.append(span(file.name, {fontWeight: 'bold'}));\n",
              "    li.append(span(\n",
              "        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n",
              "        `last modified: ${\n",
              "            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n",
              "                                    'n/a'} - `));\n",
              "    const percent = span('0% done');\n",
              "    li.appendChild(percent);\n",
              "\n",
              "    outputElement.appendChild(li);\n",
              "\n",
              "    const fileDataPromise = new Promise((resolve) => {\n",
              "      const reader = new FileReader();\n",
              "      reader.onload = (e) => {\n",
              "        resolve(e.target.result);\n",
              "      };\n",
              "      reader.readAsArrayBuffer(file);\n",
              "    });\n",
              "    // Wait for the data to be ready.\n",
              "    let fileData = yield {\n",
              "      promise: fileDataPromise,\n",
              "      response: {\n",
              "        action: 'continue',\n",
              "      }\n",
              "    };\n",
              "\n",
              "    // Use a chunked sending to avoid message size limits. See b/62115660.\n",
              "    let position = 0;\n",
              "    do {\n",
              "      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n",
              "      const chunk = new Uint8Array(fileData, position, length);\n",
              "      position += length;\n",
              "\n",
              "      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n",
              "      yield {\n",
              "        response: {\n",
              "          action: 'append',\n",
              "          file: file.name,\n",
              "          data: base64,\n",
              "        },\n",
              "      };\n",
              "\n",
              "      let percentDone = fileData.byteLength === 0 ?\n",
              "          100 :\n",
              "          Math.round((position / fileData.byteLength) * 100);\n",
              "      percent.textContent = `${percentDone}% done`;\n",
              "\n",
              "    } while (position < fileData.byteLength);\n",
              "  }\n",
              "\n",
              "  // All done.\n",
              "  yield {\n",
              "    response: {\n",
              "      action: 'complete',\n",
              "    }\n",
              "  };\n",
              "}\n",
              "\n",
              "scope.google = scope.google || {};\n",
              "scope.google.colab = scope.google.colab || {};\n",
              "scope.google.colab._files = {\n",
              "  _uploadFiles,\n",
              "  _uploadFilesContinue,\n",
              "};\n",
              "})(self);\n",
              "</script> "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Saving intrc_it_55.xlsx to intrc_it_55.xlsx\n",
            "File \"intrc_it_55.xlsx\" uploaded successfully.\n",
            "TOP-10 rec indices:  ['129', '3', '109', '108', '30', '104', '128', '51', '114', '69']\n",
            "Showing TOP-3 recommendations and one random for now.\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "    id                cat_1                                cat_2  \\\n",
              "0  129  Погулять, Экскурсия  Уличная, Природа, Животные, История   \n",
              "1    3             Выставка                  Фотография, История   \n",
              "2  109             Выставка            Фотография, Мода, История   \n",
              "3  108             Выставка    Фотография, Современное Искусство   \n",
              "4   30       Маркет, Лекция                Образовательное, Мода   \n",
              "\n",
              "                                                name  \\\n",
              "0  Экотропы. «Захарьинская пойма» в заказнике «До...   \n",
              "1    Алфавит. Советская фотография 1920-1930-х годов   \n",
              "2    Модницы XIX — начала ХХ века. Из коллекции МАММ   \n",
              "3                        О всех вещах, там обитающих   \n",
              "4  Винтаж в особняке Леман: на выходных на Патриа...   \n",
              "\n",
              "                                                desc  \\\n",
              "0  Ландшафтный заказник «Долина реки Сходни в Кур...   \n",
              "1  Фундаментальное исследование одного из ярчайши...   \n",
              "2  Мультимедиа Арт Музей, Москва представляет выс...   \n",
              "3  Выставка соберёт более 50 работ впервые показа...   \n",
              "4  Особняк Леман превратится в рай для любителей ...   \n",
              "\n",
              "                                date  \\\n",
              "0                            Даты: -   \n",
              "1                   Даты: по 26 мая.   \n",
              "2                   Даты: до 15 июля   \n",
              "3                    Даты: до 26 мая   \n",
              "4  Даты: 28 апреля с 11:00 до 21:00.   \n",
              "\n",
              "                                                 loc  \\\n",
              "0              Место:  55.907730, 37.386544 (далеко)   \n",
              "1  Место: Москва, Якиманская набережная., 2/1. Це...   \n",
              "2    Место: Москва, ул. Остоженка, 16. МАММ. (город)   \n",
              "3  Место: Stella Art Foundation, 1-й Красногварде...   \n",
              "4        Место: Москва, Гранатный пер., 7ст1.(город)   \n",
              "\n",
              "                                     price  \\\n",
              "0                     Стоимость: бесплатно   \n",
              "1  Стоимость: 300-500 ₽. Билеты по ссылке.   \n",
              "2                     Стоимость: бесплатно   \n",
              "3                     Стоимость: бесплатно   \n",
              "4                    Стоимость: 400 рублей   \n",
              "\n",
              "                                                link  \n",
              "0                                          Ссылка: -  \n",
              "1  Ссылка: https://betoncvc.com/exhibitions/alfav...  \n",
              "2                                     Ссылка: ссылка  \n",
              "3                                     Ссылка: ссылка  \n",
              "4                                  Ссылка: Подробнее  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6042b9a2-c5ee-45d7-bd30-e27c18369e38\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>cat_1</th>\n",
              "      <th>cat_2</th>\n",
              "      <th>name</th>\n",
              "      <th>desc</th>\n",
              "      <th>date</th>\n",
              "      <th>loc</th>\n",
              "      <th>price</th>\n",
              "      <th>link</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>129</td>\n",
              "      <td>Погулять, Экскурсия</td>\n",
              "      <td>Уличная, Природа, Животные, История</td>\n",
              "      <td>Экотропы. «Захарьинская пойма» в заказнике «До...</td>\n",
              "      <td>Ландшафтный заказник «Долина реки Сходни в Кур...</td>\n",
              "      <td>Даты: -</td>\n",
              "      <td>Место:  55.907730, 37.386544 (далеко)</td>\n",
              "      <td>Стоимость: бесплатно</td>\n",
              "      <td>Ссылка: -</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>3</td>\n",
              "      <td>Выставка</td>\n",
              "      <td>Фотография, История</td>\n",
              "      <td>Алфавит. Советская фотография 1920-1930-х годов</td>\n",
              "      <td>Фундаментальное исследование одного из ярчайши...</td>\n",
              "      <td>Даты: по 26 мая.</td>\n",
              "      <td>Место: Москва, Якиманская набережная., 2/1. Це...</td>\n",
              "      <td>Стоимость: 300-500 ₽. Билеты по ссылке.</td>\n",
              "      <td>Ссылка: https://betoncvc.com/exhibitions/alfav...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>109</td>\n",
              "      <td>Выставка</td>\n",
              "      <td>Фотография, Мода, История</td>\n",
              "      <td>Модницы XIX — начала ХХ века. Из коллекции МАММ</td>\n",
              "      <td>Мультимедиа Арт Музей, Москва представляет выс...</td>\n",
              "      <td>Даты: до 15 июля</td>\n",
              "      <td>Место: Москва, ул. Остоженка, 16. МАММ. (город)</td>\n",
              "      <td>Стоимость: бесплатно</td>\n",
              "      <td>Ссылка: ссылка</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>108</td>\n",
              "      <td>Выставка</td>\n",
              "      <td>Фотография, Современное Искусство</td>\n",
              "      <td>О всех вещах, там обитающих</td>\n",
              "      <td>Выставка соберёт более 50 работ впервые показа...</td>\n",
              "      <td>Даты: до 26 мая</td>\n",
              "      <td>Место: Stella Art Foundation, 1-й Красногварде...</td>\n",
              "      <td>Стоимость: бесплатно</td>\n",
              "      <td>Ссылка: ссылка</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>30</td>\n",
              "      <td>Маркет, Лекция</td>\n",
              "      <td>Образовательное, Мода</td>\n",
              "      <td>Винтаж в особняке Леман: на выходных на Патриа...</td>\n",
              "      <td>Особняк Леман превратится в рай для любителей ...</td>\n",
              "      <td>Даты: 28 апреля с 11:00 до 21:00.</td>\n",
              "      <td>Место: Москва, Гранатный пер., 7ст1.(город)</td>\n",
              "      <td>Стоимость: 400 рублей</td>\n",
              "      <td>Ссылка: Подробнее</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6042b9a2-c5ee-45d7-bd30-e27c18369e38')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-6042b9a2-c5ee-45d7-bd30-e27c18369e38 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-6042b9a2-c5ee-45d7-bd30-e27c18369e38');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-8db3948e-287c-4ea0-95a5-1a91cd7b5cc0\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8db3948e-287c-4ea0-95a5-1a91cd7b5cc0')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-8db3948e-287c-4ea0-95a5-1a91cd7b5cc0 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \")\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"3\",\n          \"30\",\n          \"109\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u041f\\u043e\\u0433\\u0443\\u043b\\u044f\\u0442\\u044c, \\u042d\\u043a\\u0441\\u043a\\u0443\\u0440\\u0441\\u0438\\u044f\",\n          \"\\u0412\\u044b\\u0441\\u0442\\u0430\\u0432\\u043a\\u0430\",\n          \"\\u041c\\u0430\\u0440\\u043a\\u0435\\u0442, \\u041b\\u0435\\u043a\\u0446\\u0438\\u044f\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"\\u0424\\u043e\\u0442\\u043e\\u0433\\u0440\\u0430\\u0444\\u0438\\u044f, \\u0418\\u0441\\u0442\\u043e\\u0440\\u0438\\u044f\",\n          \"\\u041e\\u0431\\u0440\\u0430\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e\\u0435, \\u041c\\u043e\\u0434\\u0430\",\n          \"\\u0424\\u043e\\u0442\\u043e\\u0433\\u0440\\u0430\\u0444\\u0438\\u044f, \\u041c\\u043e\\u0434\\u0430, \\u0418\\u0441\\u0442\\u043e\\u0440\\u0438\\u044f\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"\\u0410\\u043b\\u0444\\u0430\\u0432\\u0438\\u0442. \\u0421\\u043e\\u0432\\u0435\\u0442\\u0441\\u043a\\u0430\\u044f \\u0444\\u043e\\u0442\\u043e\\u0433\\u0440\\u0430\\u0444\\u0438\\u044f 1920-1930-\\u0445 \\u0433\\u043e\\u0434\\u043e\\u0432\",\n          \"\\u0412\\u0438\\u043d\\u0442\\u0430\\u0436 \\u0432 \\u043e\\u0441\\u043e\\u0431\\u043d\\u044f\\u043a\\u0435 \\u041b\\u0435\\u043c\\u0430\\u043d: \\u043d\\u0430 \\u0432\\u044b\\u0445\\u043e\\u0434\\u043d\\u044b\\u0445 \\u043d\\u0430 \\u041f\\u0430\\u0442\\u0440\\u0438\\u0430\\u0440\\u0448\\u0438\\u0445 \\u043f\\u0440\\u043e\\u0439\\u0434\\u0435\\u0442 Vintage Marketplace\",\n          \"\\u041c\\u043e\\u0434\\u043d\\u0438\\u0446\\u044b XIX \\u2014 \\u043d\\u0430\\u0447\\u0430\\u043b\\u0430 \\u0425\\u0425 \\u0432\\u0435\\u043a\\u0430. \\u0418\\u0437 \\u043a\\u043e\\u043b\\u043b\\u0435\\u043a\\u0446\\u0438\\u0438 \\u041c\\u0410\\u041c\\u041c\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"desc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"\\u0424\\u0443\\u043d\\u0434\\u0430\\u043c\\u0435\\u043d\\u0442\\u0430\\u043b\\u044c\\u043d\\u043e\\u0435 \\u0438\\u0441\\u0441\\u043b\\u0435\\u0434\\u043e\\u0432\\u0430\\u043d\\u0438\\u0435 \\u043e\\u0434\\u043d\\u043e\\u0433\\u043e \\u0438\\u0437 \\u044f\\u0440\\u0447\\u0430\\u0439\\u0448\\u0438\\u0445 \\u043f\\u0435\\u0440\\u0438\\u043e\\u0434\\u043e\\u0432 \\u043c\\u0438\\u0440\\u043e\\u0432\\u043e\\u0439 \\u0444\\u043e\\u0442\\u043e\\u0433\\u0440\\u0430\\u0444\\u0438\\u0438 \\u2014 1920\\u201330-\\u0445 \\u0433\\u043e\\u0434\\u043e\\u0432. \\u0412 \\u0430\\u0440\\u0442-\\u043f\\u0440\\u043e\\u0433\\u0440\\u0430\\u043c\\u043c\\u0435 \\u0437\\u0430\\u044f\\u0432\\u043b\\u0435\\u043d\\u044b \\u0420\\u043e\\u0434\\u0447\\u0435\\u043d\\u043a\\u043e, \\u0428\\u0430\\u0439\\u0445\\u0435\\u0442, \\u041a\\u0443\\u0434\\u043e\\u044f\\u0440\\u043e\\u0432, \\u0428\\u0438\\u043c\\u0430\\u043d\\u0441\\u043a\\u0438\\u0439 \\u0438 \\u0434\\u0440\\u0443\\u0433\\u0438\\u0435 \\u043b\\u0435\\u0433\\u0435\\u043d\\u0434\\u044b \\u0438 \\u043c\\u0430\\u043b\\u043e\\u0438\\u0437\\u0432\\u0435\\u0441\\u0442\\u043d\\u044b\\u0435 \\u0434\\u0435\\u044f\\u0442\\u0435\\u043b\\u0438 \\u044d\\u043f\\u043e\\u0445\\u0438. \\u0412\\u0430\\u0436\\u043d\\u044b\\u043c \\u0434\\u043e\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\\u0435\\u043c \\u043a \\u0432\\u044b\\u0441\\u0442\\u0430\\u0432\\u043a\\u0435 \\u0441\\u0442\\u0430\\u043d\\u0443\\u0442 \\u043e\\u0440\\u0438\\u0433\\u0438\\u043d\\u0430\\u043b\\u044c\\u043d\\u044b\\u0435 \\u0436\\u0443\\u0440\\u043d\\u0430\\u043b\\u044b \\u00ab\\u0421\\u0421\\u0421\\u0420 \\u043d\\u0430 \\u0441\\u0442\\u0440\\u043e\\u0439\\u043a\\u0435\\u00bb \\u0438 \\u0434\\u0435\\u0442\\u0441\\u043a\\u0438\\u0435 \\u043a\\u043d\\u0438\\u0433\\u0438, \\u0438\\u043b\\u043b\\u044e\\u0441\\u0442\\u0440\\u0438\\u0440\\u043e\\u0432\\u0430\\u043d\\u043d\\u044b\\u0435 \\u0444\\u043e\\u0442\\u043e\\u0433\\u0440\\u0430\\u0444\\u0438\\u044f\\u043c\\u0438 \\u0442\\u043e\\u0433\\u043e \\u043f\\u0435\\u0440\\u0438\\u043e\\u0434\\u0430.\",\n          \"\\u041e\\u0441\\u043e\\u0431\\u043d\\u044f\\u043a \\u041b\\u0435\\u043c\\u0430\\u043d \\u043f\\u0440\\u0435\\u0432\\u0440\\u0430\\u0442\\u0438\\u0442\\u0441\\u044f \\u0432 \\u0440\\u0430\\u0439 \\u0434\\u043b\\u044f \\u043b\\u044e\\u0431\\u0438\\u0442\\u0435\\u043b\\u0435\\u0439 \\u0432\\u0438\\u043d\\u0442\\u0430\\u0436\\u0430. \\u041b\\u044e\\u0431\\u0438\\u0442\\u0435\\u043b\\u0438 \\u043c\\u043e\\u0434\\u044b \\u0438 \\u0441\\u0442\\u0438\\u043b\\u044f \\u0441\\u043c\\u043e\\u0433\\u0443\\u0442 \\u043f\\u043e\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044c\\u0441\\u044f \\u0432 \\u0443\\u043d\\u0438\\u043a\\u0430\\u043b\\u044c\\u043d\\u0443\\u044e \\u0430\\u0442\\u043c\\u043e\\u0441\\u0444\\u0435\\u0440\\u0443 \\u043f\\u0440\\u043e\\u0448\\u043b\\u043e\\u0433\\u043e: \\u0448\\u0435\\u0441\\u0442\\u044c\\u0434\\u0435\\u0441\\u044f\\u0442 \\u0432\\u0438\\u043d\\u0442\\u0430\\u0436\\u043d\\u044b\\u0445 \\u043c\\u0430\\u0433\\u0430\\u0437\\u0438\\u043d\\u043e\\u0432 \\u0441\\u043e \\u0432\\u0441\\u0435\\u0439 \\u0420\\u043e\\u0441\\u0441\\u0438\\u0438 \\u043f\\u0440\\u0435\\u0434\\u043b\\u043e\\u0436\\u0430\\u0442 \\u0441\\u0432\\u043e\\u0438 \\u0443\\u043d\\u0438\\u043a\\u0430\\u043b\\u044c\\u043d\\u044b\\u0435 \\u043d\\u0430\\u0445\\u043e\\u0434\\u043a\\u0438 \\u0432 \\u043d\\u0435\\u043f\\u043e\\u0432\\u0442\\u043e\\u0440\\u0438\\u043c\\u043e\\u0439 \\u0430\\u0442\\u043c\\u043e\\u0441\\u0444\\u0435\\u0440\\u0435 \\u0440\\u043e\\u0441\\u043a\\u043e\\u0448\\u043d\\u043e\\u0433\\u043e \\u0437\\u0434\\u0430\\u043d\\u0438\\u044f XIX \\u0432\\u0435\\u043a\\u0430. \\u041c\\u043e\\u0434\\u043d\\u044b\\u0435 \\u044d\\u043d\\u0442\\u0443\\u0437\\u0438\\u0430\\u0441\\u0442\\u044b \\u0441\\u043c\\u043e\\u0433\\u0443\\u0442 \\u043d\\u0430\\u0441\\u043b\\u0430\\u0434\\u0438\\u0442\\u044c\\u0441\\u044f \\u0431\\u043e\\u0433\\u0430\\u0442\\u0441\\u0442\\u0432\\u043e\\u043c \\u0441\\u0442\\u0438\\u043b\\u0435\\u0439 \\u043e\\u0442 \\u044d\\u043f\\u043e\\u0445\\u0438 \\u0421\\u0442\\u0430\\u0440\\u043e\\u0433\\u043e \\u0413\\u043e\\u043b\\u043b\\u0438\\u0432\\u0443\\u0434\\u0430 \\u0434\\u043e \\u0430\\u0441\\u0438\\u043c\\u043c\\u0435\\u0442\\u0440\\u0438\\u0447\\u043d\\u043e\\u0433\\u043e \\u0430\\u0440\\u0442\\u0438\\u0441\\u0430\\u043d\\u0430\\u043b\\u044c\\u043d\\u043e\\u0433\\u043e \\u0442\\u0440\\u0438\\u043a\\u043e\\u0442\\u0430\\u0436\\u0430, \\u043f\\u0440\\u0435\\u0434\\u0441\\u0442\\u0430\\u0432\\u043b\\u0435\\u043d\\u043d\\u043e\\u0433\\u043e \\u0442\\u0430\\u043a\\u0438\\u043c\\u0438 \\u0438\\u043c\\u0435\\u043d\\u0430\\u043c\\u0438, \\u043a\\u0430\\u043a Christian Dior, Yves Saint Laurent \\u0438 Alaia. \\u041c\\u0430\\u0440\\u043a\\u0435\\u0442 \\u043f\\u0440\\u0435\\u0434\\u043b\\u043e\\u0436\\u0438\\u0442 \\u043a\\u043e\\u043b\\u043b\\u0435\\u043a\\u0446\\u0438\\u0438 \\u0438\\u0437 \\u0434\\u0438\\u0437\\u0430\\u0439\\u043d\\u0435\\u0440\\u0441\\u043a\\u0438\\u0445 \\u0430\\u0440\\u0445\\u0438\\u0432\\u043e\\u0432 \\u0432\\u0440\\u043e\\u0434\\u0435 Gucci \\u044d\\u043f\\u043e\\u0445\\u0438 \\u0422\\u043e\\u043c\\u0430 \\u0424\\u043e\\u0440\\u0434\\u0430 \\u0438 Dior \\u043e\\u0442 Galliano \\u043f\\u043e \\u0446\\u0435\\u043d\\u0430\\u043c, \\u043d\\u0435\\u0441\\u0440\\u0430\\u0432\\u043d\\u0438\\u043c\\u044b\\u043c \\u0441 \\u043c\\u0438\\u0440\\u043e\\u0432\\u044b\\u043c\\u0438. \\u041a\\u0440\\u043e\\u043c\\u0435 \\u0442\\u043e\\u0433\\u043e, \\u043d\\u0430 \\u043c\\u0435\\u0440\\u043e\\u043f\\u0440\\u0438\\u044f\\u0442\\u0438\\u0438 \\u0431\\u0443\\u0434\\u0435\\u0442 \\u043e\\u0441\\u043e\\u0431\\u044b\\u0439 \\u0443\\u0433\\u043e\\u043b\\u043e\\u043a \\u043e\\u0442 THE CULTT \\u0441 \\u044d\\u043a\\u0441\\u043a\\u043b\\u044e\\u0437\\u0438\\u0432\\u043d\\u044b\\u043c\\u0438 \\u0432\\u0435\\u0449\\u0430\\u043c\\u0438 \\u043e\\u0442 \\u0441\\u0442\\u043e\\u043b\\u0438\\u0447\\u043d\\u044b\\u0445 it-girls \\u0438 boys. \\u0417\\u0434\\u0435\\u0441\\u044c \\u043f\\u0440\\u043e\\u0439\\u0434\\u0443\\u0442 \\u043b\\u0435\\u043a\\u0446\\u0438\\u0438 \\u0438 \\u043f\\u0430\\u0431\\u043b\\u0438\\u043a-\\u0442\\u043e\\u043a\\u0438 \\u0441 \\u0432\\u0435\\u0434\\u0443\\u0449\\u0438\\u043c\\u0438 \\u044d\\u043a\\u0441\\u043f\\u0435\\u0440\\u0442\\u0430\\u043c\\u0438 \\u0438 \\u0441\\u0442\\u0438\\u043b\\u0438\\u0441\\u0442\\u0430\\u043c\\u0438.\\u00a0\",\n          \"\\u041c\\u0443\\u043b\\u044c\\u0442\\u0438\\u043c\\u0435\\u0434\\u0438\\u0430 \\u0410\\u0440\\u0442 \\u041c\\u0443\\u0437\\u0435\\u0439, \\u041c\\u043e\\u0441\\u043a\\u0432\\u0430 \\u043f\\u0440\\u0435\\u0434\\u0441\\u0442\\u0430\\u0432\\u043b\\u044f\\u0435\\u0442 \\u0432\\u044b\\u0441\\u0442\\u0430\\u0432\\u043a\\u0443 \\u00ab\\u041c\\u043e\\u0434\\u043d\\u0438\\u0446\\u044b XIX \\u2014 \\u043d\\u0430\\u0447\\u0430\\u043b\\u0430 \\u0425\\u0425 \\u0432\\u0435\\u043a\\u0430. \\u0418\\u0437 \\u043a\\u043e\\u043b\\u043b\\u0435\\u043a\\u0446\\u0438\\u0438 \\u041c\\u0410\\u041c\\u041c\\u00bb, \\u0434\\u0435\\u043c\\u043e\\u043d\\u0441\\u0442\\u0440\\u0438\\u0440\\u0443\\u044e\\u0449\\u0443\\u044e \\u044d\\u0432\\u043e\\u043b\\u044e\\u0446\\u0438\\u044e \\u0440\\u043e\\u0441\\u0441\\u0438\\u0439\\u0441\\u043a\\u043e\\u0439 \\u043c\\u043e\\u0434\\u044b \\u0441 1860-\\u0445 \\u0434\\u043e 1910-\\u0445 \\u0433\\u043e\\u0434\\u043e\\u0432. \\u0427\\u0443\\u0442\\u043a\\u043e \\u043e\\u0442\\u043a\\u043b\\u0438\\u043a\\u0430\\u044f\\u0441\\u044c \\u043d\\u0430 \\u043f\\u0435\\u0440\\u0435\\u043c\\u0435\\u043d\\u044b \\u0432 \\u043e\\u0431\\u0449\\u0435\\u0441\\u0442\\u0432\\u0435, \\u043c\\u043e\\u0434\\u0430 \\u0432\\u0441\\u0435\\u0433\\u0434\\u0430 \\u2014 \\u0437\\u0435\\u0440\\u043a\\u0430\\u043b\\u043e \\u044d\\u043f\\u043e\\u0445\\u0438, \\u0430 \\u043a\\u043e\\u0441\\u0442\\u044e\\u043c\\u044b, \\u0430\\u043a\\u0441\\u0435\\u0441\\u0441\\u0443\\u0430\\u0440\\u044b \\u0438 \\u043f\\u0440\\u0438\\u0447\\u0435\\u0441\\u043a\\u0438 \\u2014 \\u043f\\u0440\\u0435\\u0432\\u043e\\u0441\\u0445\\u043e\\u0434\\u043d\\u044b\\u0435 \\u0440\\u0430\\u0441\\u0441\\u043a\\u0430\\u0437\\u0447\\u0438\\u043a\\u0438, \\u043f\\u043e\\u0432\\u0435\\u0441\\u0442\\u0432\\u0443\\u044e\\u0449\\u0438\\u0435 \\u043e\\u0431 \\u0438\\u0441\\u0442\\u043e\\u0440\\u0438\\u0447\\u0435\\u0441\\u043a\\u0438\\u0445 \\u0438 \\u0441\\u043e\\u0446\\u0438\\u0430\\u043b\\u044c\\u043d\\u044b\\u0445 \\u043f\\u0435\\u0440\\u0438\\u043f\\u0435\\u0442\\u0438\\u044f\\u0445, \\u0442\\u0435\\u0445\\u043d\\u0438\\u0447\\u0435\\u0441\\u043a\\u043e\\u043c \\u0438 \\u043a\\u0443\\u043b\\u044c\\u0442\\u0443\\u0440\\u043d\\u043e\\u043c \\u043f\\u0440\\u043e\\u0433\\u0440\\u0435\\u0441\\u0441\\u0435.\\u00a0 \\u0412\\u044b\\u0441\\u0442\\u0430\\u0432\\u043a\\u0430, \\u0441\\u043e\\u0437\\u0434\\u0430\\u043d\\u043d\\u0430\\u044f \\u043d\\u0430 \\u043e\\u0441\\u043d\\u043e\\u0432\\u0435 \\u043e\\u0431\\u0448\\u0438\\u0440\\u043d\\u043e\\u0433\\u043e \\u0441\\u043e\\u0431\\u0440\\u0430\\u043d\\u0438\\u044f \\u041c\\u0410\\u041c\\u041c, \\u0443\\u0441\\u043b\\u043e\\u0432\\u043d\\u043e \\u0434\\u0435\\u043b\\u0438\\u0442\\u0441\\u044f \\u043d\\u0430 \\u0432\\u043e\\u0441\\u0435\\u043c\\u044c \\u0440\\u0430\\u0437\\u0434\\u0435\\u043b\\u043e\\u0432: \\u00ab\\u041a\\u0440\\u0438\\u043d\\u043e\\u043b\\u0438\\u043d\\u044b\\u00bb, \\u00ab\\u0416\\u0435\\u043d\\u0449\\u0438\\u043d\\u0430-\\u0446\\u0432\\u0435\\u0442\\u043e\\u043a\\u00bb, \\u00ab\\u0414\\u0435\\u0432\\u0443\\u0448\\u043a\\u0438 \\u0432 \\u0443\\u043d\\u0438\\u0444\\u043e\\u0440\\u043c\\u0435\\u00bb, \\u00ab\\u041c\\u0435\\u0445\\u0430\\u00bb, \\u00ab\\u041c\\u0443\\u0436\\u0441\\u043a\\u0430\\u044f \\u043c\\u043e\\u0434\\u0430\\u00bb, \\u00ab\\u0410-\\u043b\\u044f \\u0440\\u044e\\u0441\\u00bb, \\u00ab\\u0428\\u043b\\u044f\\u043f\\u044b\\u00bb, \\u00ab\\u041f\\u0440\\u0438\\u0447\\u0435\\u0441\\u043a\\u0438\\u00bb, \\u0432 \\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0445 \\u0440\\u0430\\u0441\\u0441\\u043a\\u0430\\u0437\\u044b\\u0432\\u0430\\u0435\\u0442\\u0441\\u044f \\u043e \\u0433\\u043b\\u0430\\u0432\\u043d\\u044b\\u0445 \\u0442\\u0435\\u043d\\u0434\\u0435\\u043d\\u0446\\u0438\\u044f\\u0445 \\u043c\\u043e\\u0434\\u044b \\u0441\\u0435\\u0440\\u0435\\u0434\\u0438\\u043d\\u044b XIX \\u2014 \\u043d\\u0430\\u0447\\u0430\\u043b\\u0430 XX \\u0432\\u0435\\u043a\\u043e\\u0432. \\u041a\\u0430\\u0436\\u0434\\u044b\\u0439 \\u0438\\u0437 \\u0440\\u0430\\u0437\\u0434\\u0435\\u043b\\u043e\\u0432 \\u0441\\u043e\\u043f\\u0440\\u043e\\u0432\\u043e\\u0436\\u0434\\u0430\\u0435\\u0442\\u0441\\u044f \\u0442\\u0435\\u043a\\u0441\\u0442\\u043e\\u043c. \\u042d\\u0442\\u0438 \\u0442\\u0435\\u043a\\u0441\\u0442\\u044b \\u043d\\u0430\\u043f\\u0438\\u0441\\u0430\\u043d\\u044b \\u041e\\u043b\\u044c\\u0433\\u043e\\u0439 \\u0425\\u043e\\u0440\\u043e\\u0448\\u0438\\u043b\\u043e\\u0432\\u043e\\u0439 \\u2014 \\u0438\\u0437\\u0432\\u0435\\u0441\\u0442\\u043d\\u044b\\u043c \\u0438\\u0441\\u0442\\u043e\\u0440\\u0438\\u043a\\u043e\\u043c \\u043c\\u043e\\u0434\\u044b, \\u041b\\u0430\\u0440\\u0438\\u0441\\u043e\\u0439 \\u0417\\u0430\\u0439\\u0446\\u0435\\u0432\\u043e\\u0439 \\u2014 \\u0445\\u0440\\u0430\\u043d\\u0438\\u0442\\u0435\\u043b\\u0435\\u043c \\u043c\\u0443\\u0437\\u0435\\u0439\\u043d\\u043e\\u0433\\u043e \\u0444\\u043e\\u043d\\u0434\\u0430 \\u0444\\u043e\\u0442\\u043e\\u0433\\u0440\\u0430\\u0444\\u0438\\u0439.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"\\u0414\\u0430\\u0442\\u044b: \\u043f\\u043e 26 \\u043c\\u0430\\u044f.\",\n          \"\\u0414\\u0430\\u0442\\u044b: 28 \\u0430\\u043f\\u0440\\u0435\\u043b\\u044f \\u0441 11:00 \\u0434\\u043e 21:00.\",\n          \"\\u0414\\u0430\\u0442\\u044b: \\u0434\\u043e 15 \\u0438\\u044e\\u043b\\u044f\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"loc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041c\\u043e\\u0441\\u043a\\u0432\\u0430, \\u042f\\u043a\\u0438\\u043c\\u0430\\u043d\\u0441\\u043a\\u0430\\u044f \\u043d\\u0430\\u0431\\u0435\\u0440\\u0435\\u0436\\u043d\\u0430\\u044f., 2/1. \\u0426\\u0435\\u043d\\u0442\\u0440 \\u0432\\u0438\\u0437\\u0443\\u0430\\u043b\\u044c\\u043d\\u043e\\u0439 \\u043a\\u0443\\u043b\\u044c\\u0442\\u0443\\u0440\\u044b B\\u00e9ton. (\\u0433\\u043e\\u0440\\u043e\\u0434)\",\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041c\\u043e\\u0441\\u043a\\u0432\\u0430, \\u0413\\u0440\\u0430\\u043d\\u0430\\u0442\\u043d\\u044b\\u0439 \\u043f\\u0435\\u0440., 7\\u0441\\u04421.(\\u0433\\u043e\\u0440\\u043e\\u0434)\",\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041c\\u043e\\u0441\\u043a\\u0432\\u0430, \\u0443\\u043b. \\u041e\\u0441\\u0442\\u043e\\u0436\\u0435\\u043d\\u043a\\u0430, 16. \\u041c\\u0410\\u041c\\u041c. (\\u0433\\u043e\\u0440\\u043e\\u0434)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: \\u0431\\u0435\\u0441\\u043f\\u043b\\u0430\\u0442\\u043d\\u043e\",\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: 300-500 \\u20bd. \\u0411\\u0438\\u043b\\u0435\\u0442\\u044b \\u043f\\u043e \\u0441\\u0441\\u044b\\u043b\\u043a\\u0435.\",\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: 400 \\u0440\\u0443\\u0431\\u043b\\u0435\\u0439\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"link\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: https://betoncvc.com/exhibitions/alfavit-sovetskaya-fotografiya-1920-1930-kh-godov\",\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: \\u041f\\u043e\\u0434\\u0440\\u043e\\u0431\\u043d\\u0435\\u0435\",\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: -\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "      id       cat_1                          cat_2  \\\n",
              "19    20  Перформанс      История, Культуры, Музыка   \n",
              "24    25    Выставка              Живопись, История   \n",
              "34    35   Кинопоказ          Классика, Мультфильмы   \n",
              "39    40   Кинопоказ      Классика, Образовательное   \n",
              "43    44        Игры  Развлечения, История, Уличная   \n",
              "74    75   Экскурсия            Уличная, Литература   \n",
              "87    88  Перформанс            Еда, Кино, Классика   \n",
              "98    99     Концерт                          Песни   \n",
              "114  115   Спектакль                       Классика   \n",
              "136  138     Тусовка                  Танцы, Музыка   \n",
              "145  147     Тусовка                  Танцы, Музыка   \n",
              "164  166      Лекция                     Кино, Мода   \n",
              "186  188        Игры  История, Архитектура, Уличная   \n",
              "187  189        Игры   История, Литература, Уличная   \n",
              "200  202   Спектакль   Танцы, Современное Искусство   \n",
              "\n",
              "                                                  name  \\\n",
              "19   Назад в прошлое: встретить праздники с национа...   \n",
              "24                    Выставка посвященная группе «13»   \n",
              "34                  Кинопоказ фильма «Мальчик и птица»   \n",
              "39       Показ и обсуждение фильма \"Большой Лебовски\"    \n",
              "43               Культурно-исторический квест HSE RUN    \n",
              "74                    Булгаковская Москва — какая она?   \n",
              "87    Гастрономический мюзикл «Москва слезам не верит»   \n",
              "98          Бесплатный концерт Мота и группы «Земляне»   \n",
              "114                         Спектакль «Собачье сердце»   \n",
              "136                  Дебютная вечеринка команды R-99.    \n",
              "145                             NU: HARD HIGHTS в RNDM   \n",
              "164  Нескромное обаяние женственности: 1950-е в мод...   \n",
              "186                                        КОЛОМЕНСКОЕ   \n",
              "187                            ЛЮБОВНЫЕ ИСТОРИИ МОСКВЫ   \n",
              "200               Абсурдистский танцевальный спектакль   \n",
              "\n",
              "                                                  desc  \\\n",
              "19   «ХОРОВОД», организованный DU - UNDERGROUND SHO...   \n",
              "24   Выставка под названием «13. В переулках эпохи»...   \n",
              "34   Показ от Киноклуба Дом Динамо и его кураторов ...   \n",
              "39   В кофейне «Ностальгия» на Соколе сперва пройде...   \n",
              "43   Увлекательные загадки, интересные места столиц...   \n",
              "74   Мистическая и романтичная! Убедиться в этом мо...   \n",
              "87   Это совершенно новый для России формат театрал...   \n",
              "98   На сцене выступят известные артисты: МОТ и Гру...   \n",
              "114  Актерский состав: Дмитрий Белоцерковский, Свят...   \n",
              "136  Она откроет серию мечтательно-дарковым звучани...   \n",
              "145  Вечеринка тяжелой скоростной электроники и хар...   \n",
              "164  Десятилетие расцвета парижской высокой моды и ...   \n",
              "186  В Коломенском очень хорошо читаются изменения ...   \n",
              "187  Зачем нужен был фиктивный брак девушке, влюблё...   \n",
              "200  Танцевальный спектакль преподавателя Gogol Sch...   \n",
              "\n",
              "                                             date  \\\n",
              "19                       Даты: 12 мая 19:00–23:30   \n",
              "24                               Даты: до 2 июня.   \n",
              "34                             Даты: 4 мая, 20:00   \n",
              "39                        Даты: 27 апреля в 18:30   \n",
              "43   Даты: 28 апреля 10:30, старт квеста — 12:00.   \n",
              "74                        Даты: Ежедневно в 16:00   \n",
              "87                      Даты: 18 апреля — 31 мая    \n",
              "98                         Даты: 12 апреля 18:00    \n",
              "114                           Даты: 3 мая в 14:00   \n",
              "136                               Даты: 28 апреля   \n",
              "145                 Даты: 3 мая с 22:00 до 07:00.   \n",
              "164                         Даты: 25 апреля 19:30   \n",
              "186                                       Даты: -   \n",
              "187                                       Даты: -   \n",
              "200                          Даты: 25.04, в 20:00   \n",
              "\n",
              "                                                   loc  \\\n",
              "19   Место: Москва, ул. Большая Переяславская, 46с1...   \n",
              "24   Место: Москва, Ленинградский проспект, 15 ст 1...   \n",
              "34   Место:  ГУМ, Красная площадь, 3, 2 этаж, 1 линия.   \n",
              "39   Место: Москва,  2-я Песчаная, 4. м. Сокол (город)   \n",
              "43   Место: Москва, Старая Басманная, 21/4с1. м. Ку...   \n",
              "74         Место: Москва, Триумфальная пл., 2  (город)   \n",
              "87     Место: Москва, 3-я ул. Ямского Поля, 15 (город)   \n",
              "98   Место: Москва, просп. Мира, 119, ВДНХ, Главная...   \n",
              "114                               Место: Театр Комедии   \n",
              "136                                   Место: RNDM клуб   \n",
              "145  Место: клуб RNDM. Наставнический пер., 13/15, ...   \n",
              "164                   Место: Ермолаевский переулок, 17   \n",
              "186                               Место: м Коломенская   \n",
              "187                                  Место: м Тверская   \n",
              "200  Место: Москва, Георгиевский переулок, 3с3 Теат...   \n",
              "\n",
              "                                            price  \\\n",
              "19                           Стоимость: от 1200р.   \n",
              "24                       Стоимость: от 250 рублей   \n",
              "34                           Стоимость: бесплатно   \n",
              "39                               Стоимость: 400 р   \n",
              "43                           Стоимость: бесплатно   \n",
              "74                                Стоимость: 700р   \n",
              "87                           Стоимость: от 6000 ₽   \n",
              "98                      Стоимость: Вход свободный   \n",
              "114  Стоимость: от 1200р, –75% по промокоду ТЕАТР   \n",
              "136                             Стоимость: 2500 р   \n",
              "145   Стоимость: предпродажа от 1000 ₽ по ссылке.   \n",
              "164                              Стоимость: 450 р   \n",
              "186                 Стоимость: 1200 р на компанию   \n",
              "187                 Стоимость: 1200 р на компанию   \n",
              "200                              Стоимость: 1500р   \n",
              "\n",
              "                                        link  \n",
              "19                         Ссылка: Подробнее  \n",
              "24                         Ссылка: Подробнее  \n",
              "34                    Ссылка: по регистрации  \n",
              "39                Ссылка: «Большой Лебовски»  \n",
              "43                         Ссылка: вот и вот  \n",
              "74                     Ссылка:  Купить билет  \n",
              "87                      Ссылка: Купить билет  \n",
              "98                                 Ссылка: -  \n",
              "114           Ссылка: Билеты по ссылке здесь  \n",
              "136                Ссылка: Билеты по ссылке.  \n",
              "145  Ссылка: https://t.me/NotUnderground/215  \n",
              "164                           Ссылка: ссылка  \n",
              "186                           Ссылка: ссылка  \n",
              "187                           Ссылка: ссылка  \n",
              "200                    Ссылка: Билетиксы тут  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5719f705-0606-49f6-9783-623a2b26a8a8\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>cat_1</th>\n",
              "      <th>cat_2</th>\n",
              "      <th>name</th>\n",
              "      <th>desc</th>\n",
              "      <th>date</th>\n",
              "      <th>loc</th>\n",
              "      <th>price</th>\n",
              "      <th>link</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>20</td>\n",
              "      <td>Перформанс</td>\n",
              "      <td>История, Культуры, Музыка</td>\n",
              "      <td>Назад в прошлое: встретить праздники с национа...</td>\n",
              "      <td>«ХОРОВОД», организованный DU - UNDERGROUND SHO...</td>\n",
              "      <td>Даты: 12 мая 19:00–23:30</td>\n",
              "      <td>Место: Москва, ул. Большая Переяславская, 46с1...</td>\n",
              "      <td>Стоимость: от 1200р.</td>\n",
              "      <td>Ссылка: Подробнее</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>25</td>\n",
              "      <td>Выставка</td>\n",
              "      <td>Живопись, История</td>\n",
              "      <td>Выставка посвященная группе «13»</td>\n",
              "      <td>Выставка под названием «13. В переулках эпохи»...</td>\n",
              "      <td>Даты: до 2 июня.</td>\n",
              "      <td>Место: Москва, Ленинградский проспект, 15 ст 1...</td>\n",
              "      <td>Стоимость: от 250 рублей</td>\n",
              "      <td>Ссылка: Подробнее</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>35</td>\n",
              "      <td>Кинопоказ</td>\n",
              "      <td>Классика, Мультфильмы</td>\n",
              "      <td>Кинопоказ фильма «Мальчик и птица»</td>\n",
              "      <td>Показ от Киноклуба Дом Динамо и его кураторов ...</td>\n",
              "      <td>Даты: 4 мая, 20:00</td>\n",
              "      <td>Место:  ГУМ, Красная площадь, 3, 2 этаж, 1 линия.</td>\n",
              "      <td>Стоимость: бесплатно</td>\n",
              "      <td>Ссылка: по регистрации</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>40</td>\n",
              "      <td>Кинопоказ</td>\n",
              "      <td>Классика, Образовательное</td>\n",
              "      <td>Показ и обсуждение фильма \"Большой Лебовски\"</td>\n",
              "      <td>В кофейне «Ностальгия» на Соколе сперва пройде...</td>\n",
              "      <td>Даты: 27 апреля в 18:30</td>\n",
              "      <td>Место: Москва,  2-я Песчаная, 4. м. Сокол (город)</td>\n",
              "      <td>Стоимость: 400 р</td>\n",
              "      <td>Ссылка: «Большой Лебовски»</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>44</td>\n",
              "      <td>Игры</td>\n",
              "      <td>Развлечения, История, Уличная</td>\n",
              "      <td>Культурно-исторический квест HSE RUN</td>\n",
              "      <td>Увлекательные загадки, интересные места столиц...</td>\n",
              "      <td>Даты: 28 апреля 10:30, старт квеста — 12:00.</td>\n",
              "      <td>Место: Москва, Старая Басманная, 21/4с1. м. Ку...</td>\n",
              "      <td>Стоимость: бесплатно</td>\n",
              "      <td>Ссылка: вот и вот</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>74</th>\n",
              "      <td>75</td>\n",
              "      <td>Экскурсия</td>\n",
              "      <td>Уличная, Литература</td>\n",
              "      <td>Булгаковская Москва — какая она?</td>\n",
              "      <td>Мистическая и романтичная! Убедиться в этом мо...</td>\n",
              "      <td>Даты: Ежедневно в 16:00</td>\n",
              "      <td>Место: Москва, Триумфальная пл., 2  (город)</td>\n",
              "      <td>Стоимость: 700р</td>\n",
              "      <td>Ссылка:  Купить билет</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>87</th>\n",
              "      <td>88</td>\n",
              "      <td>Перформанс</td>\n",
              "      <td>Еда, Кино, Классика</td>\n",
              "      <td>Гастрономический мюзикл «Москва слезам не верит»</td>\n",
              "      <td>Это совершенно новый для России формат театрал...</td>\n",
              "      <td>Даты: 18 апреля — 31 мая</td>\n",
              "      <td>Место: Москва, 3-я ул. Ямского Поля, 15 (город)</td>\n",
              "      <td>Стоимость: от 6000 ₽</td>\n",
              "      <td>Ссылка: Купить билет</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98</th>\n",
              "      <td>99</td>\n",
              "      <td>Концерт</td>\n",
              "      <td>Песни</td>\n",
              "      <td>Бесплатный концерт Мота и группы «Земляне»</td>\n",
              "      <td>На сцене выступят известные артисты: МОТ и Гру...</td>\n",
              "      <td>Даты: 12 апреля 18:00</td>\n",
              "      <td>Место: Москва, просп. Мира, 119, ВДНХ, Главная...</td>\n",
              "      <td>Стоимость: Вход свободный</td>\n",
              "      <td>Ссылка: -</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>114</th>\n",
              "      <td>115</td>\n",
              "      <td>Спектакль</td>\n",
              "      <td>Классика</td>\n",
              "      <td>Спектакль «Собачье сердце»</td>\n",
              "      <td>Актерский состав: Дмитрий Белоцерковский, Свят...</td>\n",
              "      <td>Даты: 3 мая в 14:00</td>\n",
              "      <td>Место: Театр Комедии</td>\n",
              "      <td>Стоимость: от 1200р, –75% по промокоду ТЕАТР</td>\n",
              "      <td>Ссылка: Билеты по ссылке здесь</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>136</th>\n",
              "      <td>138</td>\n",
              "      <td>Тусовка</td>\n",
              "      <td>Танцы, Музыка</td>\n",
              "      <td>Дебютная вечеринка команды R-99.</td>\n",
              "      <td>Она откроет серию мечтательно-дарковым звучани...</td>\n",
              "      <td>Даты: 28 апреля</td>\n",
              "      <td>Место: RNDM клуб</td>\n",
              "      <td>Стоимость: 2500 р</td>\n",
              "      <td>Ссылка: Билеты по ссылке.</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>145</th>\n",
              "      <td>147</td>\n",
              "      <td>Тусовка</td>\n",
              "      <td>Танцы, Музыка</td>\n",
              "      <td>NU: HARD HIGHTS в RNDM</td>\n",
              "      <td>Вечеринка тяжелой скоростной электроники и хар...</td>\n",
              "      <td>Даты: 3 мая с 22:00 до 07:00.</td>\n",
              "      <td>Место: клуб RNDM. Наставнический пер., 13/15, ...</td>\n",
              "      <td>Стоимость: предпродажа от 1000 ₽ по ссылке.</td>\n",
              "      <td>Ссылка: https://t.me/NotUnderground/215</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>164</th>\n",
              "      <td>166</td>\n",
              "      <td>Лекция</td>\n",
              "      <td>Кино, Мода</td>\n",
              "      <td>Нескромное обаяние женственности: 1950-е в мод...</td>\n",
              "      <td>Десятилетие расцвета парижской высокой моды и ...</td>\n",
              "      <td>Даты: 25 апреля 19:30</td>\n",
              "      <td>Место: Ермолаевский переулок, 17</td>\n",
              "      <td>Стоимость: 450 р</td>\n",
              "      <td>Ссылка: ссылка</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>186</th>\n",
              "      <td>188</td>\n",
              "      <td>Игры</td>\n",
              "      <td>История, Архитектура, Уличная</td>\n",
              "      <td>КОЛОМЕНСКОЕ</td>\n",
              "      <td>В Коломенском очень хорошо читаются изменения ...</td>\n",
              "      <td>Даты: -</td>\n",
              "      <td>Место: м Коломенская</td>\n",
              "      <td>Стоимость: 1200 р на компанию</td>\n",
              "      <td>Ссылка: ссылка</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>187</th>\n",
              "      <td>189</td>\n",
              "      <td>Игры</td>\n",
              "      <td>История, Литература, Уличная</td>\n",
              "      <td>ЛЮБОВНЫЕ ИСТОРИИ МОСКВЫ</td>\n",
              "      <td>Зачем нужен был фиктивный брак девушке, влюблё...</td>\n",
              "      <td>Даты: -</td>\n",
              "      <td>Место: м Тверская</td>\n",
              "      <td>Стоимость: 1200 р на компанию</td>\n",
              "      <td>Ссылка: ссылка</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>200</th>\n",
              "      <td>202</td>\n",
              "      <td>Спектакль</td>\n",
              "      <td>Танцы, Современное Искусство</td>\n",
              "      <td>Абсурдистский танцевальный спектакль</td>\n",
              "      <td>Танцевальный спектакль преподавателя Gogol Sch...</td>\n",
              "      <td>Даты: 25.04, в 20:00</td>\n",
              "      <td>Место: Москва, Георгиевский переулок, 3с3 Теат...</td>\n",
              "      <td>Стоимость: 1500р</td>\n",
              "      <td>Ссылка: Билетиксы тут</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5719f705-0606-49f6-9783-623a2b26a8a8')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5719f705-0606-49f6-9783-623a2b26a8a8 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5719f705-0606-49f6-9783-623a2b26a8a8');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-7501948b-e001-4977-9fa1-31144e9a7717\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7501948b-e001-4977-9fa1-31144e9a7717')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-7501948b-e001-4977-9fa1-31144e9a7717 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \")\",\n  \"rows\": 15,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 15,\n        \"samples\": [\n          \"138\",\n          \"166\",\n          \"20\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"\\u0422\\u0443\\u0441\\u043e\\u0432\\u043a\\u0430\",\n          \"\\u0412\\u044b\\u0441\\u0442\\u0430\\u0432\\u043a\\u0430\",\n          \"\\u041a\\u043e\\u043d\\u0446\\u0435\\u0440\\u0442\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"\\u0422\\u0430\\u043d\\u0446\\u044b, \\u041c\\u0443\\u0437\\u044b\\u043a\\u0430\",\n          \"\\u0418\\u0441\\u0442\\u043e\\u0440\\u0438\\u044f, \\u0410\\u0440\\u0445\\u0438\\u0442\\u0435\\u043a\\u0442\\u0443\\u0440\\u0430, \\u0423\\u043b\\u0438\\u0447\\u043d\\u0430\\u044f\",\n          \"\\u0418\\u0441\\u0442\\u043e\\u0440\\u0438\\u044f, \\u041a\\u0443\\u043b\\u044c\\u0442\\u0443\\u0440\\u044b, \\u041c\\u0443\\u0437\\u044b\\u043a\\u0430\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 15,\n        \"samples\": [\n          \"\\u0414\\u0435\\u0431\\u044e\\u0442\\u043d\\u0430\\u044f \\u0432\\u0435\\u0447\\u0435\\u0440\\u0438\\u043d\\u043a\\u0430 \\u043a\\u043e\\u043c\\u0430\\u043d\\u0434\\u044b R-99.\\u00a0\",\n          \"\\u041d\\u0435\\u0441\\u043a\\u0440\\u043e\\u043c\\u043d\\u043e\\u0435 \\u043e\\u0431\\u0430\\u044f\\u043d\\u0438\\u0435 \\u0436\\u0435\\u043d\\u0441\\u0442\\u0432\\u0435\\u043d\\u043d\\u043e\\u0441\\u0442\\u0438: 1950-\\u0435 \\u0432 \\u043c\\u043e\\u0434\\u0435 \\u0438 \\u0432 \\u043a\\u0438\\u043d\\u043e\",\n          \"\\u041d\\u0430\\u0437\\u0430\\u0434 \\u0432 \\u043f\\u0440\\u043e\\u0448\\u043b\\u043e\\u0435: \\u0432\\u0441\\u0442\\u0440\\u0435\\u0442\\u0438\\u0442\\u044c \\u043f\\u0440\\u0430\\u0437\\u0434\\u043d\\u0438\\u043a\\u0438 \\u0441 \\u043d\\u0430\\u0446\\u0438\\u043e\\u043d\\u0430\\u043b\\u044c\\u043d\\u044b\\u043c \\u043a\\u043e\\u043b\\u043e\\u0440\\u0438\\u0442\\u043e\\u043c \\u043d\\u0430 \\u0442\\u0430\\u043d\\u0446\\u043f\\u043e\\u043b\\u0435 \\u0432 \\u0421\\u0438\\u0441\\u0442\\u0435\\u0440\\u0441\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"desc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 15,\n        \"samples\": [\n          \"\\u041e\\u043d\\u0430 \\u043e\\u0442\\u043a\\u0440\\u043e\\u0435\\u0442 \\u0441\\u0435\\u0440\\u0438\\u044e \\u043c\\u0435\\u0447\\u0442\\u0430\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e-\\u0434\\u0430\\u0440\\u043a\\u043e\\u0432\\u044b\\u043c \\u0437\\u0432\\u0443\\u0447\\u0430\\u043d\\u0438\\u0435\\u043c \\u0438 \\u0437\\u0432\\u0435\\u0437\\u0434\\u043d\\u043e-\\u043f\\u043b\\u0435\\u043d\\u044f\\u044e\\u0449\\u0435\\u0439 \\u0430\\u0442\\u043c\\u043e\\u0441\\u0444\\u0435\\u0440\\u043e\\u0439. \\u041f\\u0435\\u0440\\u0432\\u044b\\u0439 \\u044d\\u043f\\u0438\\u0437\\u043e\\u0434 \\u043d\\u0430\\u043f\\u043e\\u043b\\u043d\\u0438\\u0442 \\u043a\\u043b\\u0443\\u0431 \\u0445\\u0430\\u0443\\u0441\\u043e\\u043c, \\u0442\\u0435\\u0445\\u043d\\u043e \\u0438 \\u0442\\u0440\\u0430\\u043d\\u0441\\u043e\\u043c. \\u0412 \\u043b\\u0430\\u0439\\u043d\\u0430\\u043f\\u0435 \\u2014 \\u0437\\u043d\\u0430\\u043a\\u043e\\u043c\\u044b\\u0435 \\u0441\\u0435\\u043b\\u0435\\u043a\\u0442\\u043e\\u0440\\u044b: \\u0440\\u0435\\u0437\\u0438\\u0434\\u0435\\u043d\\u0442 \\u043a\\u043e\\u043c\\u0430\\u043d\\u0434\\u044b Popoff Kitchen \\u0438 \\u043b\\u0435\\u0439\\u0431\\u043b-\\u043e\\u0443\\u043d\\u0435\\u0440 Moonoton, Bara Dvh \\u0438\\u0437 \\u041a\\u0440\\u0430\\u0441\\u043d\\u043e\\u044f\\u0440\\u0441\\u043a\\u0430, \\u0421\\u0430\\u0448\\u0430 \\u0428\\u0443\\u043b\\u0438\\u043a\\u043e \\u0438\\u0437 \\u0433\\u0440\\u0443\\u043f\\u043f\\u044b \\u00ab\\u0425\\u043b\\u0435\\u0431\\u00bb \\u0441 \\u0434\\u0438\\u0434\\u0436\\u0435\\u0439\\u0441\\u043a\\u0438\\u043c \\u0430\\u043b\\u044c\\u0442\\u0435\\u0440 \\u044d\\u0433\\u043e, \\u0430 \\u0442\\u0430\\u043a\\u0436\\u0435 Lolchto, Mayoung \\u0438 Queen of the Highway.\",\n          \"\\u0414\\u0435\\u0441\\u044f\\u0442\\u0438\\u043b\\u0435\\u0442\\u0438\\u0435 \\u0440\\u0430\\u0441\\u0446\\u0432\\u0435\\u0442\\u0430 \\u043f\\u0430\\u0440\\u0438\\u0436\\u0441\\u043a\\u043e\\u0439 \\u0432\\u044b\\u0441\\u043e\\u043a\\u043e\\u0439 \\u043c\\u043e\\u0434\\u044b \\u0438 \\u0441\\u043b\\u0430\\u0432\\u044b \\u0432\\u0435\\u043b\\u0438\\u043a\\u0438\\u0445 \\u043a\\u0443\\u0442\\u044e\\u0440\\u044c\\u0435 \\u2014 \\u041a\\u0440\\u0438\\u0441\\u0442\\u0438\\u0430\\u043d\\u0430 \\u0414\\u0438\\u043e\\u0440\\u0430, \\u041f\\u044c\\u0435\\u0440\\u0430 \\u0411\\u0430\\u043b\\u044c\\u043c\\u0435\\u043d\\u0430, \\u041a\\u0440\\u0438\\u0441\\u0442\\u043e\\u0431\\u0430\\u043b\\u044f \\u0411\\u0430\\u043b\\u0435\\u043d\\u0441\\u0438\\u0430\\u0433\\u0438, \\u042e\\u0431\\u0435\\u0440\\u0430 \\u0416\\u0438\\u0432\\u0430\\u043d\\u0448\\u0438, \\u043a\\u043e\\u0433\\u0434\\u0430 \\u0430\\u0431\\u0441\\u043e\\u043b\\u044e\\u0442\\u043d\\u0430\\u044f \\u044d\\u043b\\u0435\\u0433\\u0430\\u043d\\u0442\\u043d\\u043e\\u0441\\u0442\\u044c \\u0441\\u0442\\u0430\\u043b\\u0430 \\u043a\\u0430\\u043d\\u043e\\u043d\\u043e\\u043c. \\u041e\\u0431\\u043b\\u0430\\u0434\\u0430\\u0432\\u0448\\u0438\\u0435 \\u043d\\u0435\\u043e\\u0431\\u044b\\u043a\\u043d\\u043e\\u0432\\u0435\\u043d\\u043d\\u044b\\u043c \\u0432\\u043a\\u0443\\u0441\\u043e\\u043c, 1950-\\u0435 \\u0432\\u043e\\u0448\\u043b\\u0438 \\u0432 \\u0438\\u0441\\u0442\\u043e\\u0440\\u0438\\u044e \\u0438 \\u043a\\u0430\\u043a \\u0441\\u0430\\u043c\\u043e\\u0435 \\u043a\\u0440\\u0430\\u0441\\u0438\\u0432\\u043e\\u0435 \\u00ab\\u044d\\u043a\\u0440\\u0430\\u043d\\u043d\\u043e\\u0435\\u00bb \\u0434\\u0435\\u0441\\u044f\\u0442\\u0438\\u043b\\u0435\\u0442\\u0438\\u0435. \\u041a\\u0438\\u043d\\u043e \\u044d\\u0442\\u043e\\u0439 \\u044d\\u043f\\u043e\\u0445\\u0438 \\u2013 \\u044d\\u0442\\u043e \\u0438 \\u0443\\u0442\\u043e\\u043d\\u0447\\u0435\\u043d\\u043d\\u044b\\u0435 \\u0433\\u0435\\u0440\\u043e\\u0438\\u043d\\u0438 \\u041e\\u0434\\u0440\\u0438 \\u0425\\u0435\\u043f\\u0431\\u0435\\u0440\\u043d, \\u0438 \\u0431\\u0435\\u0437\\u0443\\u043f\\u0440\\u0435\\u0447\\u043d\\u044b\\u0435 \\u0431\\u043b\\u043e\\u043d\\u0434\\u0438\\u043d\\u043a\\u0438\\u00a0 \\u0432 \\u0444\\u0438\\u043b\\u044c\\u043c\\u0430\\u0445 \\u0425\\u0438\\u0447\\u043a\\u043e\\u043a\\u0430, \\u0438 \\u0447\\u0443\\u0432\\u0441\\u0442\\u0432\\u0435\\u043d\\u043d\\u044b\\u0435 \\u043a\\u043e\\u043a\\u0435\\u0442\\u043a\\u0438, \\u0441\\u043e\\u0437\\u0434\\u0430\\u043d\\u043d\\u044b\\u0435 \\u043d\\u0430 \\u044d\\u043a\\u0440\\u0430\\u043d\\u0435 \\u041c\\u0435\\u0440\\u0438\\u043b\\u0438\\u043d \\u041c\\u043e\\u043d\\u0440\\u043e \\u0438 \\u0411\\u0440\\u0438\\u0436\\u0438\\u0442 \\u0411\\u0430\\u0440\\u0434\\u043e. \\u0427\\u0435\\u043c \\u043e\\u0431\\u044a\\u044f\\u0441\\u043d\\u0438\\u0442\\u044c \\u0442\\u0430\\u043a\\u0443\\u044e \\u043f\\u043e\\u043f\\u0443\\u043b\\u044f\\u0440\\u043d\\u043e\\u0441\\u0442\\u044c 50-\\u0445 \\u0443 \\u0441\\u043e\\u0432\\u0440\\u0435\\u043c\\u0435\\u043d\\u043d\\u044b\\u0445 \\u0444\\u044d\\u0448\\u043d-\\u0434\\u0438\\u0437\\u0430\\u0439\\u043d\\u0435\\u0440\\u043e\\u0432 \\u0438 \\u0440\\u0435\\u0436\\u0438\\u0441\\u0441\\u0451\\u0440\\u043e\\u0432? \\u041e\\u0431\\u0440\\u0430\\u0449\\u0435\\u043d\\u0438\\u0435 \\u043a \\u043d\\u0438\\u043c \\u0434\\u0430\\u0435\\u0442 \\u0441\\u043e\\u0432\\u0440\\u0435\\u043c\\u0435\\u043d\\u043d\\u043e\\u043c\\u0443 \\u0447\\u0435\\u043b\\u043e\\u0432\\u0435\\u043a\\u0443 \\u0432\\u043e\\u0437\\u043c\\u043e\\u0436\\u043d\\u043e\\u0441\\u0442\\u044c \\u043f\\u043e\\u043c\\u0435\\u0447\\u0442\\u0430\\u0442\\u044c \\u043e \\u043d\\u0435\\u043a\\u043e\\u0439 \\u0438\\u0434\\u0435\\u0430\\u043b\\u044c\\u043d\\u043e\\u0439 \\u044d\\u043f\\u043e\\u0445\\u0435, \\u0432\\u043e\\u0441\\u0445\\u0438\\u0449\\u0430\\u0442\\u044c\\u0441\\u044f \\u0438\\u0437\\u044f\\u0449\\u0435\\u0441\\u0442\\u0432\\u043e\\u043c \\u0436\\u0435\\u043d\\u0449\\u0438\\u043d \\u0438 \\u0438\\u043c\\u043f\\u043e\\u0437\\u0430\\u043d\\u0442\\u043d\\u043e\\u0441\\u0442\\u044c\\u044e \\u043c\\u0443\\u0436\\u0447\\u0438\\u043d. \\u041d\\u0430 \\u044d\\u0442\\u043e\\u0439 \\u043b\\u0435\\u043a\\u0446\\u0438\\u0438 \\u043c\\u044b \\u0432\\u0441\\u043f\\u043e\\u043c\\u043d\\u0438\\u043c \\u043d\\u0435\\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0435 \\u0438\\u0437 \\u0441\\u0430\\u043c\\u044b\\u0445 \\u0443\\u0434\\u0430\\u0447\\u043d\\u044b\\u0445 \\u0438\\u043d\\u0442\\u0435\\u0440\\u043f\\u0440\\u0435\\u0442\\u0430\\u0446\\u0438\\u0439 \\u0441\\u0442\\u0438\\u043b\\u044f 1950-\\u0445 \\u0432 \\u0441\\u043e\\u0432\\u0440\\u0435\\u043c\\u0435\\u043d\\u043d\\u043e\\u0439 \\u043c\\u043e\\u0434\\u0435 \\u0438 \\u043d\\u0435\\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0435 \\u0438\\u0437 \\u0441\\u0430\\u043c\\u044b\\u0445 \\u043a\\u0440\\u0430\\u0441\\u0438\\u0432\\u044b\\u0445 \\u0441\\u043e\\u0432\\u0440\\u0435\\u043c\\u0435\\u043d\\u043d\\u044b\\u0445 \\u043b\\u0435\\u043d\\u0442, \\u043f\\u043e\\u0441\\u0432\\u044f\\u0449\\u0451\\u043d\\u043d\\u044b\\u0445 50-\\u043c.\",\n          \"\\u00ab\\u0425\\u041e\\u0420\\u041e\\u0412\\u041e\\u0414\\u00bb, \\u043e\\u0440\\u0433\\u0430\\u043d\\u0438\\u0437\\u043e\\u0432\\u0430\\u043d\\u043d\\u044b\\u0439 DU - UNDERGROUND SHOW, \\u043f\\u0440\\u0438\\u0433\\u043b\\u0430\\u0448\\u0430\\u0435\\u0442 \\u0432\\u0430\\u0441 \\u043d\\u0430 \\u0432\\u0435\\u0447\\u0435\\u0440, \\u043f\\u043e\\u043b\\u043d\\u044b\\u0439 \\u0444\\u043e\\u043b\\u044c\\u043a\\u043b\\u043e\\u0440\\u0430 \\u0438 \\u0438\\u0441\\u0442\\u043e\\u0440\\u0438\\u0447\\u0435\\u0441\\u043a\\u0438\\u0445 \\u044d\\u043f\\u043e\\u0445: \\u043e\\u0442 \\u0432\\u0440\\u0435\\u043c\\u0435\\u043d \\u0434\\u0440\\u0435\\u0432\\u043d\\u0438\\u0445 \\u0441\\u043b\\u0430\\u0432\\u044f\\u043d \\u0434\\u043e \\u0441\\u043e\\u0432\\u0440\\u0435\\u043c\\u0435\\u043d\\u043d\\u044b\\u0445 \\u043a\\u0443\\u043b\\u044c\\u0442\\u0443\\u0440\\u043d\\u044b\\u0445 \\u0442\\u0435\\u0447\\u0435\\u043d\\u0438\\u0439. \\u0416\\u0434\\u0438\\u0442\\u0435 \\u0437\\u0430\\u0445\\u0432\\u0430\\u0442\\u044b\\u0432\\u0430\\u044e\\u0449\\u0438\\u0445 \\u0432\\u044b\\u0441\\u0442\\u0443\\u043f\\u043b\\u0435\\u043d\\u0438\\u0439 \\u0432 \\u0442\\u0440\\u0435\\u0445 \\u0430\\u043a\\u0442\\u0430\\u0445, \\u043a\\u0430\\u0436\\u0434\\u044b\\u0439 \\u0438\\u0437 \\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0445 \\u043e\\u043a\\u0443\\u043d\\u0435\\u0442 \\u0432\\u0430\\u0441 \\u0432 \\u0443\\u043d\\u0438\\u043a\\u0430\\u043b\\u044c\\u043d\\u0443\\u044e \\u044d\\u043f\\u043e\\u0445\\u0443. \\u041c\\u0435\\u0436\\u0434\\u0443 \\u0430\\u043a\\u0442\\u0430\\u043c\\u0438 \\u043d\\u0435 \\u0443\\u043f\\u0443\\u0441\\u0442\\u0438\\u0442\\u0435 \\u0448\\u0430\\u043d\\u0441 \\u043f\\u043e\\u0441\\u0435\\u0442\\u0438\\u0442\\u044c \\u044f\\u0440\\u043c\\u0430\\u0440\\u043a\\u0443, \\u0433\\u0434\\u0435 \\u0441\\u043a\\u043e\\u043c\\u043e\\u0440\\u043e\\u0445\\u0438 \\u0438 \\u0448\\u0443\\u0442\\u044b \\u0432\\u043e\\u0432\\u043b\\u0435\\u043a\\u0443\\u0442 \\u0432\\u0430\\u0441 \\u0432 \\u043d\\u0430\\u0440\\u043e\\u0434\\u043d\\u044b\\u0435 \\u0438\\u0433\\u0440\\u044b \\u0438 \\u0440\\u0430\\u0437\\u0432\\u043b\\u0435\\u0447\\u0435\\u043d\\u0438\\u044f. \\u041f\\u0440\\u0438\\u0445\\u043e\\u0434\\u0438\\u0442\\u0435 \\u0432 \\u043d\\u0430\\u0440\\u043e\\u0434\\u043d\\u044b\\u0445 \\u043a\\u043e\\u0441\\u0442\\u044e\\u043c\\u0430\\u0445 \\u0438 \\u0443\\u0447\\u0430\\u0441\\u0442\\u0432\\u0443\\u0439\\u0442\\u0435 \\u0432 \\u0441\\u043c\\u043e\\u0442\\u0440\\u0438\\u043d\\u0435, \\u0433\\u0434\\u0435 \\u043c\\u043e\\u0436\\u043d\\u043e \\u0432\\u044b\\u0438\\u0433\\u0440\\u0430\\u0442\\u044c \\u044d\\u043a\\u0437\\u043e\\u0442\\u0438\\u0447\\u0435\\u0441\\u043a\\u0438\\u0435 \\u043b\\u0430\\u043a\\u043e\\u043c\\u0441\\u0442\\u0432\\u0430 \\u0438 \\u043f\\u0440\\u0435\\u043a\\u0440\\u0430\\u0441\\u043d\\u044b\\u0435 \\u043f\\u043e\\u0434\\u0430\\u0440\\u043a\\u0438. \\u0412 \\u0430\\u0440\\u0442\\u0438\\u0441\\u0442\\u0438\\u0447\\u0435\\u0441\\u043a\\u043e\\u043c \\u0441\\u043f\\u0438\\u0441\\u043a\\u0435 \\u2013 \\u044f\\u0440\\u043a\\u0438\\u0435 \\u0437\\u0432\\u0435\\u0437\\u0434\\u044b \\u0441\\u0446\\u0435\\u043d\\u044b, \\u0442\\u0430\\u043a\\u0438\\u0435 \\u043a\\u0430\\u043a \\u0410\\u0444\\u0444\\u0435\\u0440\\u0438\\u044f \\u041b\\u0430\\u0432, \\u041a\\u0438\\u0440\\u0430 \\u0421\\u0438\\u043c\\u0443\\u0440\\u0430 \\u0438 \\u0425\\u0430\\u0440\\u0434\\u0438, \\u0430 \\u0442\\u0430\\u043a\\u0436\\u0435 \\u0441\\u043f\\u0435\\u0446\\u0438\\u0430\\u043b\\u044c\\u043d\\u044b\\u0435 \\u0433\\u043e\\u0441\\u0442\\u0438: \\u041a\\u0430\\u043c\\u0438\\u043b\\u043b\\u0430 \\u041a\\u0440\\u0435\\u0439\\u0437\\u0438 \\u0412\\u0430\\u0439\\u0442 \\u0438 \\u041d\\u0438\\u043a\\u0438 \\u0414\\u0436\\u044d\\u043c.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"\\u0414\\u0430\\u0442\\u044b: 28 \\u0430\\u043f\\u0440\\u0435\\u043b\\u044f\",\n          \"\\u0414\\u0430\\u0442\\u044b: 25 \\u0430\\u043f\\u0440\\u0435\\u043b\\u044f 19:30\",\n          \"\\u0414\\u0430\\u0442\\u044b: 12 \\u043c\\u0430\\u044f 19:00\\u201323:30\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"loc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 15,\n        \"samples\": [\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: RNDM \\u043a\\u043b\\u0443\\u0431\",\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u0415\\u0440\\u043c\\u043e\\u043b\\u0430\\u0435\\u0432\\u0441\\u043a\\u0438\\u0439 \\u043f\\u0435\\u0440\\u0435\\u0443\\u043b\\u043e\\u043a, 17\",\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041c\\u043e\\u0441\\u043a\\u0432\\u0430, \\u0443\\u043b. \\u0411\\u043e\\u043b\\u044c\\u0448\\u0430\\u044f \\u041f\\u0435\\u0440\\u0435\\u044f\\u0441\\u043b\\u0430\\u0432\\u0441\\u043a\\u0430\\u044f, 46\\u04411\\u00a0 \\u041a\\u043b\\u0443\\u0431 \\u0421\\u0438\\u0441\\u0442\\u0435\\u0440\\u0441 (\\u0433\\u043e\\u0440\\u043e\\u0434)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 13,\n        \"samples\": [\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: 1200 \\u0440 \\u043d\\u0430 \\u043a\\u043e\\u043c\\u043f\\u0430\\u043d\\u0438\\u044e\",\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: \\u043f\\u0440\\u0435\\u0434\\u043f\\u0440\\u043e\\u0434\\u0430\\u0436\\u0430 \\u043e\\u0442 1000 \\u20bd \\u043f\\u043e \\u0441\\u0441\\u044b\\u043b\\u043a\\u0435.\",\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: \\u043e\\u0442 1200\\u0440.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"link\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: \\u0441\\u0441\\u044b\\u043b\\u043a\\u0430\",\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: https://t.me/NotUnderground/215\",\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: \\u041f\\u043e\\u0434\\u0440\\u043e\\u0431\\u043d\\u0435\\u0435\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "random.shuffle(forval)"
      ],
      "metadata": {
        "id": "gh_9qYI-QVml"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "event_data[event_data['id'].isin(forval)]\\\n",
        "    .set_index('id')\\\n",
        "    .reindex(forval)\\\n",
        "    .reset_index()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "jhaDmavrLr9x",
        "outputId": "8787701c-bcdc-49fd-f7e2-d4f47716ec95"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     id                cat_1                                cat_2  \\\n",
              "0   109             Выставка            Фотография, Мода, История   \n",
              "1    88           Перформанс                  Еда, Кино, Классика   \n",
              "2    30       Маркет, Лекция                Образовательное, Мода   \n",
              "3   147              Тусовка                        Танцы, Музыка   \n",
              "4   166               Лекция                           Кино, Мода   \n",
              "5    20           Перформанс            История, Культуры, Музыка   \n",
              "6   188                 Игры        История, Архитектура, Уличная   \n",
              "7    25             Выставка                    Живопись, История   \n",
              "8     3             Выставка                  Фотография, История   \n",
              "9   108             Выставка    Фотография, Современное Искусство   \n",
              "10  138              Тусовка                        Танцы, Музыка   \n",
              "11  115            Спектакль                             Классика   \n",
              "12  129  Погулять, Экскурсия  Уличная, Природа, Животные, История   \n",
              "13  189                 Игры         История, Литература, Уличная   \n",
              "14   40            Кинопоказ            Классика, Образовательное   \n",
              "15   75            Экскурсия                  Уличная, Литература   \n",
              "16   35            Кинопоказ                Классика, Мультфильмы   \n",
              "17  202            Спектакль         Танцы, Современное Искусство   \n",
              "18   44                 Игры        Развлечения, История, Уличная   \n",
              "19   99              Концерт                                Песни   \n",
              "\n",
              "                                                 name  \\\n",
              "0     Модницы XIX — начала ХХ века. Из коллекции МАММ   \n",
              "1    Гастрономический мюзикл «Москва слезам не верит»   \n",
              "2   Винтаж в особняке Леман: на выходных на Патриа...   \n",
              "3                              NU: HARD HIGHTS в RNDM   \n",
              "4   Нескромное обаяние женственности: 1950-е в мод...   \n",
              "5   Назад в прошлое: встретить праздники с национа...   \n",
              "6                                         КОЛОМЕНСКОЕ   \n",
              "7                    Выставка посвященная группе «13»   \n",
              "8     Алфавит. Советская фотография 1920-1930-х годов   \n",
              "9                         О всех вещах, там обитающих   \n",
              "10                  Дебютная вечеринка команды R-99.    \n",
              "11                         Спектакль «Собачье сердце»   \n",
              "12  Экотропы. «Захарьинская пойма» в заказнике «До...   \n",
              "13                            ЛЮБОВНЫЕ ИСТОРИИ МОСКВЫ   \n",
              "14      Показ и обсуждение фильма \"Большой Лебовски\"    \n",
              "15                   Булгаковская Москва — какая она?   \n",
              "16                 Кинопоказ фильма «Мальчик и птица»   \n",
              "17               Абсурдистский танцевальный спектакль   \n",
              "18              Культурно-исторический квест HSE RUN    \n",
              "19         Бесплатный концерт Мота и группы «Земляне»   \n",
              "\n",
              "                                                 desc  \\\n",
              "0   Мультимедиа Арт Музей, Москва представляет выс...   \n",
              "1   Это совершенно новый для России формат театрал...   \n",
              "2   Особняк Леман превратится в рай для любителей ...   \n",
              "3   Вечеринка тяжелой скоростной электроники и хар...   \n",
              "4   Десятилетие расцвета парижской высокой моды и ...   \n",
              "5   «ХОРОВОД», организованный DU - UNDERGROUND SHO...   \n",
              "6   В Коломенском очень хорошо читаются изменения ...   \n",
              "7   Выставка под названием «13. В переулках эпохи»...   \n",
              "8   Фундаментальное исследование одного из ярчайши...   \n",
              "9   Выставка соберёт более 50 работ впервые показа...   \n",
              "10  Она откроет серию мечтательно-дарковым звучани...   \n",
              "11  Актерский состав: Дмитрий Белоцерковский, Свят...   \n",
              "12  Ландшафтный заказник «Долина реки Сходни в Кур...   \n",
              "13  Зачем нужен был фиктивный брак девушке, влюблё...   \n",
              "14  В кофейне «Ностальгия» на Соколе сперва пройде...   \n",
              "15  Мистическая и романтичная! Убедиться в этом мо...   \n",
              "16  Показ от Киноклуба Дом Динамо и его кураторов ...   \n",
              "17  Танцевальный спектакль преподавателя Gogol Sch...   \n",
              "18  Увлекательные загадки, интересные места столиц...   \n",
              "19  На сцене выступят известные артисты: МОТ и Гру...   \n",
              "\n",
              "                                            date  \\\n",
              "0                               Даты: до 15 июля   \n",
              "1                      Даты: 18 апреля — 31 мая    \n",
              "2              Даты: 28 апреля с 11:00 до 21:00.   \n",
              "3                  Даты: 3 мая с 22:00 до 07:00.   \n",
              "4                          Даты: 25 апреля 19:30   \n",
              "5                       Даты: 12 мая 19:00–23:30   \n",
              "6                                        Даты: -   \n",
              "7                               Даты: до 2 июня.   \n",
              "8                               Даты: по 26 мая.   \n",
              "9                                Даты: до 26 мая   \n",
              "10                               Даты: 28 апреля   \n",
              "11                           Даты: 3 мая в 14:00   \n",
              "12                                       Даты: -   \n",
              "13                                       Даты: -   \n",
              "14                       Даты: 27 апреля в 18:30   \n",
              "15                       Даты: Ежедневно в 16:00   \n",
              "16                            Даты: 4 мая, 20:00   \n",
              "17                          Даты: 25.04, в 20:00   \n",
              "18  Даты: 28 апреля 10:30, старт квеста — 12:00.   \n",
              "19                        Даты: 12 апреля 18:00    \n",
              "\n",
              "                                                  loc  \\\n",
              "0     Место: Москва, ул. Остоженка, 16. МАММ. (город)   \n",
              "1     Место: Москва, 3-я ул. Ямского Поля, 15 (город)   \n",
              "2         Место: Москва, Гранатный пер., 7ст1.(город)   \n",
              "3   Место: клуб RNDM. Наставнический пер., 13/15, ...   \n",
              "4                    Место: Ермолаевский переулок, 17   \n",
              "5   Место: Москва, ул. Большая Переяславская, 46с1...   \n",
              "6                                Место: м Коломенская   \n",
              "7   Место: Москва, Ленинградский проспект, 15 ст 1...   \n",
              "8   Место: Москва, Якиманская набережная., 2/1. Це...   \n",
              "9   Место: Stella Art Foundation, 1-й Красногварде...   \n",
              "10                                   Место: RNDM клуб   \n",
              "11                               Место: Театр Комедии   \n",
              "12              Место:  55.907730, 37.386544 (далеко)   \n",
              "13                                  Место: м Тверская   \n",
              "14  Место: Москва,  2-я Песчаная, 4. м. Сокол (город)   \n",
              "15        Место: Москва, Триумфальная пл., 2  (город)   \n",
              "16  Место:  ГУМ, Красная площадь, 3, 2 этаж, 1 линия.   \n",
              "17  Место: Москва, Георгиевский переулок, 3с3 Теат...   \n",
              "18  Место: Москва, Старая Басманная, 21/4с1. м. Ку...   \n",
              "19  Место: Москва, просп. Мира, 119, ВДНХ, Главная...   \n",
              "\n",
              "                                           price  \\\n",
              "0                           Стоимость: бесплатно   \n",
              "1                           Стоимость: от 6000 ₽   \n",
              "2                          Стоимость: 400 рублей   \n",
              "3    Стоимость: предпродажа от 1000 ₽ по ссылке.   \n",
              "4                               Стоимость: 450 р   \n",
              "5                           Стоимость: от 1200р.   \n",
              "6                  Стоимость: 1200 р на компанию   \n",
              "7                       Стоимость: от 250 рублей   \n",
              "8        Стоимость: 300-500 ₽. Билеты по ссылке.   \n",
              "9                           Стоимость: бесплатно   \n",
              "10                             Стоимость: 2500 р   \n",
              "11  Стоимость: от 1200р, –75% по промокоду ТЕАТР   \n",
              "12                          Стоимость: бесплатно   \n",
              "13                 Стоимость: 1200 р на компанию   \n",
              "14                              Стоимость: 400 р   \n",
              "15                               Стоимость: 700р   \n",
              "16                          Стоимость: бесплатно   \n",
              "17                              Стоимость: 1500р   \n",
              "18                          Стоимость: бесплатно   \n",
              "19                     Стоимость: Вход свободный   \n",
              "\n",
              "                                                 link  \n",
              "0                                      Ссылка: ссылка  \n",
              "1                                Ссылка: Купить билет  \n",
              "2                                   Ссылка: Подробнее  \n",
              "3             Ссылка: https://t.me/NotUnderground/215  \n",
              "4                                      Ссылка: ссылка  \n",
              "5                                   Ссылка: Подробнее  \n",
              "6                                      Ссылка: ссылка  \n",
              "7                                   Ссылка: Подробнее  \n",
              "8   Ссылка: https://betoncvc.com/exhibitions/alfav...  \n",
              "9                                      Ссылка: ссылка  \n",
              "10                          Ссылка: Билеты по ссылке.  \n",
              "11                     Ссылка: Билеты по ссылке здесь  \n",
              "12                                          Ссылка: -  \n",
              "13                                     Ссылка: ссылка  \n",
              "14                         Ссылка: «Большой Лебовски»  \n",
              "15                              Ссылка:  Купить билет  \n",
              "16                             Ссылка: по регистрации  \n",
              "17                              Ссылка: Билетиксы тут  \n",
              "18                                  Ссылка: вот и вот  \n",
              "19                                          Ссылка: -  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9cc91615-e7d5-4e5f-b6d3-f85e0f5c6fd1\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>cat_1</th>\n",
              "      <th>cat_2</th>\n",
              "      <th>name</th>\n",
              "      <th>desc</th>\n",
              "      <th>date</th>\n",
              "      <th>loc</th>\n",
              "      <th>price</th>\n",
              "      <th>link</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>109</td>\n",
              "      <td>Выставка</td>\n",
              "      <td>Фотография, Мода, История</td>\n",
              "      <td>Модницы XIX — начала ХХ века. Из коллекции МАММ</td>\n",
              "      <td>Мультимедиа Арт Музей, Москва представляет выс...</td>\n",
              "      <td>Даты: до 15 июля</td>\n",
              "      <td>Место: Москва, ул. Остоженка, 16. МАММ. (город)</td>\n",
              "      <td>Стоимость: бесплатно</td>\n",
              "      <td>Ссылка: ссылка</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>88</td>\n",
              "      <td>Перформанс</td>\n",
              "      <td>Еда, Кино, Классика</td>\n",
              "      <td>Гастрономический мюзикл «Москва слезам не верит»</td>\n",
              "      <td>Это совершенно новый для России формат театрал...</td>\n",
              "      <td>Даты: 18 апреля — 31 мая</td>\n",
              "      <td>Место: Москва, 3-я ул. Ямского Поля, 15 (город)</td>\n",
              "      <td>Стоимость: от 6000 ₽</td>\n",
              "      <td>Ссылка: Купить билет</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>30</td>\n",
              "      <td>Маркет, Лекция</td>\n",
              "      <td>Образовательное, Мода</td>\n",
              "      <td>Винтаж в особняке Леман: на выходных на Патриа...</td>\n",
              "      <td>Особняк Леман превратится в рай для любителей ...</td>\n",
              "      <td>Даты: 28 апреля с 11:00 до 21:00.</td>\n",
              "      <td>Место: Москва, Гранатный пер., 7ст1.(город)</td>\n",
              "      <td>Стоимость: 400 рублей</td>\n",
              "      <td>Ссылка: Подробнее</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>147</td>\n",
              "      <td>Тусовка</td>\n",
              "      <td>Танцы, Музыка</td>\n",
              "      <td>NU: HARD HIGHTS в RNDM</td>\n",
              "      <td>Вечеринка тяжелой скоростной электроники и хар...</td>\n",
              "      <td>Даты: 3 мая с 22:00 до 07:00.</td>\n",
              "      <td>Место: клуб RNDM. Наставнический пер., 13/15, ...</td>\n",
              "      <td>Стоимость: предпродажа от 1000 ₽ по ссылке.</td>\n",
              "      <td>Ссылка: https://t.me/NotUnderground/215</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>166</td>\n",
              "      <td>Лекция</td>\n",
              "      <td>Кино, Мода</td>\n",
              "      <td>Нескромное обаяние женственности: 1950-е в мод...</td>\n",
              "      <td>Десятилетие расцвета парижской высокой моды и ...</td>\n",
              "      <td>Даты: 25 апреля 19:30</td>\n",
              "      <td>Место: Ермолаевский переулок, 17</td>\n",
              "      <td>Стоимость: 450 р</td>\n",
              "      <td>Ссылка: ссылка</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>20</td>\n",
              "      <td>Перформанс</td>\n",
              "      <td>История, Культуры, Музыка</td>\n",
              "      <td>Назад в прошлое: встретить праздники с национа...</td>\n",
              "      <td>«ХОРОВОД», организованный DU - UNDERGROUND SHO...</td>\n",
              "      <td>Даты: 12 мая 19:00–23:30</td>\n",
              "      <td>Место: Москва, ул. Большая Переяславская, 46с1...</td>\n",
              "      <td>Стоимость: от 1200р.</td>\n",
              "      <td>Ссылка: Подробнее</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>188</td>\n",
              "      <td>Игры</td>\n",
              "      <td>История, Архитектура, Уличная</td>\n",
              "      <td>КОЛОМЕНСКОЕ</td>\n",
              "      <td>В Коломенском очень хорошо читаются изменения ...</td>\n",
              "      <td>Даты: -</td>\n",
              "      <td>Место: м Коломенская</td>\n",
              "      <td>Стоимость: 1200 р на компанию</td>\n",
              "      <td>Ссылка: ссылка</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>25</td>\n",
              "      <td>Выставка</td>\n",
              "      <td>Живопись, История</td>\n",
              "      <td>Выставка посвященная группе «13»</td>\n",
              "      <td>Выставка под названием «13. В переулках эпохи»...</td>\n",
              "      <td>Даты: до 2 июня.</td>\n",
              "      <td>Место: Москва, Ленинградский проспект, 15 ст 1...</td>\n",
              "      <td>Стоимость: от 250 рублей</td>\n",
              "      <td>Ссылка: Подробнее</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>3</td>\n",
              "      <td>Выставка</td>\n",
              "      <td>Фотография, История</td>\n",
              "      <td>Алфавит. Советская фотография 1920-1930-х годов</td>\n",
              "      <td>Фундаментальное исследование одного из ярчайши...</td>\n",
              "      <td>Даты: по 26 мая.</td>\n",
              "      <td>Место: Москва, Якиманская набережная., 2/1. Це...</td>\n",
              "      <td>Стоимость: 300-500 ₽. Билеты по ссылке.</td>\n",
              "      <td>Ссылка: https://betoncvc.com/exhibitions/alfav...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>108</td>\n",
              "      <td>Выставка</td>\n",
              "      <td>Фотография, Современное Искусство</td>\n",
              "      <td>О всех вещах, там обитающих</td>\n",
              "      <td>Выставка соберёт более 50 работ впервые показа...</td>\n",
              "      <td>Даты: до 26 мая</td>\n",
              "      <td>Место: Stella Art Foundation, 1-й Красногварде...</td>\n",
              "      <td>Стоимость: бесплатно</td>\n",
              "      <td>Ссылка: ссылка</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>138</td>\n",
              "      <td>Тусовка</td>\n",
              "      <td>Танцы, Музыка</td>\n",
              "      <td>Дебютная вечеринка команды R-99.</td>\n",
              "      <td>Она откроет серию мечтательно-дарковым звучани...</td>\n",
              "      <td>Даты: 28 апреля</td>\n",
              "      <td>Место: RNDM клуб</td>\n",
              "      <td>Стоимость: 2500 р</td>\n",
              "      <td>Ссылка: Билеты по ссылке.</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>115</td>\n",
              "      <td>Спектакль</td>\n",
              "      <td>Классика</td>\n",
              "      <td>Спектакль «Собачье сердце»</td>\n",
              "      <td>Актерский состав: Дмитрий Белоцерковский, Свят...</td>\n",
              "      <td>Даты: 3 мая в 14:00</td>\n",
              "      <td>Место: Театр Комедии</td>\n",
              "      <td>Стоимость: от 1200р, –75% по промокоду ТЕАТР</td>\n",
              "      <td>Ссылка: Билеты по ссылке здесь</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>129</td>\n",
              "      <td>Погулять, Экскурсия</td>\n",
              "      <td>Уличная, Природа, Животные, История</td>\n",
              "      <td>Экотропы. «Захарьинская пойма» в заказнике «До...</td>\n",
              "      <td>Ландшафтный заказник «Долина реки Сходни в Кур...</td>\n",
              "      <td>Даты: -</td>\n",
              "      <td>Место:  55.907730, 37.386544 (далеко)</td>\n",
              "      <td>Стоимость: бесплатно</td>\n",
              "      <td>Ссылка: -</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>189</td>\n",
              "      <td>Игры</td>\n",
              "      <td>История, Литература, Уличная</td>\n",
              "      <td>ЛЮБОВНЫЕ ИСТОРИИ МОСКВЫ</td>\n",
              "      <td>Зачем нужен был фиктивный брак девушке, влюблё...</td>\n",
              "      <td>Даты: -</td>\n",
              "      <td>Место: м Тверская</td>\n",
              "      <td>Стоимость: 1200 р на компанию</td>\n",
              "      <td>Ссылка: ссылка</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>40</td>\n",
              "      <td>Кинопоказ</td>\n",
              "      <td>Классика, Образовательное</td>\n",
              "      <td>Показ и обсуждение фильма \"Большой Лебовски\"</td>\n",
              "      <td>В кофейне «Ностальгия» на Соколе сперва пройде...</td>\n",
              "      <td>Даты: 27 апреля в 18:30</td>\n",
              "      <td>Место: Москва,  2-я Песчаная, 4. м. Сокол (город)</td>\n",
              "      <td>Стоимость: 400 р</td>\n",
              "      <td>Ссылка: «Большой Лебовски»</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>75</td>\n",
              "      <td>Экскурсия</td>\n",
              "      <td>Уличная, Литература</td>\n",
              "      <td>Булгаковская Москва — какая она?</td>\n",
              "      <td>Мистическая и романтичная! Убедиться в этом мо...</td>\n",
              "      <td>Даты: Ежедневно в 16:00</td>\n",
              "      <td>Место: Москва, Триумфальная пл., 2  (город)</td>\n",
              "      <td>Стоимость: 700р</td>\n",
              "      <td>Ссылка:  Купить билет</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>35</td>\n",
              "      <td>Кинопоказ</td>\n",
              "      <td>Классика, Мультфильмы</td>\n",
              "      <td>Кинопоказ фильма «Мальчик и птица»</td>\n",
              "      <td>Показ от Киноклуба Дом Динамо и его кураторов ...</td>\n",
              "      <td>Даты: 4 мая, 20:00</td>\n",
              "      <td>Место:  ГУМ, Красная площадь, 3, 2 этаж, 1 линия.</td>\n",
              "      <td>Стоимость: бесплатно</td>\n",
              "      <td>Ссылка: по регистрации</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>202</td>\n",
              "      <td>Спектакль</td>\n",
              "      <td>Танцы, Современное Искусство</td>\n",
              "      <td>Абсурдистский танцевальный спектакль</td>\n",
              "      <td>Танцевальный спектакль преподавателя Gogol Sch...</td>\n",
              "      <td>Даты: 25.04, в 20:00</td>\n",
              "      <td>Место: Москва, Георгиевский переулок, 3с3 Теат...</td>\n",
              "      <td>Стоимость: 1500р</td>\n",
              "      <td>Ссылка: Билетиксы тут</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>44</td>\n",
              "      <td>Игры</td>\n",
              "      <td>Развлечения, История, Уличная</td>\n",
              "      <td>Культурно-исторический квест HSE RUN</td>\n",
              "      <td>Увлекательные загадки, интересные места столиц...</td>\n",
              "      <td>Даты: 28 апреля 10:30, старт квеста — 12:00.</td>\n",
              "      <td>Место: Москва, Старая Басманная, 21/4с1. м. Ку...</td>\n",
              "      <td>Стоимость: бесплатно</td>\n",
              "      <td>Ссылка: вот и вот</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>99</td>\n",
              "      <td>Концерт</td>\n",
              "      <td>Песни</td>\n",
              "      <td>Бесплатный концерт Мота и группы «Земляне»</td>\n",
              "      <td>На сцене выступят известные артисты: МОТ и Гру...</td>\n",
              "      <td>Даты: 12 апреля 18:00</td>\n",
              "      <td>Место: Москва, просп. Мира, 119, ВДНХ, Главная...</td>\n",
              "      <td>Стоимость: Вход свободный</td>\n",
              "      <td>Ссылка: -</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9cc91615-e7d5-4e5f-b6d3-f85e0f5c6fd1')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9cc91615-e7d5-4e5f-b6d3-f85e0f5c6fd1 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9cc91615-e7d5-4e5f-b6d3-f85e0f5c6fd1');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-11fa51da-d9fc-49dd-8310-d146a916e164\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-11fa51da-d9fc-49dd-8310-d146a916e164')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-11fa51da-d9fc-49dd-8310-d146a916e164 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"    \",\n  \"rows\": 20,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"109\",\n          \"202\",\n          \"75\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"\\u0418\\u0433\\u0440\\u044b\",\n          \"\\u0412\\u044b\\u0441\\u0442\\u0430\\u0432\\u043a\\u0430\",\n          \"\\u042d\\u043a\\u0441\\u043a\\u0443\\u0440\\u0441\\u0438\\u044f\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cat_2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          \"\\u0424\\u043e\\u0442\\u043e\\u0433\\u0440\\u0430\\u0444\\u0438\\u044f, \\u041c\\u043e\\u0434\\u0430, \\u0418\\u0441\\u0442\\u043e\\u0440\\u0438\\u044f\",\n          \"\\u0418\\u0441\\u0442\\u043e\\u0440\\u0438\\u044f, \\u041a\\u0443\\u043b\\u044c\\u0442\\u0443\\u0440\\u044b, \\u041c\\u0443\\u0437\\u044b\\u043a\\u0430\",\n          \"\\u0423\\u043b\\u0438\\u0447\\u043d\\u0430\\u044f, \\u041f\\u0440\\u0438\\u0440\\u043e\\u0434\\u0430, \\u0416\\u0438\\u0432\\u043e\\u0442\\u043d\\u044b\\u0435, \\u0418\\u0441\\u0442\\u043e\\u0440\\u0438\\u044f\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"\\u041c\\u043e\\u0434\\u043d\\u0438\\u0446\\u044b XIX \\u2014 \\u043d\\u0430\\u0447\\u0430\\u043b\\u0430 \\u0425\\u0425 \\u0432\\u0435\\u043a\\u0430. \\u0418\\u0437 \\u043a\\u043e\\u043b\\u043b\\u0435\\u043a\\u0446\\u0438\\u0438 \\u041c\\u0410\\u041c\\u041c\",\n          \"\\u0410\\u0431\\u0441\\u0443\\u0440\\u0434\\u0438\\u0441\\u0442\\u0441\\u043a\\u0438\\u0439 \\u0442\\u0430\\u043d\\u0446\\u0435\\u0432\\u0430\\u043b\\u044c\\u043d\\u044b\\u0439 \\u0441\\u043f\\u0435\\u043a\\u0442\\u0430\\u043a\\u043b\\u044c\",\n          \"\\u0411\\u0443\\u043b\\u0433\\u0430\\u043a\\u043e\\u0432\\u0441\\u043a\\u0430\\u044f \\u041c\\u043e\\u0441\\u043a\\u0432\\u0430 \\u2014 \\u043a\\u0430\\u043a\\u0430\\u044f \\u043e\\u043d\\u0430?\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"desc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"\\u041c\\u0443\\u043b\\u044c\\u0442\\u0438\\u043c\\u0435\\u0434\\u0438\\u0430 \\u0410\\u0440\\u0442 \\u041c\\u0443\\u0437\\u0435\\u0439, \\u041c\\u043e\\u0441\\u043a\\u0432\\u0430 \\u043f\\u0440\\u0435\\u0434\\u0441\\u0442\\u0430\\u0432\\u043b\\u044f\\u0435\\u0442 \\u0432\\u044b\\u0441\\u0442\\u0430\\u0432\\u043a\\u0443 \\u00ab\\u041c\\u043e\\u0434\\u043d\\u0438\\u0446\\u044b XIX \\u2014 \\u043d\\u0430\\u0447\\u0430\\u043b\\u0430 \\u0425\\u0425 \\u0432\\u0435\\u043a\\u0430. \\u0418\\u0437 \\u043a\\u043e\\u043b\\u043b\\u0435\\u043a\\u0446\\u0438\\u0438 \\u041c\\u0410\\u041c\\u041c\\u00bb, \\u0434\\u0435\\u043c\\u043e\\u043d\\u0441\\u0442\\u0440\\u0438\\u0440\\u0443\\u044e\\u0449\\u0443\\u044e \\u044d\\u0432\\u043e\\u043b\\u044e\\u0446\\u0438\\u044e \\u0440\\u043e\\u0441\\u0441\\u0438\\u0439\\u0441\\u043a\\u043e\\u0439 \\u043c\\u043e\\u0434\\u044b \\u0441 1860-\\u0445 \\u0434\\u043e 1910-\\u0445 \\u0433\\u043e\\u0434\\u043e\\u0432. \\u0427\\u0443\\u0442\\u043a\\u043e \\u043e\\u0442\\u043a\\u043b\\u0438\\u043a\\u0430\\u044f\\u0441\\u044c \\u043d\\u0430 \\u043f\\u0435\\u0440\\u0435\\u043c\\u0435\\u043d\\u044b \\u0432 \\u043e\\u0431\\u0449\\u0435\\u0441\\u0442\\u0432\\u0435, \\u043c\\u043e\\u0434\\u0430 \\u0432\\u0441\\u0435\\u0433\\u0434\\u0430 \\u2014 \\u0437\\u0435\\u0440\\u043a\\u0430\\u043b\\u043e \\u044d\\u043f\\u043e\\u0445\\u0438, \\u0430 \\u043a\\u043e\\u0441\\u0442\\u044e\\u043c\\u044b, \\u0430\\u043a\\u0441\\u0435\\u0441\\u0441\\u0443\\u0430\\u0440\\u044b \\u0438 \\u043f\\u0440\\u0438\\u0447\\u0435\\u0441\\u043a\\u0438 \\u2014 \\u043f\\u0440\\u0435\\u0432\\u043e\\u0441\\u0445\\u043e\\u0434\\u043d\\u044b\\u0435 \\u0440\\u0430\\u0441\\u0441\\u043a\\u0430\\u0437\\u0447\\u0438\\u043a\\u0438, \\u043f\\u043e\\u0432\\u0435\\u0441\\u0442\\u0432\\u0443\\u044e\\u0449\\u0438\\u0435 \\u043e\\u0431 \\u0438\\u0441\\u0442\\u043e\\u0440\\u0438\\u0447\\u0435\\u0441\\u043a\\u0438\\u0445 \\u0438 \\u0441\\u043e\\u0446\\u0438\\u0430\\u043b\\u044c\\u043d\\u044b\\u0445 \\u043f\\u0435\\u0440\\u0438\\u043f\\u0435\\u0442\\u0438\\u044f\\u0445, \\u0442\\u0435\\u0445\\u043d\\u0438\\u0447\\u0435\\u0441\\u043a\\u043e\\u043c \\u0438 \\u043a\\u0443\\u043b\\u044c\\u0442\\u0443\\u0440\\u043d\\u043e\\u043c \\u043f\\u0440\\u043e\\u0433\\u0440\\u0435\\u0441\\u0441\\u0435.\\u00a0 \\u0412\\u044b\\u0441\\u0442\\u0430\\u0432\\u043a\\u0430, \\u0441\\u043e\\u0437\\u0434\\u0430\\u043d\\u043d\\u0430\\u044f \\u043d\\u0430 \\u043e\\u0441\\u043d\\u043e\\u0432\\u0435 \\u043e\\u0431\\u0448\\u0438\\u0440\\u043d\\u043e\\u0433\\u043e \\u0441\\u043e\\u0431\\u0440\\u0430\\u043d\\u0438\\u044f \\u041c\\u0410\\u041c\\u041c, \\u0443\\u0441\\u043b\\u043e\\u0432\\u043d\\u043e \\u0434\\u0435\\u043b\\u0438\\u0442\\u0441\\u044f \\u043d\\u0430 \\u0432\\u043e\\u0441\\u0435\\u043c\\u044c \\u0440\\u0430\\u0437\\u0434\\u0435\\u043b\\u043e\\u0432: \\u00ab\\u041a\\u0440\\u0438\\u043d\\u043e\\u043b\\u0438\\u043d\\u044b\\u00bb, \\u00ab\\u0416\\u0435\\u043d\\u0449\\u0438\\u043d\\u0430-\\u0446\\u0432\\u0435\\u0442\\u043e\\u043a\\u00bb, \\u00ab\\u0414\\u0435\\u0432\\u0443\\u0448\\u043a\\u0438 \\u0432 \\u0443\\u043d\\u0438\\u0444\\u043e\\u0440\\u043c\\u0435\\u00bb, \\u00ab\\u041c\\u0435\\u0445\\u0430\\u00bb, \\u00ab\\u041c\\u0443\\u0436\\u0441\\u043a\\u0430\\u044f \\u043c\\u043e\\u0434\\u0430\\u00bb, \\u00ab\\u0410-\\u043b\\u044f \\u0440\\u044e\\u0441\\u00bb, \\u00ab\\u0428\\u043b\\u044f\\u043f\\u044b\\u00bb, \\u00ab\\u041f\\u0440\\u0438\\u0447\\u0435\\u0441\\u043a\\u0438\\u00bb, \\u0432 \\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0445 \\u0440\\u0430\\u0441\\u0441\\u043a\\u0430\\u0437\\u044b\\u0432\\u0430\\u0435\\u0442\\u0441\\u044f \\u043e \\u0433\\u043b\\u0430\\u0432\\u043d\\u044b\\u0445 \\u0442\\u0435\\u043d\\u0434\\u0435\\u043d\\u0446\\u0438\\u044f\\u0445 \\u043c\\u043e\\u0434\\u044b \\u0441\\u0435\\u0440\\u0435\\u0434\\u0438\\u043d\\u044b XIX \\u2014 \\u043d\\u0430\\u0447\\u0430\\u043b\\u0430 XX \\u0432\\u0435\\u043a\\u043e\\u0432. \\u041a\\u0430\\u0436\\u0434\\u044b\\u0439 \\u0438\\u0437 \\u0440\\u0430\\u0437\\u0434\\u0435\\u043b\\u043e\\u0432 \\u0441\\u043e\\u043f\\u0440\\u043e\\u0432\\u043e\\u0436\\u0434\\u0430\\u0435\\u0442\\u0441\\u044f \\u0442\\u0435\\u043a\\u0441\\u0442\\u043e\\u043c. \\u042d\\u0442\\u0438 \\u0442\\u0435\\u043a\\u0441\\u0442\\u044b \\u043d\\u0430\\u043f\\u0438\\u0441\\u0430\\u043d\\u044b \\u041e\\u043b\\u044c\\u0433\\u043e\\u0439 \\u0425\\u043e\\u0440\\u043e\\u0448\\u0438\\u043b\\u043e\\u0432\\u043e\\u0439 \\u2014 \\u0438\\u0437\\u0432\\u0435\\u0441\\u0442\\u043d\\u044b\\u043c \\u0438\\u0441\\u0442\\u043e\\u0440\\u0438\\u043a\\u043e\\u043c \\u043c\\u043e\\u0434\\u044b, \\u041b\\u0430\\u0440\\u0438\\u0441\\u043e\\u0439 \\u0417\\u0430\\u0439\\u0446\\u0435\\u0432\\u043e\\u0439 \\u2014 \\u0445\\u0440\\u0430\\u043d\\u0438\\u0442\\u0435\\u043b\\u0435\\u043c \\u043c\\u0443\\u0437\\u0435\\u0439\\u043d\\u043e\\u0433\\u043e \\u0444\\u043e\\u043d\\u0434\\u0430 \\u0444\\u043e\\u0442\\u043e\\u0433\\u0440\\u0430\\u0444\\u0438\\u0439.\",\n          \"\\u0422\\u0430\\u043d\\u0446\\u0435\\u0432\\u0430\\u043b\\u044c\\u043d\\u044b\\u0439 \\u0441\\u043f\\u0435\\u043a\\u0442\\u0430\\u043a\\u043b\\u044c \\u043f\\u0440\\u0435\\u043f\\u043e\\u0434\\u0430\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f Gogol School \\u0421\\u0430\\u0448\\u0438 \\u0428\\u0443\\u0439\\u0441\\u043a\\u043e\\u0433\\u043e \\u00ab\\u0424\\u0440\\u0430\\u0433\\u043c\\u0435\\u043d\\u0442\\u044b \\u043e\\u0436\\u0438\\u0434\\u0430\\u043d\\u0438\\u044f\\u00bb. \\u041e\\u0436\\u0438\\u0434\\u0430\\u043d\\u0438\\u0435\\u00a0\\u2014 \\u0435\\u0441\\u0442\\u0435\\u0441\\u0442\\u0432\\u0435\\u043d\\u043d\\u044b\\u0439 \\u043f\\u0440\\u043e\\u0446\\u0435\\u0441\\u0441, \\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0439 \\u0441\\u043e\\u043f\\u0440\\u043e\\u0432\\u043e\\u0436\\u0434\\u0430\\u0435\\u0442 \\u0447\\u0435\\u043b\\u043e\\u0432\\u0435\\u043a\\u0430 \\u0432\\u0441\\u044e \\u0436\\u0438\\u0437\\u043d\\u044c. \\u041c\\u044b\\u00a0\\u0436\\u0434\\u0435\\u043c, \\u043f\\u043e\\u0442\\u043e\\u043c\\u0443 \\u0447\\u0442\\u043e \\u0436\\u0434\\u0435\\u043c. \\u0416\\u0434\\u0435\\u043c, \\u043f\\u043e\\u0442\\u043e\\u043c\\u0443 \\u0447\\u0442\\u043e \\u043c\\u043e\\u0436\\u0435\\u043c \\u0436\\u0434\\u0430\\u0442\\u044c. \\u042d\\u0442\\u043e \\u043d\\u0430\\u0448\\u0430 \\u0436\\u0438\\u0437\\u043d\\u044c, \\u0438\\u00a0\\u043c\\u044b\\u00a0\\u0436\\u0434\\u0435\\u043c\\u00a0\\u0435\\u0435. \\u0424\\u0440\\u0430\\u0433\\u043c\\u0435\\u043d\\u0442\\u044b \\u043e\\u0436\\u0438\\u0434\\u0430\\u043d\\u0438\\u044f\\u00a0\\u2014 \\u044d\\u0442\\u043e \\u0444\\u0440\\u0430\\u0433\\u043c\\u0435\\u043d\\u0442\\u044b \\u043d\\u0430\\u0448\\u0435\\u0439 \\u0436\\u0438\\u0437\\u043d\\u0438. \\u0418\\u043b\\u0438 \\u0436\\u0438\\u0437\\u043d\\u0438 \\u043d\\u0435\\u00a0\\u043d\\u0430\\u0448\\u0435\\u0439, \\u043d\\u043e\\u00a0\\u043a\\u043e\\u0442\\u043e\\u0440\\u0443\\u044e \\u043c\\u044b\\u00a0\\u0431\\u044b\\u00a0\\u0445\\u043e\\u0442\\u0435\\u043b\\u0438 \\u0434\\u043e\\u0436\\u0434\\u0430\\u0442\\u044c\\u0441\\u044f. \\u041c\\u044b\\u00a0\\u0445\\u043e\\u0442\\u0438\\u043c \\u0437\\u043d\\u0430\\u0442\\u044c, \\u043a\\u0430\\u043a\\u0438\\u0435 \\u0441\\u043e\\u0431\\u044b\\u0442\\u0438\\u044f \\u043f\\u0440\\u043e\\u0438\\u0437\\u043e\\u0439\\u0434\\u0443\\u0442 \\u0432\\u00a0\\u043d\\u0430\\u0448\\u0435\\u0439 \\u0436\\u0438\\u0437\\u043d\\u0438 \\u0438\\u00a0\\u043a\\u0430\\u043a \\u043e\\u043d\\u0438 \\u043f\\u043e\\u0432\\u043b\\u0438\\u044f\\u044e\\u0442 \\u043d\\u0430\\u00a0\\u043d\\u0430\\u0441. \\u041d\\u043e\\u00a0\\u043f\\u043e\\u043a\\u0430 \\u043c\\u044b\\u00a0\\u0436\\u0434\\u0435\\u043c, \\u0436\\u0438\\u0437\\u043d\\u044c \\u043f\\u0440\\u043e\\u0445\\u043e\\u0434\\u0438\\u0442 \\u043c\\u0438\\u043c\\u043e \\u043d\\u0430\\u0441. \\u0421\\u043e\\u0437\\u0434\\u0430\\u0442\\u0435\\u043b\\u0438 \\u0441\\u043f\\u0435\\u043a\\u0442\\u0430\\u043a\\u043b\\u044f \\u0441\\u043e\\u0437\\u043d\\u0430\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e \\u0432\\u044b\\u0431\\u0440\\u0430\\u043b\\u0438 \\u0441\\u0442\\u0438\\u043b\\u044c \\u0421\\u044d\\u043c\\u044e\\u044d\\u043b\\u0430 \\u0411\\u0435\\u043a\\u043a\\u0435\\u0442\\u0430\\u00a0\\u2014 \\u043e\\u0434\\u043d\\u043e\\u0433\\u043e \\u0438\\u0437\\u00a0\\u0441\\u0430\\u043c\\u044b\\u0445 \\u044f\\u0440\\u043a\\u0438\\u0445 \\u043f\\u0440\\u0435\\u0434\\u0441\\u0442\\u0430\\u0432\\u0438\\u0442\\u0435\\u043b\\u0435\\u0439 \\u0430\\u0431\\u0441\\u0443\\u0440\\u0434\\u0438\\u0437\\u043c\\u0430 \\u0432\\u00a0\\u043b\\u0438\\u0442\\u0435\\u0440\\u0430\\u0442\\u0443\\u0440\\u0435.\",\n          \"\\u041c\\u0438\\u0441\\u0442\\u0438\\u0447\\u0435\\u0441\\u043a\\u0430\\u044f \\u0438 \\u0440\\u043e\\u043c\\u0430\\u043d\\u0442\\u0438\\u0447\\u043d\\u0430\\u044f! \\u0423\\u0431\\u0435\\u0434\\u0438\\u0442\\u044c\\u0441\\u044f \\u0432 \\u044d\\u0442\\u043e\\u043c \\u043c\\u043e\\u0436\\u043d\\u043e \\u043d\\u0430 \\u044d\\u043a\\u0441\\u043a\\u0443\\u0440\\u0441\\u0438\\u0438 \\u00ab\\u0411\\u0443\\u043b\\u0433\\u0430\\u043a\\u043e\\u0432\\u0441\\u043a\\u0430\\u044f \\u041c\\u043e\\u0441\\u043a\\u0432\\u0430. \\u041c\\u0438\\u0441\\u0442\\u0438\\u043a\\u0430 \\u0438 \\u0440\\u0435\\u0430\\u043b\\u044c\\u043d\\u043e\\u0441\\u0442\\u044c\\u00bb. \\u0412\\u043e \\u0432\\u0440\\u0435\\u043c\\u044f \\u043f\\u0440\\u043e\\u0433\\u0443\\u043b\\u043a\\u0438 \\u0432\\u044b \\u043f\\u043e\\u0437\\u043d\\u0430\\u043a\\u043e\\u043c\\u0438\\u0442\\u0435\\u0441\\u044c \\u0441\\u043e \\u0437\\u043d\\u0430\\u043a\\u043e\\u0432\\u044b\\u043c\\u0438 \\u043c\\u0435\\u0441\\u0442\\u0430\\u043c\\u0438 \\u0440\\u043e\\u043c\\u0430\\u043d\\u0430: \\u0434\\u043e\\u043c\\u043e\\u043c \\u041c\\u0430\\u0440\\u0433\\u0430\\u0440\\u0438\\u0442\\u044b, \\u0437\\u0434\\u0430\\u043d\\u0438\\u0435\\u043c \\u041c\\u0410\\u0421\\u0421\\u041e\\u041b\\u0418\\u0422\\u0430, \\u00ab\\u043d\\u0435\\u0445\\u043e\\u0440\\u043e\\u0448\\u0435\\u0439 \\u043a\\u0432\\u0430\\u0440\\u0442\\u0438\\u0440\\u043e\\u0439\\u00bb \\u0438 \\u0434\\u0440\\u0443\\u0433\\u0438\\u043c\\u0438. \\u0418 \\u0443\\u0437\\u043d\\u0430\\u0435\\u0442\\u0435 \\u043c\\u043d\\u043e\\u0433\\u043e \\u0438\\u043d\\u0442\\u0435\\u0440\\u0435\\u0441\\u043d\\u044b\\u0445 \\u0438 \\u0437\\u0430\\u0445\\u0432\\u0430\\u0442\\u044b\\u0432\\u0430\\u044e\\u0449\\u0438\\u0445 \\u0444\\u0430\\u043a\\u0442\\u043e\\u0432 \\u0438\\u0437 \\u0436\\u0438\\u0437\\u043d\\u0438 \\u043f\\u0438\\u0441\\u0430\\u0442\\u0435\\u043b\\u044f.\\u00a0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 18,\n        \"samples\": [\n          \"\\u0414\\u0430\\u0442\\u044b: \\u0434\\u043e 15 \\u0438\\u044e\\u043b\\u044f\",\n          \"\\u0414\\u0430\\u0442\\u044b: 18 \\u0430\\u043f\\u0440\\u0435\\u043b\\u044f \\u2014 31 \\u043c\\u0430\\u044f\\u00a0\",\n          \"\\u0414\\u0430\\u0442\\u044b: \\u043f\\u043e 26 \\u043c\\u0430\\u044f.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"loc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041c\\u043e\\u0441\\u043a\\u0432\\u0430, \\u0443\\u043b. \\u041e\\u0441\\u0442\\u043e\\u0436\\u0435\\u043d\\u043a\\u0430, 16. \\u041c\\u0410\\u041c\\u041c. (\\u0433\\u043e\\u0440\\u043e\\u0434)\",\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041c\\u043e\\u0441\\u043a\\u0432\\u0430, \\u0413\\u0435\\u043e\\u0440\\u0433\\u0438\\u0435\\u0432\\u0441\\u043a\\u0438\\u0439 \\u043f\\u0435\\u0440\\u0435\\u0443\\u043b\\u043e\\u043a, 3\\u04413 \\u0422\\u0435\\u0430\\u0442\\u0440 \\u0441\\u043e\\u0432\\u0440\\u0435\\u043c\\u0435\\u043d\\u043d\\u043e\\u0433\\u043e \\u0442\\u0430\\u043d\\u0446\\u0430 \\u00ab\\u0412\\u0441\\u0435\\u043c \\u0442\\u0435\\u043b\\u043e\\u043c\\u00bb\",\n          \"\\u041c\\u0435\\u0441\\u0442\\u043e: \\u041c\\u043e\\u0441\\u043a\\u0432\\u0430, \\u0422\\u0440\\u0438\\u0443\\u043c\\u0444\\u0430\\u043b\\u044c\\u043d\\u0430\\u044f \\u043f\\u043b., 2\\u00a0 (\\u0433\\u043e\\u0440\\u043e\\u0434)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 15,\n        \"samples\": [\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: 2500 \\u0440\",\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: 400 \\u0440\",\n          \"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c: \\u0431\\u0435\\u0441\\u043f\\u043b\\u0430\\u0442\\u043d\\u043e\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"link\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 13,\n        \"samples\": [\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: \\u0411\\u0438\\u043b\\u0435\\u0442\\u0438\\u043a\\u0441\\u044b \\u0442\\u0443\\u0442\",\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430:\\u00a0 \\u041a\\u0443\\u043f\\u0438\\u0442\\u044c \\u0431\\u0438\\u043b\\u0435\\u0442\",\n          \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430: \\u0441\\u0441\\u044b\\u043b\\u043a\\u0430\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 198
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "KFzJPjLxQHle"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}